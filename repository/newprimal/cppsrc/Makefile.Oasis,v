head	1.1;
access;
symbols
	A3_0_59:1.1
	LATEST:1.1
	A3_0_1:1.1;
locks; strict;
comment	@# @;


1.1
date	2000.05.12.07.43.56;	author mbd;	state Exp;
branches;
next	;


desc
@@


1.1
log
@

Added:
- Modified files to compile with g++ - this is the initial import of those
  files.

TODO:
- Test it all works 100%
@
text
@# Generated automatically from Makefile.in by configure.
# CircleMUD 3.0 Makefile.in - Makefile template used by 'configure'
#

# C compiler to use
CC = gcc

# Path to cxref utility
CXREF = cxref

# Any special flags you want to pass to the compiler
MYFLAGS = -Wall

#flags for profiling (see hacker.doc for more information)
PROFILE = 

##############################################################################
# Do Not Modify Anything Below This Line (unless you know what you're doing) #
##############################################################################

BINDIR = ../bin

CFLAGS = -g -O2 $(MYFLAGS) $(PROFILE)

LIBS =   

OBJFILES = act.comm.o act.informative.o act.item.o act.movement.o \
	act.offensive.o act.other.o act.social.o act.wizard.o alias.o ban.o \
	boards.o castle.o class.o comm.o config.o constants.o db.o fight.o \
	genmob.o genobj.o genolc.o genshp.o genwld.o genzon.o graph.o \
	handler.o house.o improved-edit.o interpreter.o limits.o magic.o \
	mail.o medit.o mobact.o modify.o oasis.o objsave.o oedit.o olc.o \
	random.o redit.o sedit.o shop.o spec_assign.o spec_procs.o \
	spell_parser.o spells.o tedit.o utils.o weather.o zedit.o

CXREF_FILES = act.comm.c act.informative.c act.item.c act.movement.c \
	act.offensive.c act.other.c act.social.c act.wizard.c alias.c ban.c \
	boards.c castle.c class.c comm.c config.c constants.c db.c fight.c \
	genmob.c genobj.c genolc.c genshp.c genwld.c genzon.c graph.c \
	handler.c house.c improved-edit.c interpreter.c limits.c magic.c \
	mail.c medit.c mobact.c modify.c oasis.c objsave.c oedit.c olc.c \
	random.c redit.c sedit.c shop.c spec_assign.c spec_procs.c \
	spell_parser.c spells.c tedit.c utils.c weather.c zedit.c

default: all

all: .accepted
	$(MAKE) $(BINDIR)/circle
	$(MAKE) utils

.accepted:
	@@./licheck less

utils: .accepted
	(cd util; $(MAKE) all)
circle:
	$(MAKE) $(BINDIR)/circle

$(BINDIR)/circle : $(OBJFILES)
	$(CC) -o $(BINDIR)/circle $(PROFILE) $(OBJFILES) $(LIBS)

clean:
	rm -f *.o
ref:
#
# Create the cross reference files
# Note, this is not meant to be used unless you've installed cxref...
#
	@@for file in $(CXREF_FILES) ; do \
	  echo Cross referencing $$file ; \
	  $(CXREF) -D__CXREF__ -xref -Odoc -Ncircle $$file ; \
	done
#
# Create the source files using cxref
#
	@@for file in $(CXREF_FILES) ; do \
	   echo Documenting $$file ; \
	   ( cd . ; $(CXREF) -D__CXREF__ -warn-xref -xref -Odoc -Ncircle -html $$file ) ; \
	   rm -f $(DOCS) ; \
	done
#
# Create the index using cxref
#
	@@echo Indexing
	@@( cd . ; $(CXREF) -D__CXREF__ -index-all -Odoc -Ncircle -html )
	@@rm -f $(DOCS)
#
# Make html files for the .h files
#
	@@echo Creating .h.html files...
	@@for file in *.h ; do \
	  echo $$file ; \
	  cat /home/jelson/mud/htmlh-head $$file /home/jelson/mud/htmlh-tail > doc/$$file.html ; \
	done
# Copy over to the html directory
	cp doc/*.html /home/jelson/public_html/circle/cdp/cxref
	chmod 644 /home/jelson/public_html/circle/cdp/cxref/*.html

# Dependencies for the object files (automagically generated with
# gcc -MM)

depend:
	$(CC) -MM *.c > depend
act.build.o: act.build.c
	$(CC) -c $(CFLAGS) act.build.c
act.comm.o: act.comm.c conf.h sysdep.h structs.h utils.h comm.h \
 interpreter.h handler.h db.h screen.h improved-edit.h
	$(CC) -c $(CFLAGS) act.comm.c
act.informative.o: act.informative.c conf.h sysdep.h structs.h utils.h \
 comm.h interpreter.h handler.h db.h spells.h screen.h constants.h
	$(CC) -c $(CFLAGS) act.informative.c
act.item.o: act.item.c conf.h sysdep.h structs.h utils.h comm.h \
 interpreter.h handler.h db.h spells.h constants.h
	$(CC) -c $(CFLAGS) act.item.c
act.movement.o: act.movement.c conf.h sysdep.h structs.h utils.h \
 comm.h interpreter.h handler.h db.h spells.h house.h constants.h
	$(CC) -c $(CFLAGS) act.movement.c
act.offensive.o: act.offensive.c conf.h sysdep.h structs.h utils.h \
 comm.h interpreter.h handler.h db.h spells.h
	$(CC) -c $(CFLAGS) act.offensive.c
act.other.o: act.other.c conf.h sysdep.h structs.h utils.h comm.h \
 interpreter.h handler.h db.h spells.h screen.h house.h constants.h
	$(CC) -c $(CFLAGS) act.other.c
act.social.o: act.social.c conf.h sysdep.h structs.h utils.h comm.h \
 interpreter.h handler.h db.h spells.h
	$(CC) -c $(CFLAGS) act.social.c
act.wizard.o: act.wizard.c conf.h sysdep.h structs.h utils.h comm.h \
 interpreter.h handler.h db.h spells.h house.h screen.h constants.h \
 oasis.h
	$(CC) -c $(CFLAGS) act.wizard.c
alias.o: alias.c conf.h sysdep.h structs.h utils.h interpreter.h db.h
	$(CC) -c $(CFLAGS) alias.c
ban.o: ban.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h \
 handler.h db.h
	$(CC) -c $(CFLAGS) ban.c
boards.o: boards.c conf.h sysdep.h structs.h utils.h comm.h db.h \
 boards.h interpreter.h handler.h
	$(CC) -c $(CFLAGS) boards.c
castle.o: castle.c conf.h sysdep.h structs.h utils.h comm.h \
 interpreter.h handler.h db.h spells.h
	$(CC) -c $(CFLAGS) castle.c
class.o: class.c conf.h sysdep.h structs.h db.h utils.h spells.h \
 interpreter.h constants.h
	$(CC) -c $(CFLAGS) class.c
comm.o: comm.c
	$(CC) -c $(CFLAGS) comm.c
config.o: config.c conf.h sysdep.h structs.h interpreter.h
	$(CC) -c $(CFLAGS) config.c
constants.o: constants.c
	$(CC) -c $(CFLAGS) constants.c
db.o: db.c
	$(CC) -c $(CFLAGS) db.c
fight.o: fight.c conf.h sysdep.h structs.h utils.h comm.h handler.h \
 interpreter.h db.h spells.h screen.h constants.h
	$(CC) -c $(CFLAGS) fight.c
genmob.o: genmob.c
	$(CC) -c $(CFLAGS) genmob.c
genobj.o: genobj.c
	$(CC) -c $(CFLAGS) genobj.c
genolc.o: genolc.c
	$(CC) -c $(CFLAGS) genolc.c
genshp.o: genshp.c
	$(CC) -c $(CFLAGS) genshp.c
genwld.o: genwld.c
	$(CC) -c $(CFLAGS) genwld.c
genzon.o: genzon.c
	$(CC) -c $(CFLAGS) genzon.c
graph.o: graph.c
	$(CC) -c $(CFLAGS) graph.c
handler.o: handler.c conf.h sysdep.h structs.h utils.h comm.h db.h \
 handler.h interpreter.h spells.h
	$(CC) -c $(CFLAGS) handler.c
house.o: house.c conf.h sysdep.h structs.h comm.h handler.h db.h \
 interpreter.h utils.h house.h constants.h
	$(CC) -c $(CFLAGS) house.c
improved-edit.o: improved-edit.c
	$(CC) -c $(CFLAGS) improved-edit.c
interpreter.o: interpreter.c
	$(CC) -c $(CFLAGS) interpreter.c
limits.o: limits.c conf.h sysdep.h structs.h utils.h spells.h comm.h \
 db.h handler.h interpreter.h
	$(CC) -c $(CFLAGS) limits.c
magic.o: magic.c conf.h sysdep.h structs.h utils.h comm.h spells.h \
 handler.h db.h interpreter.h
	$(CC) -c $(CFLAGS) magic.c
mail.o: mail.c conf.h sysdep.h structs.h utils.h comm.h db.h \
 interpreter.h handler.h mail.h
	$(CC) -c $(CFLAGS) mail.c
medit.o: medit.c
	$(CC) -c $(CFLAGS) medit.c
mobact.o: mobact.c conf.h sysdep.h structs.h utils.h db.h comm.h \
 interpreter.h handler.h spells.h constants.h
	$(CC) -c $(CFLAGS) mobact.c
modify.o: modify.c
	$(CC) -c $(CFLAGS) modify.c
oasis.o: oasis.c
	$(CC) -c $(CFLAGS) oasis.c
objsave.o: objsave.c conf.h sysdep.h structs.h comm.h handler.h db.h \
 interpreter.h utils.h spells.h
	$(CC) -c $(CFLAGS) objsave.c
oedit.o: oedit.c
	$(CC) -c $(CFLAGS) oedit.c
olc.o: olc.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h \
 handler.h db.h olc.h
	$(CC) -c $(CFLAGS) olc.c
random.o: random.c
	$(CC) -c $(CFLAGS) random.c
redit.o: redit.c
	$(CC) -c $(CFLAGS) redit.c
sedit.o: sedit.c
	$(CC) -c $(CFLAGS) sedit.c
shop.o: shop.c conf.h sysdep.h structs.h comm.h handler.h db.h \
 interpreter.h utils.h shop.h constants.h
	$(CC) -c $(CFLAGS) shop.c
spec_assign.o: spec_assign.c conf.h sysdep.h structs.h db.h \
 interpreter.h utils.h
	$(CC) -c $(CFLAGS) spec_assign.c
spec_procs.o: spec_procs.c conf.h sysdep.h structs.h utils.h comm.h \
 interpreter.h handler.h db.h spells.h constants.h
	$(CC) -c $(CFLAGS) spec_procs.c
spell_parser.o: spell_parser.c conf.h sysdep.h structs.h utils.h \
 interpreter.h spells.h handler.h comm.h db.h
	$(CC) -c $(CFLAGS) spell_parser.c
spells.o: spells.c
	$(CC) -c $(CFLAGS) spells.c
tedit.o: tedit.c
	$(CC) -c $(CFLAGS) tedit.c
utils.o: utils.c conf.h sysdep.h structs.h utils.h db.h comm.h \
 screen.h spells.h handler.h interpreter.h
	$(CC) -c $(CFLAGS) utils.c
weather.o: weather.c conf.h sysdep.h structs.h utils.h comm.h \
 handler.h interpreter.h db.h
	$(CC) -c $(CFLAGS) weather.c
zedit.o: zedit.c
	$(CC) -c $(CFLAGS) zedit.c
@
