head	1.43;
access;
symbols
	A3_0_59:1.8
	LATEST:1.8
	A3_0_1:1.8;
locks; strict;
comment	@ * @;


1.43
date	2004.08.27.01.47.31;	author mud;	state Exp;
branches;
next	1.42;

1.42
date	2004.05.24.11.39.40;	author mud;	state Exp;
branches;
next	1.41;

1.41
date	2004.05.21.14.15.00;	author mud;	state Exp;
branches;
next	1.40;

1.40
date	2004.05.06.02.23.30;	author mud;	state Exp;
branches;
next	1.39;

1.39
date	2004.02.23.03.00.36;	author mud;	state Exp;
branches;
next	1.38;

1.38
date	2004.01.25.07.58.59;	author mud;	state Exp;
branches;
next	1.37;

1.37
date	2004.01.21.06.24.08;	author mud;	state Exp;
branches;
next	1.36;

1.36
date	2003.12.24.01.25.28;	author mud;	state Exp;
branches;
next	1.35;

1.35
date	2003.12.17.02.25.06;	author mud;	state Exp;
branches;
next	1.34;

1.34
date	2003.12.09.05.42.45;	author mud;	state Exp;
branches;
next	1.33;

1.33
date	2003.11.21.02.48.05;	author mud;	state Exp;
branches;
next	1.32;

1.32
date	2003.11.17.12.36.24;	author mud;	state Exp;
branches;
next	1.31;

1.31
date	2003.11.15.01.42.17;	author mud;	state Exp;
branches;
next	1.30;

1.30
date	2003.11.14.06.25.13;	author mud;	state Exp;
branches;
next	1.29;

1.29
date	2003.11.13.01.05.29;	author mud;	state Exp;
branches;
next	1.28;

1.28
date	2003.11.03.11.26.17;	author mud;	state Exp;
branches;
next	1.27;

1.27
date	2003.10.20.12.01.49;	author mud;	state Exp;
branches;
next	1.26;

1.26
date	2002.07.20.08.17.56;	author mud;	state Exp;
branches;
next	1.25;

1.25
date	2002.04.07.05.14.11;	author mud;	state Exp;
branches;
next	1.24;

1.24
date	2002.01.23.06.32.02;	author primal;	state Exp;
branches;
next	1.23;

1.23
date	2001.11.25.12.12.45;	author rod;	state Exp;
branches;
next	1.22;

1.22
date	2001.11.20.14.41.13;	author rod;	state Exp;
branches;
next	1.21;

1.21
date	2001.11.20.05.00.52;	author artus;	state Exp;
branches;
next	1.20;

1.20
date	2001.10.28.06.37.47;	author karma;	state Exp;
branches;
next	1.19;

1.19
date	2001.08.12.01.45.00;	author artus;	state Exp;
branches;
next	1.18;

1.18
date	2001.08.11.14.12.52;	author artus;	state Exp;
branches;
next	1.17;

1.17
date	2001.06.26.23.44.26;	author primal;	state Exp;
branches;
next	1.16;

1.16
date	2001.06.21.13.40.13;	author artus;	state Exp;
branches;
next	1.15;

1.15
date	2001.06.09.03.39.15;	author artus;	state Exp;
branches;
next	1.14;

1.14
date	2001.05.26.07.27.18;	author primal;	state Exp;
branches;
next	1.13;

1.13
date	2001.05.23.11.26.22;	author primal;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.05.12.01.17;	author rod;	state Exp;
branches;
next	1.11;

1.11
date	2001.04.11.14.31.17;	author artus;	state Exp;
branches;
next	1.10;

1.10
date	2001.02.06.09.46.35;	author primal;	state Exp;
branches;
next	1.9;

1.9
date	2001.02.02.04.34.46;	author primal;	state Exp;
branches;
next	1.8;

1.8
date	2001.01.20.23.41.26;	author primal;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.17.13.15.15;	author primal;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.28.21.12.20;	author primal;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.05.02.28.46;	author primal;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.26.07.52.27;	author primal;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.13.00.59.18;	author primal;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.22.09.22.34;	author talisman;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.12.07.43.58;	author mbd;	state Exp;
branches;
next	;


desc
@@


1.43
log
@Artus> Added thaco_ac for levels 101-105.
@
text
@/* ************************************************************************
*   File: constants.c                                   Part of CircleMUD *
*  Usage: Numeric and string contants used by the MUD                     *
*                                                                         *
*  All rights reserved.  See license.doc for complete information.        *
*                                                                         *
*  Copyright (C) 1993, 94 by the Trustees of the Johns Hopkins University *
*  CircleMUD is based on DikuMUD, Copyright (C) 1990, 1991.               *
************************************************************************ */

#include "conf.h"
#include "sysdep.h"

#include "structs.h"
#include "interpreter.h"	/* alias_data */

cpp_extern const char *circlemud_version =
	"PrimalMUD, version 3.00 based on CircleMUD, version 3.00 beta patchlevel 17";

int vote_level = 10;

const char *cmd_types[NUM_CMD_TYPES + 1] =
{
  "None",
  "Wizard",
  "Skill",
  "Communication",
  "Combat",
  "Info",
  "Movement",
  "Item",
  "Social",
  "Util",
  "Shop",
  "Misc",
  "Writing",
  "Specials",
  "\n"
};

const char *social_ranks[] =
{
  	"Criminal",
	"Outlaw",
	"Undesirable",
	"Lower class",
	"Citizen",
	"Upper class",
	"Land owner",
	"Guildmaster",
	"Noble",
	"Politician",
	"Mayor",
	"\n"
};

const char *cmd_bhelp[NUM_CMD_TYPES] =
{
  "Commands unassigned, or undisplayable.",             // CMD_NONE
  "Immortal commands.",                                 // CMD_WIZ
  "Used for skills.",                                   // CMD_SKILL
  "Used for communication.",                            // CMD_COMM
  "Combat or fighting commands.",                       // CMD_COMBAT
  "Used to display information.",                       // CMD_INFO
  "Used for movement.",                                 // CMD_MOVE
  "Using objects and items.",                           // CMD_OBJD 
  "Socials commands.",                                  // CMD_SOCIAL
  "Utility commands.",                                  // CMD_UTIL
  "Used for shops.",                                    // CMD_SHOP
  "Miscellous commands.",                               // CMD_MISC 
  "Used for writing on boards and mail.",               // CMD_MAIL
  "Used for race specials."                             // CMD_SPEC
};

/* strings corresponding to ordinals/bitvectors in structs.h ***********/
const char *sort_names[] =
{
  "alphabetical",
  "ascending",
  "descending",
  "\n"
};

/* The world names */
const char *world_names[] =
{
  "Medieval",
  "West World",
  "Future World",
  "\n"
};

const char *quest_names[] =
{
  "Unknown",
  "Item Hunt",
  "Trivia"
};

// Values are the Index position in const char *COLOURLIST[] (colour.c) 
cpp_extern const int default_colour_codes[] =
{
  2,    //"Headings",
  3,    //"Sub Headings",
  14,   //"Help Headings",
  2,    //"Help Attribute Headings",
  6,    //"Commands",
  2,    //"Objects",
  3,    //"Mobs",
  3,    //"Players",
  6,    //"Room Headings",
  0     //"Unused"
};

cpp_extern const float class_modifiers[NUM_CLASSES] =
{
 
        0.7,            // Magician
        0.65,           // Cleric
        0.5,            // Thief
        0.6,            // Warrior
        1.2,            // Druid
        1.0,            // Priest
        1.1,            // Nightblade
        1.2,            // Battlemage
        1.15,           // Spellsword
        1.2,            // Paladin
        1.5             // Master
//DM - dropped first level remorts by 0.2 and master by 0.25 15/05/2002
};
 
cpp_extern const float race_modifiers[MAX_RACES] =
{
  0.1,  // Ogre
  0.3,  // Deva
  0.25, // Minotaur
  0.2,  // Elf
  0.0,  // Human
  0.2,  // Dwarf
  0.25  // Pixie
};    

/* (Note: strings for class definitions in class.c instead of here) */
/* enhancement text names */
const char* enhancement_names[] =
{
        "None",
        "Strength",
        "Dexterity",
        "Intelligence",
        "Wisdom",
        "Constitution",
        "Charisma",
        "Class (Unused)",
        "Level (Unused)",
        "Age",
        "Weight",
        "Height",
        "Mana",
        "HitPoints",
        "Movement",
        "Gold (Unused)",
        "Experience (Unused)", 
        "AC",
        "Hitroll",
        "Damroll",
        "Saving_Para",
        "Saving_Rod",
        "Saving_Petri",
        "Saving_Breath",
        "Saving_Spell",
        "\n"
};      

/* cardinal directions */
const char *dirs[] =
{
  "north",
  "east",
  "south",
  "west",
  "up",
  "down",
  "\n"
};


const char *special_ability_bits[] =
{
	"Perm-Invis",
	"Perm-Sneak",
	"MultiWeapon",
	"ForestPower",
	"ForestHelp",
	"Healer",
	"Priest",
	"CombatBackstab",
	"CombatEnhanced",
	"ManaThief",
	"Holy",
	"Disguise",
	"Escape",
	"PermInfra",
	"DwarfFighter",
	"Perm-GroupSneak",
	"ThiefEnhanced",
	"Gore",
	"Minotaur",
	"Charmer",
	"Superman",
	"Perm-Fly",
	"ElfFighter",
	"Tracker",
	"\n"
};

/* ROOM_x */
const char *room_bits[] =
{
  "DARK",
  "DEATH",
  "!MOB",
  "INDOORS",
  "PEACEFUL",
  "SOUNDPROOF",
  "!TRACK",
  "!MAGIC",
  "TUNNEL",
  "PRIVATE",
  "GODROOM",
  "HOUSE",
  "HCRSH",
  "ATRIUM",
  "OLC",
  "*",				/* BFS MARK */
  "NEWBIE",
  "LVL_5 (obs)",
  "LVL_10 (obs)",
  "LVL_15 (obs)",
  "LVL_20 (obs)",
  "LVL_25 (obs)",
  "LVL_30 (obs)",
  "ETERNAL",
  "REGENx2",
  "REGEN/2",
  "!SLEEP",
  "ANGEL",
  "IMMORT",
  "GOD",
  "IMPL",
  "\n"
};


/* EX_x */
const char *exit_bits[] =
{
  "DOOR",
  "CLOSED",
  "LOCKED",
  "PICKPROOF",
  "\n"
};


/* SECT_ */
const char *sector_types[][11] =
{
  { "Inside",
    "City",
    "Field",
    "Forest",
    "Hills",
    "Mountains",
    "Water (Swim)",
    "Water (No Swim)",
    "Underwater",
    "In Flight",
    "\n" },

  { "None",
    "Thin",
    "Unbreathable",
    "Vacuum",
    "Corrosive",
    "\n"},
 
  { "None",
    "Hot",
    "Scorch",
    "Incinerate",
    "Cold",
    "Freezing",
    "Abszero",
    "\n"},

  { "None",
    "Double Gravity",
    "Triple Gravity",
    "Crush",
    "\n"},

  { "None",
    "Rad1",
    "Dispell",
    "\n"}
};
/*
 * SEX_x
 * Not used in sprinttype() so no \n.
 */
const char *genders[] =
{
  "neutral",
  "male",
  "female",
  "random",
  "\n"
};


/* POS_x */
const char *position_types[] =
{
  "Dead",
  "Mortally wounded",
  "Incapacitated",
  "Stunned",
  "Sleeping",
  "Resting",
  "Sitting",
  "Fighting",
  "Standing",
  "\n"
};


/* PLR_x */
const char *player_bits[] =
{
  "KILLER",
  "THIEF",
  "FROZEN",
  "DONTSET",
  "WRITING",
  "MAILING",
  "CSH",
  "SITEOK",
  "NOSHOUT",
  "NOTITLE",
  "DELETED",
  "LOADRM",
  "!WIZL",
  "!DEL",
  "INVST",
  "CRYO",
  "!IGNORE",
  "SPECIAL",
  "GODMAIL",
  "MOUNTED",
  "!INFOCMD",
  "REPORTING",
  "\n"
};  

/* EXT_x */
const char *extended_bits[] =
{
  "!NEWBIE",
  "!CTALK",
  "CLAN",
  "PKILL",
  "UNDEFINED",
  "AUTOGOLD",
  "AUTOLOOT",
  "AUTOSPLIT",
  "!HINT",
  "GHOST",
  "AUTOCORPSE",
  "AUTOEAT",
  "\n"
};

/* MOB_x */
const char *action_bits[] =
{
  "SPEC",
  "SENTINEL",
  "SCAVENGER",
  "ISNPC",
  "AWARE",
  "AGGR",
  "STAY-ZONE",
  "WIMPY",
  "AGGR_EVIL",
  "AGGR_GOOD",
  "AGGR_NEUTRAL",
  "MEMORY",
  "HELPER",
  "!CHARM",
  "!SUMMN",
  "!SLEEP",
  "!BASH",
  "!BLIND",
  "QUEST",
  "INTELLIGENT",
  "2ND",
  "3RD",
  "!STEAL",
  "MOUNT",
  "!KILL",
  "\n"
};

/* Punishment Types - ARTUS */
const char *punish_types[] =
{
  "Freeze",
  "Mute",
  "Notitle",
  "Laggy",
  "Low_Exp",
  "Low_Regen",
  "Aggravate",
  "\n"
};

/* Offence Types - ARTUS */
const char *offence_types[] =
{
  "Pkill",
  "Swearing",
  "Spamming",
  "Bug_Abuse",
  "Newbie_Kill",
  "Robbing",
  "Twat",
  "\n"
};

/* PRF_x */
const char *preference_bits[] =
{
  "BRIEF",
  "COMPACT",
  "DEAF",
  "!TELL",
  "D_HP",
  "D_MANA",
  "D_MOVE",
  "AUTOEX",
  "!HASS",
  "QUEST",
  "SUMN",
  "!REP",
  "LIGHT",
  "C1",
  "C2",
  "!WIZ",
  "L1",
  "L2",
  "!AUC",
  "!GOS",
  "!GTZ",
  "RMFLG",
  "CLS",
  "!IMMNET",
  "AFK",
  "WEREWOLF",
  "VAMPIRE", 
  "TAG",
  "MORTALKOMBAT",
  "DISPXP",
  "DISPALIGN",
  "!INFO",
  "\n"
};

const char *timer_bits[] = 
{
  "HEALING_SKILL",
  "ADRENALINE",
  "\n"
};

/* AFF_x */
const char *affected_bits[] =
{
  "BLIND",
  "INVIS",
  "DET-ALIGN",
  "DET-INVIS",
  "DET-MAGIC",
  "SENSE-LIFE",
  "WATWALK",
  "SANCT",
  "GROUP",
  "CURSE",
  "INFRA",
  "POISON",
  "PROT-EVIL",
  "PROT-GOOD",
  "SLEEP",
  "!TRACK",
  "REFLECT",
  "FLY",
  "SNEAK",
  "HIDE",
  "PARALYZED",
  "CHARM",
  "WATERBREATHE",
  "HASTE",
  "ADV-INVIS",
  "DET-ADV-INVIS",
  "!HASSLE",
  "BROKEN-IN",
  "ADRENALINE",
  "!DISARM",
  "BERSERK",
  "SENSE-WOUNDS",
  "\n"
};

const char *battery_types[] =
{
  "mana",
  "\n"
};

const char *timer_types[] =
{
  "!UNUSED!",
  "healing skills",
  "poison blade",
  "dark ritual",
  "berserk",
  "trapping",
  "meditate",
  "shield mastery",
  "healing trance",
  "timer 10",
  "timer 11",
  "timer 12",
  "timer 13",
  "timer 14",
  "timer 15",
  "timer 16",
  "timer 17",
  "timer 18",
  "timer 19",
  "timer 20",
  "timer 21",
  "timer 22",
  "timer 23",
  "timer 24",
  "timer 25",
  "timer 26",
  "timer 27",
  "timer 28",
  "timer 29",
  "timer 30",
  "timer 31",
  "timer 32",
  "\n"
};

/* CON_x */
const char *connected_types[] =
{
  "Playing",		// 0
  "Disconnecting",
  "Get name",
  "Confirm name",
  "Get password",
  "Get new PW",		// 5
  "Confirm new PW",
  "Select sex",
  "Select class",
  "Reading MOTD",
  "Main Menu",		// 10
  "Get descript.",
  "Changing PW 1",
  "Changing PW 2",
  "Changing PW 3",
  "Self-Delete 1",	// 15
  "Self-Delete 2",
  "Disconnecting",
  "Object edit",
  "Room edit",
  "Zone edit",		// 20
  "Mobile edit",
  "Shop edit",
  "Text edit",
  "Select race",
  "Verify stats",	// 25
  "Choosing colour",
  "Adding Report",
  "Editing Report",
  "Trigger edit",
  "Create (Pause)",	// 30
  "Create (Menu)",
  "Create (Class Help)",
  "Create (Class Pause)",
  "Create (Race Help)",
  "Create (Race Pause)",// 35
  "\n"
};

/*
                     -------------------------------------------
New Positions        | Dev | Min | Hum | Dwa | Elf | Pix | Ogr |
-------------        -------------------------------------------
Eyes                 |  x  |  x  |  x  |  x  |  x  |  x  |     |
Ear 1                |     |  x  |     |  x  |  x  |  x  |  x  |
Ear 2                |     |  x  |     |  x  |     |  x  |  x  |
Anklet 1             |  x  |     |     |  x  |  x  |  x  |     |
Anklet 2             |  x  |     |     |  x  |  x  |  x  |     |
Finger 1             |  *  |  *  |  *  |  *  |  *  |  *  |  *  |
Finger 2             |  *  |  *  |  *  |  *  |  *  |  *  |  *  |
Finger 3             |  *  |  *  |  *  |  *  |  *  |  *  |  *  |
Finger 4             |  *  |  *  |  *  |  *  |  *  |  *  |  *  |
Finger 5             |  *  |  *  |  *  |  *  |  *  |  *  |  *  |
-------------        -------------------------------------------

The ring positions are class dependent as follows:

Class:          Number Rings
-----------------------------
Warrior             1
Thief               2
Cleric              2
Mage                3

Paladin    (wc)     3
Priest     (tc)     3
Nightblade (wt)     3
Spellsword (tm)     4
Battlemage (wm)     4
Druid      (cm)     5

Master     (wtcm)   5

                     -------------------------------------------
Old Positions        | Dev | Min | Hum | Dwa | Elf | Pix | Ogr |
-------------        -------------------------------------------
Light                |  x  |  x  |  x  |  x  |  x  |  x  |  x  |
Finger (moved above) |-----------------------------------------|
Finger (moved above) |-----------------------------------------|
Neck                 |  x  |  x  |  x  |  x  |  x  |  x  |     |
Neck                 |  x  |  x  |  x  |  x  |  x  |  x  |     |
Body                 |  x  |  x  |  x  |  x  |  x  |  x  |  x  |
Head                 |  x  |     |  x  |  x  |  x  |  x  |  x  |
Legs                 |  x  |     |  x  |  x  |  x  |  x  |  x  |
Feet                 |  x  |     |  x  |  x  |  x  |  x  |     |
Hands                |  x  |  x  |  x  |  x  |  x  |  x  |     |
Arms                 |  x  |  x  |  x  |  x  |  x  |  x  |  x  |
Shield               |  x  |  x  |  x  |  x  |  x  |  x  |  x  |
Body                 |  x  |  x  |  x  |  x  |  x  |  x  |  x  |
Waist                |  x  |  x  |  x  |  x  |  x  |  x  |  x  |
Wrist                |  x  |  x  |  x  |  x  |  x  |  x  |  x  |
Wrist                |  x  |  x  |  x  |  x  |  x  |  x  |  x  |
Wielded              |  x  |  x  |  x  |  x  |  x  |  x  |  x  |
Held                 |  x  |  x  |  x  |  x  |  x  |  x  |  x  |
-------------        -------------------------------------------
*/

// Light fin1 fin2 neck1 neck2 body head legs feet hands arms shield body
// waist wrist1 wrist2 wield held fin3 fin4 fin5 eyes ear1 ear2 ankle1 andkle2

// These masks store the commented information above - the defined eq 
// positions for each race, (finger positions must be treated as per class!). 
//    MSB (bit 26)            -    LSB
// WEAR_ANKLE_2 (last eq pos) - WEAR_LIGHT 
cpp_extern const long pc_race_eq_masks[MAX_RACES] = 
{
  14679271, // Ogre
  54525951, // Deva
  16776767, // Min
  58720255, // Elf
  4194303, // Human
  67108863, // Dwarf
  67108863 // Pixie 
};


// With the addition of extra wear positions, this array stores in order the
// number for each wear position (as the new ones start from 18, but are to be
// displayed in an unacending order - in equipment and look char). Otherwise all
// the eq positions for the existing eq will need to be modified - ouch. DM
cpp_extern const int wear_positions[] = 
{
  WEAR_LIGHT, 
  WEAR_FINGER_1, 
  WEAR_FINGER_2, 
  WEAR_FINGER_3, 
  WEAR_FINGER_4, 
  WEAR_FINGER_5, 
  WEAR_NECK_1, 
  WEAR_NECK_2, 
  WEAR_BODY, 
  WEAR_HEAD, 
  WEAR_EAR_1,
  WEAR_EAR_2,
  WEAR_EYES, 
  WEAR_LEGS, 
  WEAR_ANKLE_1, 
  WEAR_ANKLE_2, 
  WEAR_FEET, 
  WEAR_HANDS, 
  WEAR_ARMS, 
  WEAR_SHIELD, 
  WEAR_ABOUT, 
  WEAR_WAIST, 
  WEAR_WRIST_R, 
  WEAR_WRIST_L, 
  WEAR_WIELD,
  WEAR_HOLD 
};  

/*
 * WEAR_x - for eq list (order defined in wear_positions - structs.h)
 * Not use in sprinttype() so no \n.
 */
const char *where[] =
{
  "<used as light>      ",
  "<worn on finger>     ",
  "<worn on finger>     ",
  "<worn around neck>   ",
  "<worn around neck>   ",
  "<worn on body>       ",
  "<worn on head>       ",
  "<worn on legs>       ",
  "<worn on feet>       ",
  "<worn on hands>      ",
  "<worn on arms>       ",
  "<worn as shield>     ",
  "<worn about body>    ",
  "<worn about waist>   ",
  "<worn around wrist>  ",
  "<worn around wrist>  ",
  "<wielded>            ",
  "<held>               ",
  // New positions - order is defined in wear_positions DM
  "<worn on finger>     ",
  "<worn on finger>     ",
  "<worn on finger>     ",
  "<worn on eyes>       ",
  "<worn on ear>        ",
  "<worn on ear>        ",
  "<worn on ankle>      ",
  "<worn on ankle>      "
};


/* WEAR_x - for stat */
const char *equipment_types[] =
{
  "Used as light",
  "Worn on finger 1",
  "Worn on finger 2",
  "First worn around Neck",
  "Second worn around Neck",
  "Worn on body",
  "Worn on head",
  "Worn on legs",
  "Worn on feet",
  "Worn on hands",
  "Worn on arms",
  "Worn as shield",
  "Worn about body",
  "Worn around waist",
  "Worn around right wrist",
  "Worn around left wrist",
  "Wielded",
  "Held",
  // New positions
  "Worn on finger 3",
  "Worn on finger 4",
  "Worn on finger 5",
  "Worn on eyes",
  "Worn on ear 1",
  "Worn on ear 2",
  "Worn on ankle 1",
  "Worn on ankle 2",
  "\n"
};

/* ITEM_x (ordinal object types) */
const char *item_types[] =
{
  "UNDEFINED",
  "LIGHT",
  "SCROLL",
  "WAND",
  "STAFF",
  "WEAPON",
  "FIRE WEAPON - UNIMPL",
  "MISSILE - UNIMPL",
  "TREASURE",
  "ARMOR",
  "POTION",
  "WORN",
  "OTHER",
  "TRASH",
  "TRAP",
  "CONTAINER",
  "NOTE",
  "LIQ CONTAINER",
  "KEY",
  "FOOD",
  "MONEY",
  "PEN",
  "BOAT",
  "FOUNTAIN",
  "MAGIC_EQ",
  "JOINABLE",
  "BATTERY",
  "QUEST",
  "REWARD",
  "UNDEFINED",
  "RESPIRATOR",
  "BREATHER",
  "VACSUIT",
  "ENVIRON",
  "STASIS",
  "HEAT_RES",
  "HEAT_PROOF",
  "COLD_RES",
  "FREEZE",
  "GRAV",
  "HIGH_GRAV",
  "GATEWAY",
  "RADPROOF",
  "\n"
};

cpp_extern const int default_item_damage[] = 
{
	0,		// No item at position 0
	5,		// Light
	2,		// Scroll
	4,		// Wand
	7,		// Staff
        50,		// Weapon
	15,		// Fireweapon
	3,		// Missile
	50,		// Treasure
	75,		// Armor
	1,		// Potion
	20,		// Worn		(10)
	20,		// Other
	5,		// Trash
	-1,		// Trap
	100,		// Container
	1,		// Note
	20,		// Drink container
	-1,		// Key
	3,		// Food
	40,		// Money
	8,		// Pen
	35,		// Boat
	-1,		// Fountain
	80,		// Magic EQ
	30,		// Joinable
	25,		// Battery
        -1, 	 	// Empty
	-1,		//   "
	-1, 		//   "
	15,		// Respirator
	15,		// Breather
	35,		// VacSuit
	150,		// Environ
	-1,		// Stasis
	50,		// Heat res
	75,		// Heat proof
	50,		// Cold res
	75,		// Subzero
	30,		// Grav1
	40,		// Grav3
	-1,		// Gateway
	-1		// Rad proof
	
};


/* ITEM_WEAR_ (wear bitvector) */
const char *wear_bits[] =
{
  "TAKE",
  "FINGER",
  "NECK",
  "BODY",
  "HEAD",
  "LEGS",
  "FEET",
  "HANDS",
  "ARMS",
  "SHIELD",
  "ABOUT",
  "WAIST",
  "WRIST",
  "WIELD",
  "HOLD",
  "EYES",
  "EAR",
  "ANKLE",
  "\n"
};
 
/* ITEM_x (extra bits) */
const char *extra_bits[] =
{
  "GLOW",
  "HUM",
  "!RENT",
  "!DONATE",
  "!INVIS",
  "INVISIBLE",
  "MAGIC",
  "!DROP",
  "BLESS",
  "!GOOD",
  "!EVIL",
  "!NEUTRAL",
  "!MAGE",
  "!CLERIC",
  "!THIEF",
  "!WARRIOR",
  "!SELL",
  "RIDDEN",
  "HIDDEN",
  "!DRUID",
  "!PRIEST",
  "!NIGHTBLADE",
  "!BATTLEMAGE",
  "!SPELLSWORD",
  "!HUNGER",
  "!THIRST",
  "!DRUNK",
  "!PALADIN",
  "!MASTER",
  "QEQ",
  "\n"
};

/* ZONE_x (flag bits) bm 12/94*/
const char *zone_flagbits[] =
{
  "PKILL",
  "NEWB",
  "LR_5",
  "LR_10",
  "LR_15",
  "LR_20",
  "LR_25",
  "LR_30",
  "LR_35",
  "LR_40",
  "LR_45",
  "LR_50",
  "LR_55",
  "LR_60",
  "LR_65",
  "LR_70",
  "LR_75",
  "LR_80",
  "LR_85",
  "LR_90",
  "LR_95",
  "LR_ET",
  "LR_IMM",
  "LR_IMP",
  "!STEAL",
  "!TELEPORT",
  "!GOLDRUSH",
  "\n"
};  

const char *level_bits[] =
{
	"LR_1",
	"LR_2",
	"LR_3",
	"LR_4",
	"LR_5",
	"LR_6",
	"LR_7",
	"LR_8",
	"LR_9",
	"LR_10",
	"LR_11",
	"LR_12",
	"LR_13",
	"LR_14",
	"LR_15",
	"LR_16",
	"LR_17",
	"LR_18",
	"LR_19",
	"LR_20",
	"LR_21",
	"LR_22",
	"LR_23",
	"LR_24",
	"LR_25",
	"LR_26",
	"LR_27",
	"LR_28",
	"LR_29",
	"LR_30",
	"LR_31",
	"LR_32",
	"LR_33",
	"LR_34",
	"LR_35",
	"LR_36",
	"\n"
};

/* APPLY_x */
const char *apply_types[] =
{
  "NONE",
  "STR",
  "DEX",
  "INT",
  "WIS",
  "CON",
  "CHA",
  "CLASS",
  "LEVEL",
  "AGE",
  "CHAR_WEIGHT",
  "CHAR_HEIGHT",
  "MAXMANA",
  "MAXHIT",
  "MAXMOVE",
  "GOLD",
  "EXP",
  "ARMOR",
  "HITROLL",
  "DAMROLL",
  "SAVING_PARA",
  "SAVING_ROD",
  "SAVING_PETRI",
  "SAVING_BREATH",
  "SAVING_SPELL",
  "\n"
};


/* CONT_x */
const char *container_bits[] =
{
  "CLOSEABLE",
  "PICKPROOF",
  "CLOSED",
  "LOCKED",
  "\n",
};


/* LIQ_x */
const char *drinks[] =
{
  "water",
  "beer",
  "wine",
  "ale",
  "dark ale",
  "whisky",
  "lemonade",
  "firebreather",
  "local speciality",
  "slime mold juice",
  "milk",
  "tea",
  "coffee",
  "blood",
  "salt water",
  "clear water",
  "\n"
};


/* other constants for liquids ******************************************/


/* one-word alias for each drink */
const char *drinknames[] =
{
  "water",
  "beer",
  "wine",
  "ale",
  "ale",
  "whisky",
  "lemonade",
  "firebreather",
  "local",
  "juice",
  "milk",
  "tea",
  "coffee",
  "blood",
  "salt",
  "water",
  "champagne",
  "\n"
};

/* Thaco/Ac Stuffs -- Artus */
cpp_extern const int thaco_ac[LVL_IMMORT+1][NUM_CLASSES] =
{
//  Mu, Cl, Th, Wa, Dr, Pr, Ni, Ba, Sp, Pa, Ma 
  { 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20 }, // 0
  { 19, 19, 18, 18, 18, 18, 17, 17, 17, 17, 16 },
  { 19, 19, 18, 18, 18, 18, 17, 17, 17, 17, 16 },
  { 19, 19, 18, 18, 18, 18, 17, 17, 17, 17, 16 },
  { 19, 19, 18, 18, 18, 18, 17, 17, 17, 17, 16 },
  { 18, 18, 17, 17, 17, 17, 16, 16, 16, 16, 15 }, // 5
  { 18, 18, 17, 17, 17, 17, 16, 16, 16, 16, 15 },
  { 18, 18, 17, 17, 17, 17, 16, 16, 16, 16, 15 },
  { 18, 18, 17, 17, 17, 17, 16, 16, 16, 16, 15 },
  { 17, 17, 16, 16, 16, 16, 15, 15, 15, 15, 14 },
  { 17, 17, 16, 16, 16, 16, 15, 15, 15, 15, 14 }, // 10
  { 17, 17, 16, 16, 16, 16, 15, 15, 15, 15, 14 },
  { 17, 17, 16, 16, 16, 16, 15, 15, 15, 15, 14 },
  { 16, 16, 15, 15, 15, 15, 14, 14, 14, 14, 13 },
  { 16, 16, 15, 15, 15, 15, 14, 14, 14, 14, 13 },
  { 16, 16, 15, 15, 15, 15, 14, 14, 14, 14, 13 }, // 15
  { 16, 16, 15, 15, 15, 15, 14, 14, 14, 14, 13 },
  { 15, 15, 14, 14, 14, 14, 13, 13, 13, 13, 12 },
  { 15, 15, 14, 14, 14, 14, 13, 13, 13, 13, 12 },
  { 15, 15, 14, 14, 14, 14, 13, 13, 13, 13, 12 },
  { 15, 15, 14, 14, 14, 14, 13, 13, 13, 13, 12 }, // 20
  { 14, 14, 13, 13, 13, 13, 12, 12, 12, 12, 11 },
  { 14, 14, 13, 13, 13, 13, 12, 12, 12, 12, 11 },
  { 14, 14, 13, 13, 13, 13, 12, 12, 12, 12, 11 },
  { 14, 14, 13, 13, 13, 13, 12, 12, 12, 12, 11 },
  { 13, 13, 12, 12, 12, 12, 11, 11, 11, 11, 10 }, // 25
  { 13, 13, 12, 12, 12, 12, 11, 11, 11, 11, 10 },
  { 13, 13, 12, 12, 12, 12, 11, 11, 11, 11, 10 },
  { 13, 13, 12, 12, 12, 12, 11, 11, 11, 11, 10 },
  { 12, 12, 11, 11, 11, 11, 10, 10, 10, 10, 9 },
  { 12, 12, 11, 11, 11, 11, 10, 10, 10, 10, 9 },  // 30
  { 12, 12, 11, 11, 11, 11, 10, 10, 10, 10, 9 },
  { 12, 12, 11, 11, 11, 11, 10, 10, 10, 10, 9 },
  { 11, 11, 10, 10, 10, 10, 9, 9, 9, 9, 8 },
  { 11, 11, 10, 10, 10, 10, 9, 9, 9, 9, 8 },
  { 11, 11, 10, 10, 10, 10, 9, 9, 9, 9, 8 },      // 35
  { 11, 11, 10, 10, 10, 10, 9, 9, 9, 9, 8 },
  { 10, 10, 9, 9, 9, 9, 8, 8, 8, 8, 7 },
  { 10, 10, 9, 9, 9, 9, 8, 8, 8, 8, 7 },
  { 10, 10, 9, 9, 9, 9, 8, 8, 8, 8, 7 },
  { 10, 10, 9, 9, 9, 9, 8, 8, 8, 8, 7 },          // 40
  { 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 6 },
  { 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 6 },
  { 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 6 },
  { 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 6 },
  { 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 5 },            // 45
  { 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 5 },
  { 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 5 },
  { 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 5 },
  { 7, 7, 6, 6, 6, 6, 5, 5, 5, 5, 4 },
  { 7, 7, 6, 6, 6, 6, 5, 5, 5, 5, 4 },            // 50
  { 7, 7, 6, 6, 6, 6, 5, 5, 5, 5, 4 },
  { 7, 7, 6, 6, 6, 6, 5, 5, 5, 5, 4 },
  { 6, 6, 5, 5, 5, 5, 4, 4, 4, 4, 3 },
  { 6, 6, 5, 5, 5, 5, 4, 4, 4, 4, 3 },
  { 6, 6, 5, 5, 5, 5, 4, 4, 4, 4, 3 },            // 55
  { 6, 6, 5, 5, 5, 5, 4, 4, 4, 4, 3 },
  { 5, 5, 4, 4, 4, 4, 3, 3, 3, 3, 2 },
  { 5, 5, 4, 4, 4, 4, 3, 3, 3, 3, 2 },
  { 5, 5, 4, 4, 4, 4, 3, 3, 3, 3, 2 },
  { 5, 5, 4, 4, 4, 4, 3, 3, 3, 3, 2 },            // 60
  { 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 1 },
  { 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 1 },
  { 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 1 },
  { 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 1 },
  { 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 0 },            // 65
  { 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 0 },
  { 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 0 },
  { 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 0 },
  { 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
  { 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0 },            // 70
  { 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
  { 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, -1 },
  { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1 },
  { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1 },
  { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1 },           // 75
  { 1, 1, 0, 0, 0, 0, -1, -1, -1, -1, -2 },
  { 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -2 },
  { 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -2 },
  { 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -2 },
  { 0, 0, -1, -1, -1, -1, -2, -2, -2, -2, -3 },   // 80
  { 0, 0, -1, -1, -1, -1, -2, -2, -2, -2, -3 },
  { 0, 0, -1, -1, -1, -1, -2, -2, -2, -2, -3 },
  { 0, 0, -1, -1, -1, -1, -2, -2, -2, -2, -3 },
  { -1, -1, -2, -2, -2, -2, -3, -3, -3, -3, -4 },
  { -1, -1, -2, -2, -2, -2, -3, -3, -3, -3, -4 }, // 85
  { -1, -1, -2, -2, -2, -2, -3, -3, -3, -3, -4 },
  { -1, -1, -2, -2, -2, -2, -3, -3, -3, -3, -4 },
  { -2, -2, -3, -3, -3, -3, -4, -4, -4, -4, -5 },
  { -2, -2, -3, -3, -3, -3, -4, -4, -4, -4, -5 },
  { -2, -2, -3, -3, -3, -3, -4, -4, -4, -4, -5 }, // 90
  { -2, -2, -3, -3, -3, -3, -4, -4, -4, -4, -5 },
  { -3, -3, -4, -4, -4, -4, -5, -5, -5, -5, -6 },
  { -3, -3, -4, -4, -4, -4, -5, -5, -5, -5, -6 },
  { -3, -3, -4, -4, -4, -4, -5, -5, -5, -5, -6 },
  { -3, -3, -4, -4, -4, -4, -5, -5, -5, -5, -6 }, // 95
  { -4, -4, -5, -5, -5, -5, -6, -6, -6, -6, -7 },
  { -4, -4, -5, -5, -5, -5, -6, -6, -6, -6, -7 },
  { -4, -4, -5, -5, -5, -5, -6, -6, -6, -6, -7 },
  { -4, -4, -5, -5, -5, -5, -6, -6, -6, -6, -7 },
  { -5, -5, -6, -6, -6, -6, -7, -7, -7, -7, -8 },  // 100
  { -5, -5, -6, -6, -6, -6, -7, -7, -7, -7, -8 },
  { -5, -5, -6, -6, -6, -6, -7, -7, -7, -7, -8 },
  { -5, -5, -6, -6, -6, -6, -7, -7, -7, -7, -8 },
  { -6, -6, -7, -7, -7, -7, -8, -8, -8, -8, -9 },
  { -6, -6, -7, -7, -7, -7, -8, -8, -8, -8, -9 }
};

/* effect of drinks on hunger, thirst, and drunkenness -- see values.doc */
int drink_aff[][3] = {
  {0, 1, 10},
  {3, 2, 5},
  {5, 2, 5},
  {2, 2, 5},
  {1, 2, 5},
  {6, 1, 4},
  {0, 1, 8},
  {10, 0, 0},
  {3, 3, 3},
  {0, 4, -8},
  {0, 3, 6},
  {0, 1, 6},
  {0, 1, 6},
  {0, 2, -1},
  {0, 1, -2},
  {0, 0, 13}
};


/* color of the various drinks */
const char *color_liquid[] =
{
  "clear",
  "brown",
  "clear",
  "brown",
  "dark",
  "golden",
  "red",
  "green",
  "clear",
  "light green",
  "white",
  "brown",
  "black",
  "red",
  "clear",
  "crystal clear",
  "\n"
};


/*
 * level of fullness for drink containers
 * Not used in sprinttype() so no \n.
 */
const char *fullness[] =
{
  "less than half ",
  "about half ",
  "more than half ",
  ""
};


/* str, int, wis, dex, con applies **************************************/


/* [ch] strength apply (all) */
cpp_extern const struct str_app_type str_app[] = {
  {-5, -4, 0, 0},	/* str = 0 */
  {-5, -4, 3, 1},	/* str = 1 */
  {-3, -2, 3, 2},
  {-3, -1, 10, 3},
  {-2, -1, 25, 4},
  {-2, -1, 55, 5},	/* str = 5 */
  {-1, 0, 80, 6},
  {-1, 0, 90, 7},
  {0, 0, 100, 8},
  {0, 0, 100, 9},
  {0, 0, 115, 10},	/* str = 10 */
  {0, 0, 115, 11},
  {0, 0, 140, 12},
  {0, 0, 140, 13},
  {0, 0, 170, 14},
  {0, 0, 170, 15},	/* str = 15 */
  {0, 1, 195, 16},
  {1, 1, 220, 18},
  {1, 2, 255, 20},	/* str = 18 */
  {3, 7, 640, 40},
  {3, 8, 700, 40},	/* str = 20 */
  {4, 9, 810, 40},
  {4, 10, 970, 40},
  {5, 11, 1130, 40},
  {6, 12, 1440, 40},
  {7, 14, 1750, 40},	/* str = 25 */
  {1, 3, 280, 22},	/* str = 18/0 - 18-50 */
  {2, 3, 305, 24},	/* str = 18/51 - 18-75 */
  {2, 4, 330, 26},	/* str = 18/76 - 18-90 */
  {2, 5, 380, 28},	/* str = 18/91 - 18-99 */
  {3, 6, 480, 30}	/* str = 18/100 */
};

/* 
struct dex_skill_type {
  sh_int p_pocket;
  sh_int p_locks;
  sh_int traps;
  sh_int sneak;
  sh_int hide;
  sh_int ambush;
}; */     

/* [dex] skill apply (thieves only) */
cpp_extern const struct dex_skill_type dex_app_skill[] = {
  {-99, -99, -90, -99, -60, -99},	/* dex = 0 */
  {-90, -90, -60, -90, -50, -90},	/* dex = 1 */
  {-80, -80, -40, -80, -45, -80},
  {-70, -70, -30, -70, -40, -70},
  {-60, -60, -30, -60, -35, -60},
  {-50, -50, -20, -50, -30, -50},	/* dex = 5 */
  {-40, -40, -20, -40, -25, -40},
  {-30, -30, -15, -30, -20, -30},
  {-20, -20, -15, -20, -15, -20},
  {-15, -10, -10, -20, -10, -15},
  {-10, -5, -10, -15, -5, -10},	/* dex = 10 */
  {-5, 0, -5, -10, 0, -5},
  {0, 0, 0, -5, 0, 0},
  {0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0},		/* dex = 15 */
  {0, 5, 0, 0, 0, 0},
  {5, 10, 0, 5, 5, 5},
  {10, 15, 5, 10, 10, 5},		/* dex = 18 */
  {15, 20, 10, 15, 15, 10},
  {15, 20, 10, 15, 15, 10},		/* dex = 20 */
  {20, 25, 10, 15, 20, 15},
  {20, 25, 15, 20, 20, 15},
  {25, 25, 15, 20, 20, 15},
  {25, 30, 15, 25, 25, 20},
  {25, 30, 15, 25, 25, 20}		/* dex = 25 */
};



/* [dex] apply (all) */
cpp_extern const struct dex_app_type dex_app[] = {
  {-7, -7, 10},		/* dex = 0 */
  {-6, -6, 10},		/* dex = 1 */
  {-4, -4, 10},
  {-3, -3, 10},
  {-2, -2, 10},
  {-1, -1, 9},		/* dex = 5 */
  {0, 0, 8},
  {0, 0, 7},
  {0, 0, 6},
  {0, 0, 5},
  {0, 0, 0},		/* dex = 10 */
  {0, 0, -2},
  {0, 0, -4},
  {0, 0, -6},
  {0, 0, -8},
  {0, 0, -10},		/* dex = 15 */
  {1, 1, -12},
  {2, 2, -14},
  {2, 2, -16},		/* dex = 18 */
  {3, 3, -16},
  {3, 3, -18},		/* dex = 20 */
  {4, 4, -20},
  {4, 4, -20},
  {4, 4, -20},
  {5, 5, -20},
  {5, 5, -20}		/* dex = 25 */
};



/* [con] apply (all) */
cpp_extern const struct con_app_type con_app[] = {
  {-4, 20},		/* con = 0 */
  {-3, 25},		/* con = 1 */
  {-2, 30},
  {-2, 35},
  {-1, 40},
  {-1, 45},		/* con = 5 */
  {-1, 50},
  {0, 55},
  {0, 60},
  {0, 65},
  {0, 70},		/* con = 10 */
  {0, 75},
  {0, 80},
  {0, 85},
  {0, 88},
  {1, 90},		/* con = 15 */
  {2, 95},
  {2, 97},
  {3, 99},		/* con = 18 */
  {3, 99},
  {4, 99},		/* con = 20 */
  {5, 99},
  {5, 99},
  {5, 99},
  {6, 99},
  {6, 99}		/* con = 25 */
};



/* [int] apply (all) */
cpp_extern const struct int_app_type int_app[] = {
  {3},		/* int = 0 */
  {5},		/* int = 1 */
  {7},
  {8},
  {9},
  {10},		/* int = 5 */
  {11},
  {12},
  {13},
  {15},
  {17},		/* int = 10 */
  {19},
  {22},
  {25},
  {30},
  {35},		/* int = 15 */
  {40},
  {45},
  {50},		/* int = 18 */
  {53},
  {55},		/* int = 20 */
  {56},
  {57},
  {58},
  {59},
  {60}		/* int = 25 */
};


/* [wis] apply (all) */
cpp_extern const struct wis_app_type wis_app[] = {
  {0},	/* wis = 0 */
  {0},  /* wis = 1 */
  {0},
  {0},
  {0},
  {0},  /* wis = 5 */
  {0},
  {0},
  {0},
  {0},
  {0},  /* wis = 10 */
  {0},
  {2},
  {2},
  {3},
  {3},  /* wis = 15 */
  {3},
  {4},
  {5},	/* wis = 18 */
  {6},
  {6},  /* wis = 20 */
  {6},
  {6},
  {7},
  {7},
  {7}  /* wis = 25 */
};



const char *spell_wear_off_msg[] = 
{
  "RESERVED DB.C",		/* 0 */
  "You feel less protected.",	/* 1 */
  "!Teleport!",
  "You feel less righteous.",
  "You feel a cloak of blindness disolve.",
  "!Burning Hands!",		/* 5 */
  "!Call Lightning",
  "You feel more self-confident.",
  "You feel your strength return.",
  "!Clone!",
  "!Color Spray!",		/* 10 */
  "!Control Weather!",
  "!Create Food!",
  "!Create Water!",
  "!Cure Blind!",
  "!Cure Critical!",		/* 15 */
  "!Cure Light!",
  "You feel more optimistic.",
  "You feel less aware of the difference between good and evil.",
  "Your eyes stop tingling.",
  "The detect magic wears off.",/* 20 */
  "The detect poison wears off.",
  "!Dispel Evil!",
  "!Earthquake!",
  "!Enchant Weapon!",
  "!Energy Drain!",		/* 25 */
  "!Fireball!",
  "!Harm!",
  "!Heal!",
  "You feel yourself exposed.",
  "!Lightning Bolt!",		/* 30 */
  "!Locate object!",
  "!Magic Missile!",
  "You feel less sick.",
  "You feel less protected.",
  "!Remove Curse!",		/* 35 */
  "The white aura around your body fades.",
  "!Shocking Grasp!",
  "You feel less tired.",
  "You feel weaker.",
  "!Summon!",			/* 40 */
  "!Ventriloquate!",
  "!Word of Recall!",
  "!Remove Poison!",
  "You feel less aware.",
  "!Animate Dead!",		/* 45 */
  "!Dispel Good!",
  "!Group Armor!",
  "!Group Heal!",
  "!Group Recall!",
  "Your night vision seems to fade.",	/* 50 */
  "Your feet seem less boyant.",
  "!Finger Death!",
  "!Adv Heal!",
  "!Refresh!",
  "!Fear!",                                     /* 55 */
  "!Dimensional Gate!",
  "!Meteor Swarm!",
  "!Group Sanct!",
  "Your skin ceases to sparkle.",
  "Gravity regains its grip on you...",         /* 60 */
  "!Plasma Blast!",
  "!Cloud Kill!",
  "!Paralyze!",
  "You stumble slightly as your legs begin to function again.",
  "Your magical gills suddenly vanish..",       /* 65 */
  "!wraith touch!",
  "Your revert back to your true form.",
  "!Mana!",
  "!Whirlwind!",
  "The spirits leave you less protected.",      /* 70 */
  "Your god stops helping you.",
  "Your deity stops protecting you.",
  "Your body slows down to normal pace.",
  "Your untouchability fades away.",
  "A skin of stone peels away from you.",       /* 75 */
  "!Divine Heal!",
  "The lightning upon your shield fades away.",
  "The flaming fire of your shield burns out.",
  "Your surrounding wall of fire slowly burns away.",
  "You feel less invulnerable.",                /* 80 */
  "!Identify!",
  "!Greater Remove Curse!",
  "You no longer sense the suffering of others.",
  "!UNUSED!"
};

const char *pc_class_types[] =
{
  "Magician",
  "Cleric",
  "Thief",
  "Warrior",
  "Druid",
  "Priest",
  "Nightblade",
  "Battlemage",
  "Spellsword",
  "Paladin",
  "Master",
  "\n"
};     

const char *pc_race_types[] =
{
  "Ogre",
  "Deva",
  "Minotaur",
  "Elf",
  "Human",
  "Dwarf",
  "Pixie",
  "\n"
};  

/* Primary Stat values per class
 
             -------------------------------------------------
             |  Int  |  Wis  |  Str  |  Dex  |  Con  |  Cha  |
             -------------------------------------------------
Warrior      |       |       |   x   |       |   x   |       |
Thief        |   x   |       |       |   x   |       |       |
Cleric       |       |   x   |       |       |   x   |       |
Mage         |   x   |   x   |       |       |       |       |
             -------------------------------------------------


             -------------------------------------------------
             |  Int  |  Wis  |  Str  |  Dex  |  Con  |  Cha  |
             -------------------------------------------------
Paladin      |       |   x   |   x   |       |       |   x   |  (wc)
Nightblade   |   x   |       |       |   x   |   x   |       |  (wt)
Spellsword   |   x   |   x   |       |   x   |       |       |  (tm)
Battlemage   |   x   |       |   x   |   x   |       |       |  (wm)
Druid        |   x   |   x   |       |   x   |       |       |  (cm)
Priest       |       |   x   |       |       |   x   |   x   |  (tc)
             -------------------------------------------------


             -------------------------------------------------
             |  Int  |  Wis  |  Str  |  Dex  |  Con  |  Cha  |
             -------------------------------------------------
Master       |   x   |   x   |   x   |   x   |   x   |   x   |  (wtcm)
             -------------------------------------------------
*/

// This array contains masks for the primary stats for each class
// ie. which stats a class can train 
//
// LSB  .   .   .   .  MSB
// Int Wis Str Con Dex Cha
//  1   2   4   8   16  32
cpp_extern const int pc_class_primary_stats[NUM_CLASSES] = {
  1+2,     // Mage - Int, Wis
  2+8,     // Cleric - Wis, Con
  1+16,    // Thief - Int, Dex
  4+8,     // Warrior - Str, Con
  1+2+16,  // Druid - Int, Wis, Dex
  2+8+32,  // Priest - Wis, Con, Cha
  1+8+16,  // Nightblade - Int, Con, Dex
  1+4+16,  // Battlemage - Int, Str, Dex
  1+2+16,  // Spellsword - Int, Wis, Dex
  2+4+32,  // Paladin - Wis, Str, Cha 
  1+2+4+8+16+32  // Master - All
};

cpp_extern const int pc_max_race_stats[MAX_RACES][6] = {
// Int, Wis, Str, Con, Dex, Cha, Hit,  Mana, Move
  { 16,  16,  21,  21,  14,  11}, // Ogre
  { 21,  21,  16,  16,  18,  19}, // Deva 
  { 16,  15,  21,  20,  16,  14}, // Minatour 
  { 19,  18,  16,  16,  21,  19}, // Elf 
  { 18,  18,  18,  18,  18,  18}, // Human 
  { 16,  19,  19,  20,  17,  16}, // Dwarf 
  { 19,  17,  16,  16,  19,  21}  // Pixie 
};

cpp_extern const int pc_max_class_points[NUM_CLASSES][3] = {
  // Hit  Mana  Move
  { 2000, 5000,  250}, // Mage 
  { 2500, 4500,  250}, // Cleric 
  { 4500,  750,  750}, // Thief 
  { 5000,  500,  500}, // Warrior 
  { 4000, 8000,  500}, // Druid 
  { 6000, 6000, 1000},  // Priest 
  { 7500, 1000, 1500},  // Nightblade
  { 6000, 7000,  750},  // Battlemage
  { 6000, 6000, 1000}, // Spellsword 
  { 6500, 6000,  750},  // Paladin
  { 10000, 10000, 2000} // Master
};

// Stat training:
// Cost is in Quest Points and calculated as follows:
// cost to train stat_costs[max_stat - current_stat] * stat_mods[current_stat+1]
// (eg. costs 
cpp_extern const int stat_costs[25] = {
  40, 37, 35, 32,  // 25 - 22
  30, 25, 20, 15, 10, 10, 10, 10, 10, 10, 10, // 21 - 11
  10, 10, 10, 10, 10, 10, 10, 10, 10, 10 // 10 - 1
};

// Modifiers for the cost of training each stat point.
// ie. it costs stat_mods[stat vale] * stat_costs[max_stat_value - current]
cpp_extern const float stat_mods[25] = {
  0.1, 0.1, 0.1, 0.1, 0.1,  // 1 - 5
  0.1, 0.1, 0.1, 0.1, 0.1, // 5 - 10
  0.1, 0.1, 0.2, 0.3, 0.4, // 11 - 15
  0.5, 0.6, 0.7, 0.8, 0.9, // 16 - 20
  1.0, 1.0, 1.0, 1.0, 1.0 // 21 - 25
}; 

const char *stat_names[] =
{
  "Intelligence",
  "Wisdom",
  "Strength",
  "Constitution",
  "Dexterity",
  "Charisma",
  "Hit",
  "Mana",
  "Move",
  "\n"
};  

const char *npc_class_types[] =
{
  "Generic",
  "Undead",
  "Humanoid",
  "Animal",
  "Dragon",
  "Giant",
  "Aquatic",
  "DemiHuman",
  "\n"
};  


int rev_dir[] =
{
  2,
  3,
  0,
  1,
  5,
  4
};


int movement_loss[] =
{
  1,	/* Inside     */
  1,	/* City       */
  2,	/* Field      */
  3,	/* Forest     */
  4,	/* Hills      */
  6,	/* Mountains  */
  4,	/* Swimming   */
  1,	/* Unswimable */
  1,	/* Flying     */
  5     /* Underwater */
};

/* Not used in sprinttype(). */
const char *weekdays[] =
{
  "the Day of the Moon",
  "the Day of the Bull",
  "the Day of the Deception",
  "the Day of Thunder",
  "the Day of Freedom",
  "the day of the Great Gods",
  "the Day of the Sun"
};


/* Not used in sprinttype(). */
const char *month_name[] =
{
  "Month of Winter",		/* 0 */
  "Month of the Winter Wolf",
  "Month of the Frost Giant",
  "Month of the Old Forces",
  "Month of the Grand Struggle",
  "Month of the Spring",
  "Month of Nature",
  "Month of Futility",
  "Month of the Dragon",
  "Month of the Sun",
  "Month of the Heat",
  "Month of the Battle",
  "Month of the Dark Shades",
  "Month of the Shadows",
  "Month of the Long Shadows",
  "Month of the Ancient Darkness",
  "Month of the Great Evil"
};

//#if defined(CONFIG_OASIS_MPROG)
/*
 * Definitions necessary for MobProg support in OasisOLC
 */
const char *mobprog_types[] =
{
  "INFILE",
  "ACT",
  "SPEECH",
  "RAND",
  "FIGHT",
  "DEATH",
  "HITPRCNT",
  "ENTRY",
  "GREET",
  "ALL_GREET",
  "GIVE",
  "BRIBE",
  "\n"
};
//#endif     

/* moon messages - Vader */
const char *moon_mesg[] =
{
  "!MOONLESS!",
  "new",
  "half",
  "three quarter",
  "full",
  "three quarter",
  "second half",
  "final quarter"
};    

const char *colour_headings[] =
{
  "Headings",
  "Sub Headings",
  "Help Headings",
  "Help Attribute Headings",
  "Commands",
  "Objects",
  "Mobs",
  "Players",
  "Room Headings",
  "Unused"
};

const char *burgle_rooms[] =
{
  "ROOM_WAREHOUSE",
  "AREA_WAREHOUSE_RICH",
  "AREA_WAREHOUSE_REG",
  "AREA_WAREHOUSE_POOR",
  "ROOM_SHOP",
  "AREA_SHOP_RICH",
  "AREA_SHOP_REG",
  "AREA_SHOP_POOR",
  "ROOM_HOME",
  "AREA_HOME_RICH",
  "AREA_HOME_REG",
  "AREA_HOME_POOR"
};
@


1.42
log
@Artus> Moved all the quest event stuff to quest.[ch].
       Added trivia quest type.
@
text
@d674 2
a675 1
cpp_extern const long pc_race_eq_masks[MAX_RACES] = {
d690 2
a691 1
cpp_extern const int wear_positions[] = {
d838 2
a839 2
cpp_extern const int default_item_damage[] = {

d1020 1
d1114 2
a1115 1
cpp_extern const int thaco_ac[LVL_IMMORT+1][NUM_CLASSES] = {
d1217 6
a1222 1
  { -5, -5, -6, -6, -6, -6, -7, -7, -7, -7, -8 }  // 100
@


1.41
log
@Artus> Added quest_types[].
@
text
@d96 2
a97 1
  "Item Hunt"
@


1.40
log
@Artus> Now warning free :o)
@
text
@d22 2
a23 1
const char *cmd_types[NUM_CMD_TYPES + 1] = {
d41 2
a42 1
const char *social_ranks[] = {
d57 2
a58 1
const char *cmd_bhelp[NUM_CMD_TYPES] = {
d76 2
a77 1
const char *sort_names[] = {
d85 2
a86 1
const char *world_names[] = {
d93 6
d100 2
a101 1
cpp_extern const int default_colour_codes[] = {
d114 2
a115 1
cpp_extern const float class_modifiers[NUM_CLASSES] = {
d131 2
a132 1
cpp_extern const float race_modifiers[MAX_RACES] = {
d144 2
a145 1
const char* enhancement_names[] = {
d187 2
a188 1
const char *special_ability_bits[] = {
d217 2
a218 1
const char *room_bits[] = {
d255 2
a256 1
const char *exit_bits[] = {
d266 2
a267 1
const char *sector_types[][11] = {
d322 2
a323 1
const char *position_types[] = {
d338 2
a339 1
const char *player_bits[] = {
d366 2
a367 1
const char *extended_bits[] = {
d384 2
a385 1
const char *action_bits[] = {
d415 2
a416 1
const char *punish_types[] = {
d428 2
a429 1
const char *offence_types[] = {
d441 2
a442 1
const char *preference_bits[] = {
d523 2
a524 1
const char *battery_types[] = {
d529 2
a530 1
const char *timer_types[] = {
d567 2
a568 1
const char *connected_types[] = {
d721 2
a722 1
const char *where[] = {
d754 2
a755 1
const char *equipment_types[] = {
d787 2
a788 1
const char *item_types[] = {
d885 2
a886 1
const char *wear_bits[] = {
d909 2
a910 1
const char *extra_bits[] = {
d945 2
a946 1
const char *zone_flagbits[] = {
d977 2
a978 2
const char *level_bits[] = {

d1018 2
a1019 1
const char *apply_types[] = {
d1050 2
a1051 1
const char *container_bits[] = {
d1568 2
a1569 1
const char *pc_class_types[] = {
d1584 2
a1585 1
const char *pc_race_types[] = {
d1693 2
a1694 1
const char *stat_names[] = {
d1707 2
a1708 1
const char *npc_class_types[] = {
d1747 2
a1748 1
const char *weekdays[] = {
d1760 2
a1761 1
const char *month_name[] = {
d1785 2
a1786 1
const char *mobprog_types[] = {
d1804 2
a1805 1
const char *moon_mesg[] = {
d1816 2
a1817 1
const char *colour_headings[] = {
d1830 2
a1831 1
const char *burgle_rooms[] = {
@


1.39
log
@Artus> Added "random" sex for mobs.
       Switched Detect Align / Sense Life unaffect messages.
@
text
@d51 2
a52 1
	"Mayor"
@


1.38
log
@Artus> Fixed wear-off message for detect align.
@
text
@d296 1
d1461 1
a1461 1
  "You feel less aware.",
d1487 1
a1487 1
  "You feel less aware of the difference between good and evil.",
@


1.37
log
@Artus> UNUSED! -> !UNUSED!
       pit trap -> trapping
@
text
@d1486 1
a1486 1
  "You feel less aware of your suroundings.",
@


1.36
log
@Artus> Reward Item Type.
@
text
@d501 1
a501 1
  "UNUSED!",
d506 1
a506 1
  "pit trap",
@


1.35
log
@Artus> Mostly just cosmetic changes, mostly for underwater stuff..
       Added some more stuff to dg_scripts:

       %actor.affected(aff_bit)% - Is actor affected by whatever.
       %self.people(countpc)%    - (Rooms): Count players.
       %self.people(countnpc)%   - (Rooms): Count npcs.
       %self.people(countall)%   - (Rooms): Count chars.
       %firstchar.<room_vnum>%   - First character in room <vnum>

       Possibly a bugfix to one of the forest specials that was attacking you
       if you were affected by poison.
@
text
@d783 1
a783 1
  "UNDEFINED",
@


1.34
log
@Artus>
\r\n appended to gold rush message: act.informative.c

Imms no longer affected by underwater: act.movement.c, limits.c

Changed remort some more.. New special, tracker (SPECIAL_TRACKER):
act.other.c, act.wizard.c, constants.c, graph.c, structs.h, utils.c

Object and Room triggers can now %send% <room vnum> <message>:
dg_objcmd.c, dg_wldcmd.c

%self.direction% now has a vnum subfield to return the exit room's vnum.
(Eg: %self.north(vnum)%): dg_scripts.c

%actor.hisher%, %actor.himher%, %actor.heshe% implemented: dg_scripts.c

vnum, name, can_see, can_see_me added to %actor.next_in_room%, returning char
vnum, char name, if actor can see char, and if char can see actor respectively:
dg_scripts.c

Changed "do not know that spell" to "do not know of that spell": spell_parser.c

Changed "do not of know that skill/spell" to "do not know of..": utils.c

SECT_UNDERWATER and SECT_INSIDE now checked in OUTSIDE() macro: utils.h
@
text
@d484 2
a485 2
  "ADV_INVIS",
  "DET_ADV_INVIS",
d487 1
a487 1
  "BROKEN_IN",
d491 1
a491 1
  "SENSE_WOUNDS",
@


1.33
log
@Artus>
act.informative.c: Added Sense Wounds.
constants.c      : Added Sense Wounds.
db.c             : Fixed spell effectiveness.
dg_mobcmd.c      : mpurge will no longer purge player corpses.
dg_objcmd.c      : opurge will no longer purge player corpses.
dg_wldcmd.c      : wpurge will no longer purge player corpses.
fight.c          : Added Sense Wounds.
magic.c          : Added Sense Wounds.
spell_parser.c   : Added Sense Wounds.. Trialling changes do damage
                   done by headbutt, flytackle, piledrive.
spells.h         : Added Sense Wounds.
structs.h        : Added Sense Wounds.
@
text
@d195 1
@


1.32
log
@Artus>
---
drop_otrigger takes an extra paramater for subcmd. With drop triggers you can
now specify whether the trigger is for drop, junk, donate and put. Specify
in the argument either/combination of 'junk', 'drop', 'donate', 'put'. No
argument means any type will be triggered:

act.item.c, dg_scripts.h, dg_triggers.c, interpreter.h
---
fixed colour bleed in dc:

act.wizard.c
---
Not reapplying empty timers in char_to_store:
Not calling object triggers from char_to_store:

db.c
---
Modified hunt so that with special_elf you can track through !TRACK rooms
(Modifier for Elf has been increased from 0.02 to 0.07%):

graph.c, utils.c
---
Timers should only show remove messages when being removed because they're
wearing off (duration = 0):

handler.c
---
Not calling object triggers when auto_equipping.

objsave.c
---
#defined around love_ring specproc. What a joke. define DRAX_IS_TEH_SUXOR if
you want it back ;o)

spec_assign.c, spec_procs.c
---
@
text
@d489 2
d1521 4
a1524 1
  "You feel less invulnerable.",                /* 80 */     
@


1.31
log
@Artus> Implemented Autoeat.
       Putting objs in cursed containers now results in obj being cursed :o)
@
text
@d1437 2
a1438 1
const char *spell_wear_off_msg[] = {
@


1.30
log
@Artus> Containers no longer flagged as cursed when cursed objects put inside,
       instead, we're now checking contents when we drop the container.
       Can no longer put containers inside containers.

       Healing Trance timer now displays "healing trance" rather than "timer 9"

       Now sending message when removing various timers from chars.
@
text
@d343 13
a355 11
        "!NEWBIE",
        "!CTALK",
        "CLAN",
        "PKILL",
        "UNDEFINED",
        "AUTOGOLD",
        "AUTOLOOT",
        "AUTOSPLIT",
        "!HINT",
        "PKFROZEN",
        "\n"
@


1.29
log
@Artus> Added !KILL flag for mobs... Things like gamina, postmaster, etc, can
       have this set, which should make it pretty damn impossible for them to
       die..
       Modified more stuff for dark ritual and vampires.. Have added a switch
       statement to affect_remove, which should be a good central place to
       handle triggers on affect removal.. Mainly to reset mana/move/hit to
       make sure they're not higher than max values when removing werewolf/
       vampire.
@
text
@d504 1
a504 1
  "timer 9",
@


1.28
log
@Artus> Replaced wimpy ubyte with int.
       Cosmetic change in constants.c: "!Cure Critic!" -> "!Cure Critical!"
@
text
@d382 1
@


1.27
log
@Artus> A3_0_315
@
text
@d1450 1
a1450 1
  "!Cure Critic!",		/* 15 */
@


1.26
log
@Latest Version
@
text
@d400 6
@


1.25
log
@
: ----------------------------------------------------------------------
: Enter Log.  Lines beginning with `CVS:' are removed automatically
:
: Committing in .
:
: Modified Files:
: 	act.informative.c act.other.c act.wizard.c balance.c class.c
: 	constants.c db.c fight.c handler.c interpreter.c magic.c
: 	oedit.c redit.c spec_procs.c spell_parser.c spells.h
: 	update_revisions
: ----------------------------------------------------------------------

Modified: DM

Changed:
- heaps: mostly minor bug fixes.
@
text
@d107 8
a114 8
        1.4,            // Druid
        1.2,            // Priest
        1.3,            // Nightblade
        1.4,            // Battlemage
        1.35,           // Spellsword
        1.4,            // Paladin
        1.75            // Master
 
@


1.24
log
@
Modified: DM

Changed:
- default container max damage from 25 -> 100
@
text
@d749 2
a750 2
  "FIRE WEAPON",
  "MISSILE",
@


1.23
log
@
Modified: DM

Added:
- connection state strings
@
text
@d806 1
a806 1
	25,		// Container
@


1.22
log
@
Modified: DM

Changed:
- stat point updates, connection (char creation) states
@
text
@d526 1
a526 1
  "Playing",
d531 1
a531 1
  "Get new PW",
d536 1
a536 1
  "Main Menu",
d541 1
a541 1
  "Self-Delete 1",
d546 1
a546 1
  "Zone edit",
d551 1
a551 1
  "Verify stats",
d556 6
@


1.21
log
@Artus: Modified thaco calculations..
@
text
@d1567 1
a1567 1
// MSB  .   .   .   .  LSB
d1569 1
a1569 1
// 32  16  8   4   2   1
d1571 11
a1581 11
  32+16,   // Mage - Int, Wis
  16+4,    // Cleric - Wis, Con
  32+2,    // Thief - Int, Dex
  8+2,     // Warrior - Str, Con
  32+16+2, // Druid - Int, Wis, Dex
  16+4+1,  // Priest - Wis, Con, Cha
  32+4+2,  // Nightblade - Int, Con, Dex
  32+8+2,  // Battlemage - Int, Str, Dex
  32+16+2, // Spellsword - Int, Wis, Dex
  16+8+1,  // Paladin - Wis, Str, Cha 
  32+16+8+4+2+1 // Master - All
@


1.20
log
@Art> Modified compute_armor_class() and thaco().. Most notable, thaco() now
expects ch, victim (victim may be null), for mob thaco calculations. Probably
should have done it with FIGHTING(ch) but oh well. :o). Also added in some
debug stuff, including a debug flag. A byte sized bitvector that's not saved,
char_special_data.small_bits or SMALL_BITS(ch).. GET_DEBUG() for debug.
@
text
@d1052 105
@


1.19
log
@Modified: DM

Changed:
- Added obsolute room flags back in
@
text
@d1192 10
a1201 10
  {-7, -7, 6},		/* dex = 0 */
  {-6, -6, 5},		/* dex = 1 */
  {-4, -4, 5},
  {-3, -3, 4},
  {-2, -2, 3},
  {-1, -1, 2},		/* dex = 5 */
  {0, 0, 1},
  {0, 0, 0},
  {0, 0, 0},
  {0, 0, 0},
d1203 15
a1217 15
  {0, 0, 0},
  {0, 0, 0},
  {0, 0, 0},
  {0, 0, 0},
  {0, 0, -5},		/* dex = 15 */
  {1, 1, -10},
  {2, 2, -15},
  {2, 2, -20},		/* dex = 18 */
  {3, 3, -25},
  {3, 3, -32},		/* dex = 20 */
  {4, 4, -40},
  {4, 4, -50},
  {4, 4, -50},
  {5, 5, -50},
  {5, 5, -75}		/* dex = 25 */
@


1.18
log
@Modified: DM

Added:
- header comments for some column...
@
text
@d217 6
@


1.17
log
@*** empty log message ***
@
text
@d587 2
a588 1
Old Positions
@


1.16
log
@Modified: DM

Added:
- !GOLDRUSH zone flag checking
@
text
@d40 14
@


1.15
log
@Timer strings...
@
text
@d897 1
@


1.14
log
@Artus - Removed Leader/Subleader, added Pkill.. For sprintbits..
@
text
@d471 6
a476 6
  "timer 3",
  "timer 4",
  "timer 5",
  "timer 6",
  "timer 7",
  "timer 8",
@


1.13
log
@*** empty log message ***
@
text
@d326 2
a327 2
        "SUBLEADER",
        "LEADER",
@


1.12
log
@Modified: Rod

Added:
- cmd_types and cmd_bhelp (for commands command)
@
text
@d180 1
@


1.11
log
@Modified: Artus - Punishment
@
text
@d22 35
a57 1

@


1.10
log
@
Changed:
- Fire Wall wear off typo: slowely -> slowly
@
text
@d330 17
@


1.9
log
@
Added:
- Initial inclusion of dgscripts
@
text
@d1323 1
a1323 1
  "Your surrounding wall of fire slowely burns away.",
@


1.8
log
@
Added:
> extern const char *stat_names[];              Stat names
> extern const long pc_race_eq_masks[];         race eq positions
> extern const int pc_class_primary_stats[];    race stat restrictions
> extern const int pc_max_race_stats[][6];      race stat restrictions
> extern const int pc_max_class_points[][3];    class HMV limits
> extern const int stat_costs[];                training costs
> extern const float stat_mods[];               training costs
> extern const char *burgle_rooms[];            burgle room flag names
@
text
@d480 4
d1535 1
a1535 1
#if defined(CONFIG_OASIS_MPROG)
d1554 1
a1554 1
#endif     
@


1.7
log
@
Added:
- arrays for new eq positions
@
text
@d69 2
a70 2
cpp_extern const float race_modifiers[] = {
  0.1,        // Ogre
a73 1
  0.1,  // Changeling
a74 1
  0.1,  // Orc
d76 1
a76 3
  0.3,  // Kenda
  0.25, // Pixie
  5.0   // Avatar
d282 1
d297 1
a551 1
  0, // Changling - to be removed 
a552 1
  0, // Orc - to be removed
a553 1
  0, // Kenda - to be removed
d809 1
d1129 11
a1139 11
  {0, 0, -1},		/* dex = 15 */
  {1, 1, -2},
  {2, 2, -3},
  {2, 2, -4},		/* dex = 18 */
  {3, 3, -4},
  {3, 3, -4},		/* dex = 20 */
  {4, 4, -5},
  {4, 4, -5},
  {4, 4, -5},
  {5, 5, -6},
  {5, 5, -6}		/* dex = 25 */
a1343 1
  "Changling",
a1344 1
  "Orc",
a1345 1
  "Kenda",
d1350 57
a1406 7
const int pc_max_race_stats[][MAX_RACES] = {
// Str, Int, Wis, Dex, Con, Cha
  { 21,  16,  16,  14,  21,  11}, // Ogre
  { 16,  21,  21,  18,  16,  19}, // Deva 
  { 21,  16,  15,  16,  20,  14}, // Minatour 
  { 16,  19,  18,  21,  16,  19}, // Elf 
  { 15,  15,  15,  15,  15,  15}, // Changling (To be removed) 
d1408 2
a1409 4
  { 18,  18,  18,  18,  18,  18}, // Orc (to be removed)
  { 19,  16,  19,  17,  20,  16}, // Dwarf 
  { 19,  16,  19,  17,  20,  16}, // Kenda (To be removed)
  { 16,  19,  17,  19,  16,  21}  // Pixie 
d1412 48
d1577 14
@


1.6
log
@
Added:
- newbie logging
- random hint channel

Changed:
- Rewrote the ignore code, ignore char all/tells, ignore level all/tells
@
text
@d485 110
d597 1
a597 1
 * WEAR_x - for eq list
d618 10
a627 1
  "<held>               "
d634 2
a635 2
  "Worn on right finger",
  "Worn on left finger",
d651 9
d777 3
d1356 14
@


1.5
log
@
Added:
- Cant remember
@
text
@d299 1
@


1.4
log
@
Added:
- timers (like affects)
- new skills, fixes

TODO:
- test timers on objects - add to stat obj screen
@
text
@d412 5
@


1.3
log
@
Added:
- olc stuff - sectors, zone flags

Changed:
- Heaps of little fixes ....
@
text
@d407 2
d412 35
@


1.2
log
@

Added:
- Events
-

Changed:
- Score command
-

TODO:
- Finish the base
-
@
text
@d49 1
a49 1
  0,    //"Unused",
d195 39
a233 12
const char *sector_types[] = {
  "Inside",
  "City",
  "Field",
  "Forest",
  "Hills",
  "Mountains",
  "Water (Swim)",
  "Water (No Swim)",
  "Underwater",
  "In Flight",
  "\n"
a234 2


d1296 1
a1296 1
  "Unused",
@


1.1
log
@

Added:
- Modified files to compile with g++ - this is the initial import of those
  files.

TODO:
- Test it all works 100%
@
text
@d20 2
@

