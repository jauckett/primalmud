head	1.8;
access;
symbols
	LATEST:1.2
	A3_0_1:1.2;
locks; strict;
comment	@# @;


1.8
date	2004.11.24.06.47.02;	author mud;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.14.05.11.46;	author mud;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.16.10.29.00;	author mud;	state Exp;
branches;
next	1.5;

1.5
date	2002.07.20.08.19.31;	author mud;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.07.05.14.12;	author mud;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.30.02.24.47;	author primal;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.20.16.33.58;	author primal;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.15.09.03.50;	author primal;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Artus> mud -> shelby
@
text
@#!/bin/sh
#
# This script is called from Makefile (target "version") when a new circle
# build is made. It updates the revision information in REVFILE (which is read
# at boot time by bin/circle to obtain revision information). If cvs exists on
# the given server - the tags for the corresponding build are added.
#
# Written by DM - Jan 2001

#SERVER_NAME=mud.alphalink.com.au
SERVER_NAME=shelby

if [ ! "$HOSTNAME" = "$SERVER_NAME" ] ; then
  echo "$0 runs only on $SERVER_NAME, skipping ..." 
  # Changed exit code to 0 so it doensn't cause compiler errors.
  # Can be annoying when using :make in vim ;o) -- Artus.
  exit 0
fi

REVFILE=../lib/etc/revision

#defaults
MAJOR=3
BRANCH=0
MINOR=0
CVSMOD=1
TAGHEAD=A       # Alpha

MAJOR=`cat ${REVFILE} | grep "MAJOR" | cut -f 2 -d ' '`
BRANCH=`cat ${REVFILE} | grep "BRANCH" | cut -f 2 -d ' '`
MINOR=`cat ${REVFILE} | grep "MINOR" | cut -f 2 -d ' '`
HAVECVS=`whereis cvs | cut -f 2 -d ' '`

# DM - need some options ... for now Im just going to increment every successful make ...
# Check if cvs files are up-to-date
#if [ ! "$HAVECVS" = "" ] ; then
#  MODIFIED=`cvs -n update -l . | grep M`
#  if [ ! "$MODIFIED" = "" ] ; then
#    CVSMOD=0
#    MINOR=`expr ${MINOR} + 1`
#  fi
#fi
MINOR=`expr ${MINOR} + 1`
DATE=`date`


echo "Outputing revision file ${REVFILE}"

# Out data to file - to be read by bin/circle
echo "MAJOR ${MAJOR}" > ${REVFILE}
echo "BRANCH ${BRANCH}" >> ${REVFILE}
echo "MINOR ${MINOR}" >> ${REVFILE}
echo "RELTAG ${TAGHEAD}${MAJOR}_${BRANCH}_${MINOR}" >> ${REVFILE}
echo "CVSUPTODATE $CVSMOD" >> ${REVFILE}
echo "DATE $DATE" >> ${REVFILE}

# DM - again, need some options - for now just going to leave the tags
# Update our tags
#if [ ! "$HAVECVS" = "" ] ; then
#  echo "Adding tags: ${TAGHEAD}${MAJOR}_${BRANCH}_${MINOR}, LATEST"
#  cvs -Q tag -l `echo "${TAGHEAD}${MAJOR}_${BRANCH}_${MINOR}"` .
#  cvs -Q tag -l -F LATEST .
#fi
@


1.7
log
@All good.
@
text
@d11 1
a11 1
SERVER_NAME=mud
@


1.6
log
@Artus> In Progress. Just wishing to c
@
text
@d15 3
a17 1
  exit 1
@


1.5
log
@Latest Versions
@
text
@d11 1
a11 1
SERVER_NAME=primal
@


1.4
log
@
: ----------------------------------------------------------------------
: Enter Log.  Lines beginning with `CVS:' are removed automatically
:
: Committing in .
:
: Modified Files:
: 	act.informative.c act.other.c act.wizard.c balance.c class.c
: 	constants.c db.c fight.c handler.c interpreter.c magic.c
: 	oedit.c redit.c spec_procs.c spell_parser.c spells.h
: 	update_revisions
: ----------------------------------------------------------------------

Modified: DM

Changed:
- heaps: mostly minor bug fixes.
@
text
@d42 1
d53 1
@


1.3
log
@
Added:
- proper server check
@
text
@d10 2
a11 1
SERVER_NAME=dionysus.labyrinth.net.au
d32 1
d34 8
a41 7
if [ ! "$HAVECVS" = "" ] ; then
  MODIFIED=`cvs -n update -l . | grep M`
  if [ ! "$MODIFIED" = "" ] ; then
    CVSMOD=0
    MINOR=`expr ${MINOR} + 1`
  fi
fi
d53 1
d55 5
a59 5
if [ ! "$HAVECVS" = "" ] ; then
  echo "Adding tags: ${TAGHEAD}${MAJOR}_${BRANCH}_${MINOR}, LATEST"
  cvs -Q tag -l `echo "${TAGHEAD}${MAJOR}_${BRANCH}_${MINOR}"` .
  cvs -Q tag -l -F LATEST .
fi
@


1.2
log
@
- Evolved script
@
text
@d10 7
d36 1
a39 1
MINOR=`expr ${MINOR} + 1`
@


1.1
log
@
Added:
- Initial addition - used to update cvs tags and update revision info
@
text
@d2 8
a10 2
REV=`cat ${REVFILE} | grep "REV" | cut -f 2 -d ' '`
VER=`cat ${REVFILE} | grep "VER" | cut -f 2 -d ' '`
d12 23
a34 2
VER=`expr ${VER} + 1`
echo ${REV}_${VER}
d36 6
a41 3
echo "REV ${REV} # Edit this by hand" > ${REVFILE}
echo "VER ${VER} # DO NOT EDIT - GENERATED BY MAKE" >> ${REVFILE}
echo "RELTAG ${REV}_${VER}" >> ${REVFILE}
d43 6
a48 2
cvs tag `echo "A${REV}_${VER}"` .
cvs tag -F LATEST .
@

