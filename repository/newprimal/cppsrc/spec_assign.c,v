head	1.25;
access;
symbols
	A3_0_59:1.5
	LATEST:1.5
	A3_0_1:1.5;
locks; strict;
comment	@ * @;


1.25
date	2004.05.25.04.42.05;	author mud;	state Exp;
branches;
next	1.24;

1.24
date	2004.05.06.02.23.30;	author mud;	state Exp;
branches;
next	1.23;

1.23
date	2004.04.21.07.08.11;	author mud;	state Exp;
branches;
next	1.22;

1.22
date	2004.01.14.05.57.20;	author mud;	state Exp;
branches;
next	1.21;

1.21
date	2004.01.11.03.46.45;	author mud;	state Exp;
branches;
next	1.20;

1.20
date	2004.01.06.04.32.51;	author mud;	state Exp;
branches;
next	1.19;

1.19
date	2003.12.24.01.29.10;	author mud;	state Exp;
branches;
next	1.18;

1.18
date	2003.11.17.12.36.24;	author mud;	state Exp;
branches;
next	1.17;

1.17
date	2003.11.16.03.19.09;	author mud;	state Exp;
branches;
next	1.16;

1.16
date	2003.11.12.11.00.14;	author mud;	state Exp;
branches;
next	1.15;

1.15
date	2003.10.14.07.24.16;	author mud;	state Exp;
branches;
next	1.14;

1.14
date	2003.04.26.10.00.38;	author rod;	state Exp;
branches;
next	1.13;

1.13
date	2002.07.20.08.17.56;	author mud;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.14.06.10.18;	author primal;	state Exp;
branches;
next	1.11;

1.11
date	2002.01.25.03.54.41;	author primal;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.26.23.49.58;	author primal;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.03.10.07.18;	author primal;	state Exp;
branches;
next	1.8;

1.8
date	2001.06.03.05.24.45;	author artus;	state Exp;
branches;
next	1.7;

1.7
date	2001.04.11.14.37.29;	author artus;	state Exp;
branches;
next	1.6;

1.6
date	2001.04.04.08.11.42;	author primal;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.20.16.42.05;	author primal;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.13.00.59.20;	author primal;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.27.11.26.39;	author talisman;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.13.14.25.13;	author mbd;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.12.07.44.00;	author mbd;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Artus> Removed some unused specprocs.
@
text
@/* ************************************************************************
*   File: spec_assign.c                                 Part of CircleMUD *
*  Usage: Functions to assign function pointers to objs/mobs/rooms        *
*                                                                         *
*  All rights reserved.  See license.doc for complete information.        *
*                                                                         *
*  Copyright (C) 1993, 94 by the Trustees of the Johns Hopkins University *
*  CircleMUD is based on DikuMUD, Copyright (C) 1990, 1991.               *
************************************************************************ */

#include "conf.h"
#include "sysdep.h"

#include "structs.h"
#include "db.h"
#include "interpreter.h"
#include "utils.h"
#include "clan.h"
#include "boards.h"

#if 0 // Artus> Unused: Dump.
extern int dts_are_dumps;
#endif
extern int mini_mud;
extern struct room_data *world;
extern struct index_data *mob_index;
extern struct index_data *obj_index;

  SPECIAL(repairer);
/* ARTUS - Clan Procs */
  SPECIAL(clan_guard);
  SPECIAL(clan_healer);
/* MOB PROCS */
  SPECIAL(thrower);
  SPECIAL(postmaster);
  SPECIAL(cityguard);
  SPECIAL(receptionist);
  SPECIAL(cryogenicist);
  SPECIAL(guild_guard);
  SPECIAL(trainer);
  SPECIAL(guild);
  SPECIAL(janitor);
#if 0 // Artus> Unused: Fido, Mayor, Thief, Puff, Head Druid.
  SPECIAL(fido);
  SPECIAL(mayor);
  SPECIAL(puff);
  SPECIAL(thief);
  SPECIAL(head_druid);
#endif
  SPECIAL(snake);
  SPECIAL(magic_user);
  SPECIAL(citizen);
  SPECIAL(oompa);
  SPECIAL(tin_man);
  SPECIAL(scarecrow);
  SPECIAL(c_lion);
  SPECIAL(sleepy);
  SPECIAL(sneazy);
  SPECIAL(grumpy);
  SPECIAL(bashful);
  SPECIAL(lazy);
  SPECIAL(doc);
  SPECIAL(wind_summon);
  SPECIAL(dopy);
  SPECIAL(giant);
  SPECIAL(construction_worker);
  SPECIAL(recep_guard);
  SPECIAL(cleric);
  SPECIAL(cleric2);
  SPECIAL(warrior);
  SPECIAL(warrior1);
  SPECIAL(quest_sentry);
  SPECIAL(corridor_guard);
  SPECIAL(acid_breath);
  SPECIAL(regen); 
  SPECIAL(constrictor);
  SPECIAL(bounty_hunter);
  SPECIAL(assasin);
  SPECIAL(elec_shock);
  SPECIAL(virus);
  SPECIAL(bacteria);
  SPECIAL(blood_sucker);
  SPECIAL(Jabba);
  SPECIAL(blink_demon);
  SPECIAL(beholder);
  SPECIAL(self_destruct);
  SPECIAL(disposable);
  SPECIAL(zombie); /* zombie for anim dead spell */
  SPECIAL(clone);  /* clone for clone spell      */
  SPECIAL(vampire);  /* vampire and bat that turns into vampire proc */
  SPECIAL(werewolf); /* werewolf of haven proc for both changer and wolf */
  SPECIAL(school); /* for the piranah */
  SPECIAL(trojan);
  SPECIAL(drainer); 
  SPECIAL(fire_breath);
  SPECIAL(gaze_npc);
  SPECIAL(banish);
  SPECIAL(phoenix);
  SPECIAL(aphrodite);
  SPECIAL(richard_garfield);
  SPECIAL(dragon);
  SPECIAL(santa);
  SPECIAL(caroller);
  SPECIAL(easter_bunny);
  SPECIAL(ice_breath);
  SPECIAL(peacekeeper);

  SPECIAL(delenn); 	/* Delenn*/
  SPECIAL(alien_voice);
  SPECIAL(alien_voice_echo);

  // The island forever - Talisman's spec_procs
  SPECIAL(fate);
  SPECIAL(titan);
  SPECIAL(anxiousleader);
  SPECIAL(packmember);
  SPECIAL(packleader);
  SPECIAL(avenger);
  SPECIAL(insanity);
  SPECIAL(arrogance);
  SPECIAL(playerhunter);

  SPECIAL(conc_bouncer); // Artus: Rhcp's Concert Bouncer

  // Burgle procs
  SPECIAL(burgle_area_occupant);

/* Well... I sorta wiped these guys out... -- ARTUS 
  SPECIAL(rose_club_guard);
  SPECIAL(avengers_guard);
  SPECIAL(guardian_guard);
  SPECIAL(jedi_guard);
  SPECIAL(uss_guard);

  SPECIAL(healer);
*/

  SPECIAL(high_dice);
  SPECIAL(craps);
  SPECIAL(triples);
  SPECIAL(seven);
  SPECIAL(roulette);
  SPECIAL(high_dice1);
  SPECIAL(craps1);
  SPECIAL(triples1);
  SPECIAL(seven1);
  SPECIAL(roulette1);

  /* OBJ PROCS  */
  SPECIAL(bank);
  SPECIAL(cowboy_hat);
  SPECIAL(deadlyblade);
  SPECIAL(dimensional_gate); /* spec proc for gate spell */
  SPECIAL(frisbee);
  SPECIAL(gen_board);
#if 0 // Drax, this is really fucking sad.
  SPECIAL(love_ring);
#endif
  SPECIAL(marbles);
  SPECIAL(pokies);
  SPECIAL(pokies1);
  SPECIAL(pokies2);
  SPECIAL(pokies3);
  SPECIAL(ring);
  SPECIAL(roller_blades);
  SPECIAL(snap);
  SPECIAL(tardis);
  SPECIAL(toboggan);
  SPECIAL(xmas_tree);
  SPECIAL(room_trap); // For setting traps in rooms - Artus
  SPECIAL(reward_obj); // Artus> Automated Quest Obj.
  SPECIAL(watch_timer); // Artus> Watch Ticker.

  /* ROOM PROCS */	
  SPECIAL(casino);
#if 0 // Artus> Unused: Dump
  SPECIAL(dump);
#endif
  SPECIAL(pet_shops);
  SPECIAL(pray_for_items);
  SPECIAL(elevator); /* glass elevator */
  SPECIAL(set_tag); /* tag arena teleporter thing */
  SPECIAL(maze);
  // The island forever - Talisman's spec_procs
  SPECIAL(darkportal);
  SPECIAL(pillars);
  SPECIAL(room_magic_ripple);
  SPECIAL(titansuit);
  SPECIAL(room_magic_unstable);
  SPECIAL(blast_room);
  SPECIAL(shoot_room);
  SPECIAL(arrow_room);

/* local functions */
void assign_mobiles(void);
void assign_objects(void);
void assign_rooms(void);

/* functions to perform assignments */

void ASSIGNMOB(mob_vnum mob, SPECIAL(fname))
{
  mob_rnum rnum;

  if ((rnum = real_mobile(mob)) >= 0)
    mob_index[rnum].func = fname;
  else if (!mini_mud)
    basic_mud_log("SYSERR: Attempt to assign spec to non-existant mob #%d", mob);
}

void ASSIGNOBJ(obj_vnum obj, SPECIAL(fname))
{
  obj_rnum rnum;

  if ((rnum = real_object(obj)) >= 0)
    obj_index[rnum].func = fname;
  else if (!mini_mud)
    basic_mud_log("SYSERR: Attempt to assign spec to non-existant obj #%d", obj);
}

void ASSIGNROOM(room_vnum room, SPECIAL(fname))
{
  room_rnum rnum;

  if ((rnum = real_room(room)) >= 0)
    world[rnum].func = fname;
  else if (!mini_mud)
    basic_mud_log("SYSERR: Attempt to assign spec to non-existant room #%d", room);
}


/* ********************************************************************
*  Assignments                                                        *
******************************************************************** */

/* assign special procedures to mobiles */
void assign_mobiles(void)
{

  ASSIGNMOB(1107, repairer);
  
/* healer */
  //ASSIGNMOB(122,  healer);
/* Gambling House */
/* commented out while objects are non-existant - bill 
  ASSIGNMOB(13800, high_dice);
  ASSIGNMOB(13801, craps);  
  ASSIGNMOB(13802, triples); 
  ASSIGNMOB(13803, seven); 
  ASSIGNMOB(13804, roulette);
  ASSIGNMOB(13807, high_dice1);
  ASSIGNMOB(13808, craps1);  
  ASSIGNMOB(13809, triples1); 
  ASSIGNMOB(13810, seven1); 
  ASSIGNMOB(13811, roulette1);       */

  ASSIGNMOB(22303, easter_bunny); /* guess... */
  ASSIGNMOB(22302, santa); /* santa claus */
  ASSIGNMOB(22303, caroller); /* christmas caroller */
  ASSIGNMOB(22300, clone);
  ASSIGNMOB(22301, zombie); /* anim dead zombie */

  ASSIGNMOB(13222, receptionist); 
  ASSIGNMOB(13205, peacekeeper);  /* sheriff and deputy, city of Hope, westworld */
  ASSIGNMOB(13206, peacekeeper);

  ASSIGNMOB(2536, richard_garfield); /* richard garfield for magic zone */
  ASSIGNMOB(2473, dragon);

  ASSIGNMOB(909,bounty_hunter);
  ASSIGNMOB(10002,assasin);
  ASSIGNMOB(WOLF_VNUM, werewolf); /* werewolf */
  ASSIGNMOB(VAMP_VNUM, vampire); /* vampire */
//  ASSIGNMOB(1224, corridor_guard);
  ASSIGNMOB(1105, receptionist);
#if 0 // Artus> Unused.
  ASSIGNMOB(910, quest_sentry);
#endif
  ASSIGNMOB(1208, citizen);
  ASSIGNMOB(1213, construction_worker);
  ASSIGNMOB(1210, janitor);
  ASSIGNMOB(1120, cityguard);
  ASSIGNMOB(1121, postmaster);  
  ASSIGNMOB(1110, guild);
  ASSIGNMOB(1111, guild);
  ASSIGNMOB(1112, guild);
  ASSIGNMOB(1113, guild);
  ASSIGNMOB(1114, guild);
  ASSIGNMOB(1115, guild);
  ASSIGNMOB(1116, guild);
  ASSIGNMOB(1117, guild);
  ASSIGNMOB(1118, guild);
  ASSIGNMOB(1119, guild);
  ASSIGNMOB(1135, guild);
//  ASSIGNMOB(1211, virus);
//  ASSIGNMOB(1212, bacteria);
  ASSIGNMOB(1214, trainer);

  /* luna city */
  ASSIGNMOB(22000, janitor);
  ASSIGNMOB(22005, cityguard);
  ASSIGNMOB(22006, receptionist);
  ASSIGNMOB(22017, guild);
  ASSIGNMOB(22018, guild);
  ASSIGNMOB(22019, guild);
  /* danger island */
  ASSIGNMOB(8803, acid_breath);

  /* moon surface */
  ASSIGNMOB(23000, elec_shock);
  ASSIGNMOB(23003, elec_shock);
  ASSIGNMOB(23002, elec_shock);
  ASSIGNMOB(23001, regen);             /* prospector */
  /* vampire */
  ASSIGNMOB(1014, blood_sucker);

  /* helpers summoned by clerics */ 
  ASSIGNMOB(1016 , magic_user); 
  ASSIGNMOB(1017 , magic_user);
  ASSIGNMOB(1018 , magic_user);
  ASSIGNMOB(1019 , magic_user);
  ASSIGNMOB(1020 , magic_user);
  ASSIGNMOB(1021 , magic_user);

  ASSIGNMOB(900, magic_user);     /* Gods */ 
  ASSIGNMOB(901, magic_user);
  ASSIGNMOB(902, magic_user);

  /* Rushmoor swamp */
  ASSIGNMOB(8504, acid_breath);         /* wasp */
  ASSIGNMOB(8506, magic_user);    /* wraith */
  ASSIGNMOB(8508, cleric);        /* night hag */
  ASSIGNMOB(8505, regen);         /* mudman */
  ASSIGNMOB(8509, magic_user);    /* Ningauble wizard */
  ASSIGNMOB(8507, snake);         /* crawler */
  ASSIGNMOB(8503, elec_shock);    /* eel */

/*JA : some spec procs for the new forest zone till I work out
       some better ones */
  /* LHANKWOOD FOREST */
  ASSIGNMOB(8301, magic_user);    /* grand high elf */
  ASSIGNMOB(8305, magic_user);    /* high priest elf */
  ASSIGNMOB(8307, acid_breath);   /* green dragon */
  ASSIGNMOB(8310, magic_user);    /* lich */    
  ASSIGNMOB(8308, regen);         /* 2 headed troll */ 
  ASSIGNMOB(8312, constrictor);   /* python */

  /* mountains */
  ASSIGNMOB(5501, regen);         /* troll */
  ASSIGNMOB(5504, magic_user);    /* elemental */

  
  /* DESERT */
  ASSIGNMOB(807, magic_user);     /* sphinx */
  ASSIGNMOB(802, acid_breath);    /* purple worm */
  
  /* gaveyard */
  ASSIGNMOB(1605, snake);         /* small spider */
  ASSIGNMOB(1604, snake);         /* brown snake */
 
  /* toyheim */
  ASSIGNMOB(9009, cityguard);    /* GI Joe */

  /* tudor */
  ASSIGNMOB(8106, cleric);       /* bishop */
  ASSIGNMOB(8112, cityguard) ;   /* guard */
  ASSIGNMOB(8109, cleric);       /* monk */
  ASSIGNMOB(8100, magic_user);   /* queen */
  ASSIGNMOB(8101, cleric);       /* melchid */
  ASSIGNMOB(8117, warrior1);
  ASSIGNMOB(8118, warrior1);
  ASSIGNMOB(8119, warrior1);
  ASSIGNMOB(8120, gaze_npc);

  /* shadow keep */
  ASSIGNMOB(9504, magic_user);    /* shadowen */
  ASSIGNMOB(9505, magic_user);    /* larger shadowen */
  ASSIGNMOB(9514, regen);         /* disembodied */
  ASSIGNMOB(9512, regen);
  ASSIGNMOB(9513, regen);
  ASSIGNMOB(9517, acid_breath);   /* night crawler */
  ASSIGNMOB(9515, snake);         /* spider */
  ASSIGNMOB(9520, cleric);        /* priest */
  ASSIGNMOB(9506, cleric);        /* cleric */
  ASSIGNMOB(9507, magic_user);    /* mage */
  ASSIGNMOB(9530, magic_user);    /* big stone */
  ASSIGNMOB(9503, magic_user);    /* geat statue */
 

 /* Labyrinth */
  ASSIGNMOB(11918, cityguard);	 /*the warning stones*/
  ASSIGNMOB(11921, cityguard);	 /*the cleaners*/
  ASSIGNMOB(11909, magic_user);	 /*the fortune teller*/
  ASSIGNMOB(11925, magic_user);	 /*Froboz*/

  ASSIGNMOB(11920, magic_user);	 /*a little old man*/
  ASSIGNMOB(11925, magic_user);	 /*Froboz again*/
  ASSIGNMOB(11930, gaze_npc);	 /*Goblin King*/
  ASSIGNMOB(11931, magic_user);	 /*Sarah*/
  ASSIGNMOB(11932, warrior1);	 /*Ludo*/
  ASSIGNMOB(11933, magic_user);	 /*Hoggle*/

 /* ASSIGNMOB(7105, magic_user);      // dragon */

  ASSIGNMOB(1012, snake);           /*ghast */
  ASSIGNMOB(702, snake);            /* snake in grass */

  /* toyheim */
  ASSIGNMOB(9012, magic_user);      /* chuckie */

  ASSIGNMOB(1209, magic_user);   /* the trickster - low-level magii */
//  ASSIGNMOB(501, recep_guard);  /* to un-rent players :) */
  ASSIGNMOB(1002, snake);       /* poison spiders in moathouse */
  ASSIGNMOB(1003, snake);       /* poison snake in moathouse   */

  /* island */
  /* ASSIGNMOB(8711, snake); */      /* fungi are snakes ie poison for now */
  ASSIGNMOB(8701, cleric);      /* druid */
  ASSIGNMOB(8702, magic_user);  /* eye of the deep */
  ASSIGNMOB(8705, magic_user);  /* chimera */
  ASSIGNMOB(8706, snake);       /* frogs */
  ASSIGNMOB(8707, magic_user);  /* astralo wolf */
  ASSIGNMOB(8711, self_destruct); /* fungus */

/* Hells Mountain Fortress 
  ASSIGNMOB(1100, magic_user);
  ASSIGNMOB(1101, warrior);
  ASSIGNMOB(1103, cleric2);
  ASSIGNMOB(1104, magic_user);  
  ASSIGNMOB(1105, cleric);  
  ASSIGNMOB(1108, cleric);
  ASSIGNMOB(1109, magic_user);
  ASSIGNMOB(1111, fire_breath);
  ASSIGNMOB(1112, acid_breath);  
  ASSIGNMOB(1113, ice_breath);
  ASSIGNMOB(1114, elec_shock);
  ASSIGNMOB(1115, acid_breath);
  ASSIGNMOB(1138, assasin);  
  ASSIGNMOB(1147, magic_user);
*/

  /* Moanders Domain */
  ASSIGNMOB(1800, snake);          /* Decay Deamon*/
  ASSIGNMOB(1801, magic_user);     /* Deamon of fire*/
  ASSIGNMOB(1806, magic_user);     /* Saurial Wizard*/
  ASSIGNMOB(1814, thrower);          /* Moander */
  ASSIGNMOB(1813, regen);          /* Bone Guard */
  ASSIGNMOB(1815, blink_demon);    /* Blink Demon */
  ASSIGNMOB(1804, beholder);       /* Beholder */

  /* Fairytale Forrest! */
  ASSIGNMOB(4303, oompa);		/* ommpa lumpas */
  ASSIGNMOB(4355,tin_man);		/* Tin Man */
  ASSIGNMOB(4356,scarecrow);		/* Scarecrow */
  ASSIGNMOB(4357,c_lion);		/* Cowardly lion */
  ASSIGNMOB(4315,giant);		/* Jacks giant!! */
  ASSIGNMOB(4328,sleepy);
  ASSIGNMOB(4329,grumpy);
  ASSIGNMOB(4327,sneazy);
  ASSIGNMOB(4330,dopy);
  ASSIGNMOB(4333,lazy);
  ASSIGNMOB(4332,bashful);
  ASSIGNMOB(4331,doc);
  ASSIGNMOB(4319,thrower);

  /* Quest Mobs spec procs */
  ASSIGNMOB(4500, gaze_npc);          /* Slizzarr*/
  ASSIGNMOB(4501, wind_summon);       /* Wind Duke */
  ASSIGNMOB(4502, snake);		/* wolfspider */ 
  
  /* Mons Island spec procs */
  ASSIGNMOB(26004, Jabba);
  ASSIGNMOB(26007, magic_user);     /* Boba Fett */

  /* specs for the river zone */
  ASSIGNMOB(8402, school);					/* piranah */
  ASSIGNMOB(8400, constrictor);			/* serpent */
  ASSIGNMOB(8401, magic_user);			/* water element */
  ASSIGNMOB(8403, drainer);         /* vargoyle */

  /* specs for */
  ASSIGNMOB(1901, elec_shock); /* anhkeg    */
  ASSIGNMOB(1908, cleric);     /* night hag */

  /* Spiral*/
  ASSIGNMOB(2200, regen);		/* morkoth */
  ASSIGNMOB(2201, thrower);		
  ASSIGNMOB(2202, blood_sucker);	/* lolth */
  ASSIGNMOB(2203, constrictor);	/* ogremoch */
  ASSIGNMOB(2205, regen);		/* trogoladyte */
  ASSIGNMOB(2206, regen);		/* slithering tracker */
  ASSIGNMOB(2210, fire_breath);   /* fire bat */
  ASSIGNMOB(1905, regen);         /* caveman guard */
  ASSIGNMOB(2216, warrior1);       /*Troglodyte guard*/
  ASSIGNMOB(2217, warrior1);
  ASSIGNMOB(2226, warrior1);
  ASSIGNMOB(2236, warrior1);
  ASSIGNMOB(2220, cleric2);       /* cardinal */
  ASSIGNMOB(2229, cleric2);	/* cardinal */
  ASSIGNMOB(2238, cleric2);	/* cardinal */
  ASSIGNMOB(2219, gaze_npc);	/* Priest */
  ASSIGNMOB(2228, gaze_npc);	/* priest */
  ASSIGNMOB(2237, gaze_npc);	/* priest */	
  ASSIGNMOB(2222, warrior1);      /* misstress */
  ASSIGNMOB(2221, magic_user);
  ASSIGNMOB(2239, magic_user);
  ASSIGNMOB(2239, magic_user);
  ASSIGNMOB(2223, cleric2);
  ASSIGNMOB(2241, gaze_npc);
  ASSIGNMOB(2243, warrior1);	/* drider king */
  ASSIGNMOB(2242, warrior1);	/* Drider queen */
  ASSIGNMOB(2240, magic_user);	/* Drider misstress */
  ASSIGNMOB(2235, warrior1);	/* drider knight */
  ASSIGNMOB(2234, magic_user); 	/* Troglod King */
  ASSIGNMOB(2233, magic_user);	/* Troglod Queen */
  ASSIGNMOB(2232, warrior1);	/* Troglod Master */
  ASSIGNMOB(2231, cleric2);	/* Troglod Misstress */
  ASSIGNMOB(2230, magic_user);	/* Troglod Apprentice */
  ASSIGNMOB(2227, gaze_npc);	/* Troglod Priest */
  ASSIGNMOB(2224, magic_user);	/* trakker Queen */
  ASSIGNMOB(2225, magic_user);    /* trakker King */
  ASSIGNMOB(2218, cleric2);    	/* trakker Priest */
  ASSIGNMOB(2215, warrior1);      /* trakker */

  /* Anscient Greece */
  ASSIGNMOB(4800, warrior1);     /* Minotaur */
  ASSIGNMOB(4801, snake);        /* Vore */
  ASSIGNMOB(4802, regen);        /* gorgon */
  ASSIGNMOB(4803, warrior1);     /* sterope */
  ASSIGNMOB(4808, magic_user);   /* nix */
  ASSIGNMOB(4809, fire_breath);  /* steed */
  ASSIGNMOB(4810, warrior1);     /* margoyle */
  ASSIGNMOB(4811, aphrodite);    /* helen */
  ASSIGNMOB(4812, cleric2);      /* pegasus */
  ASSIGNMOB(4813, phoenix);      /* phoenix */
  ASSIGNMOB(4814, warrior1);     /* medusa */
  ASSIGNMOB(4816, trojan);       /* Trojan horse */
  ASSIGNMOB(4818, warrior1);     /* theseus */
  ASSIGNMOB(4819, regen);        /* man */
  ASSIGNMOB(4820, regen);        /* woman */
  ASSIGNMOB(4821, gaze_npc);     /* king minos */
  ASSIGNMOB(4822, warrior1);     /* perseus */
  ASSIGNMOB(4823, banish);       /* Zeus */
  ASSIGNMOB(4824, disposable);   /* Trojan Warrior */
  ASSIGNMOB(4825, aphrodite);    /* aphrodite */
  ASSIGNMOB(4826, gaze_npc);     /* Pluto */
  ASSIGNMOB(4827, magic_user);   /* guys in hell */
  ASSIGNMOB(4828, magic_user);   /* guys in hell */
  ASSIGNMOB(4829, magic_user);   /* guys in hell */
  ASSIGNMOB(4830, magic_user);   /* guys in hell */
  ASSIGNMOB(4832, acid_breath);  /* cerberus */

  /* The island forever */
  ASSIGNMOB(10101, fate);
  ASSIGNMOB(10154, playerhunter);
  ASSIGNMOB(10156, playerhunter);
  ASSIGNMOB(10157, titan);
  ASSIGNMOB(10114, anxiousleader);
  ASSIGNMOB(10113, anxiousleader);
  ASSIGNMOB(10108, packmember);
  ASSIGNMOB(10109, packleader);
  ASSIGNMOB(10105, avenger);
  ASSIGNMOB(10150, insanity);
  ASSIGNMOB(10102, playerhunter);
  ASSIGNMOB(10103, arrogance);

  /* ARTUS> Was this Age's zone?
  ASSIGNMOB(30901, burgle_area_occupant);	// Warehouse worker
  ASSIGNMOB(30902, burgle_area_occupant);	// Warehouse foreman
  ASSIGNMOB(30903, burgle_area_occupant);	// Warehouse gofer
  */

  /*The Sphere*/
  ASSIGNMOB(27001, acid_breath);   /*poisonous Gas*/
  ASSIGNMOB(27006, thrower);   /*Cpt Burns*/
  ASSIGNMOB(27007, warrior); /*Cor. Fletch*/
  ASSIGNMOB(27009, ice_breath);   /*poisonoud Gas*/
  ASSIGNMOB(27012, regen);         /*Corpral Levy*/
  ASSIGNMOB(27013, warrior);      /*captain Burns*/
  ASSIGNMOB(27015, snake);       /*green snake*/
  ASSIGNMOB(27016, cleric);     /*corporal Tina*/
  ASSIGNMOB(27017, constrictor); /*Squid*/
  ASSIGNMOB(27018, school);   /*squid sacs*/
  ASSIGNMOB(27019, constrictor); /*tentacle*/
  ASSIGNMOB(27020, regen);      /*shrip*/
  ASSIGNMOB(27021, snake);
  ASSIGNMOB(27022, alien_voice);	/* alien voice */
  ASSIGNMOB(27024, warrior);    /*sentroid*/
  ASSIGNMOB(27028, gaze_npc);  /*evil blackness*/
//  ASSIGNMOB(27032, corridor_guard); /*guardian droid*/
//  ASSIGNMOB(27033, corridor_guard);   /* guardian droid KF*/
  ASSIGNMOB(27040, alien_voice_echo);	    /* alien hunter */

  /*Babylon5*/
  ASSIGNMOB(30000, magic_user); /* Soul Hunter*/
  ASSIGNMOB(30002, magic_user); /* Drak       */
  ASSIGNMOB(30004, warrior);    /* Sheridian  */
  ASSIGNMOB(30005, cleric2);    /* franklin   */
  ASSIGNMOB(30006, warrior);    /* ivanova    */
  ASSIGNMOB(30007, gaze_npc);   /* kosh       */
  ASSIGNMOB(30011, warrior1);   /* drall      */
  ASSIGNMOB(30015, magic_user); /* bester     */
  ASSIGNMOB(30016, magic_user); /* Lyta       */
  ASSIGNMOB(30021, warrior1);   /* shadow     */
  ASSIGNMOB(30022, warrior1);   /* Vorlon     */
  ASSIGNMOB(30025, magic_user); /* Psi Cop    */
  ASSIGNMOB(30008, delenn);     /* Delenn     */

  /*Holy City*/
  ASSIGNMOB(5203, warrior);    /* crypt thing  */
  ASSIGNMOB(5204, regen);      /* dragon horse */
  ASSIGNMOB(5208, warrior1);   /* cloud giant  */
  ASSIGNMOB(5209, cleric);     /* ki-rin       */
  ASSIGNMOB(5210, gaze_npc);   /* God Pazuzu   */
  ASSIGNMOB(5211, magic_user); /* deva         */
  ASSIGNMOB(5212, magic_user); /* deva         */
  ASSIGNMOB(5213, cleric);     /* deva         */
  
  /* Artus> Clan Area */
  ASSIGNMOB(25500, clan_guard);
  ASSIGNMOB(25501, clan_guard);
  ASSIGNMOB(25502, clan_guard);
  ASSIGNMOB(25503, clan_guard);
  ASSIGNMOB(25504, clan_guard);
  ASSIGNMOB(25505, clan_guard);
  ASSIGNMOB(25506, clan_guard);
  ASSIGNMOB(25507, clan_guard);
  ASSIGNMOB(25508, clan_healer);
  ASSIGNMOB(25509, clan_healer);
  ASSIGNMOB(25510, clan_healer);
  ASSIGNMOB(25511, clan_healer);
  ASSIGNMOB(25512, clan_healer);
  ASSIGNMOB(25513, clan_healer);
  ASSIGNMOB(25514, clan_healer);
  ASSIGNMOB(25515, clan_healer);
}



/* assign special procedures to objects */
void assign_objects(void)
{
  ASSIGNOBJ(10232, deadlyblade);

  ASSIGNOBJ(22327, toboggan);
  ASSIGNOBJ(22328, roller_blades);
  ASSIGNOBJ(22332, frisbee);
  ASSIGNOBJ(22329, snap);
  ASSIGNOBJ(22320, xmas_tree); /* xmas tree for tavern */
  ASSIGNOBJ(22314, cowboy_hat); /* cowboy hat to transport to westworld */
  ASSIGNOBJ(22398, tardis);
  ASSIGNOBJ(22300, dimensional_gate); /* gate spell */

  ASSIGNOBJ(31005, reward_obj);
  ASSIGNOBJ(4551, watch_timer);
  ASSIGNOBJ(TRAP_OBJ, room_trap); /* Trap objects.. */

  assign_boards();

  ASSIGNOBJ(1264, bank);	/* atm */
  ASSIGNOBJ(13225, bank);       /* bank in westworld = teller */

/*  ASSIGNOBJ(16024,love_ring); */
  ASSIGNOBJ(9040, marbles);

/* Gambling House */                  /* commented out till objects "exist" again */
/*  ASSIGNOBJ(13800, pokies);
  ASSIGNOBJ(13801, pokies1);
  ASSIGNOBJ(13802, pokies2);
  ASSIGNOBJ(13803, pokies3);  */

}



/* assign special procedures to rooms */
void assign_rooms(void)
{
/*
  ASSIGNROOM(3030, dump);
  ASSIGNROOM(3031, pet_shops);
  ASSIGNROOM(21116, pet_shops);
*/
  ASSIGNROOM(4437, elevator);
  ASSIGNROOM(4520, set_tag);
  ASSIGNROOM(2762, maze);

  // Casino rooms
  ASSIGNROOM(1200, casino);
  ASSIGNROOM(1233, casino);

  // The island forever

  /* LEVEL 3 of tower */
  ASSIGNROOM(10289, room_magic_ripple); ASSIGNROOM(10288, room_magic_ripple);
  ASSIGNROOM(10287, room_magic_ripple); ASSIGNROOM(10286, room_magic_ripple);
  ASSIGNROOM(10285, room_magic_ripple); ASSIGNROOM(10284, room_magic_ripple);
  ASSIGNROOM(10283, room_magic_ripple); ASSIGNROOM(10281, room_magic_ripple);
  ASSIGNROOM(10280, room_magic_ripple); ASSIGNROOM(10279, room_magic_ripple);
  ASSIGNROOM(10278, room_magic_ripple); ASSIGNROOM(10277, room_magic_ripple);
  ASSIGNROOM(10276, room_magic_ripple); ASSIGNROOM(10275, room_magic_ripple);
  ASSIGNROOM(10274, room_magic_ripple); ASSIGNROOM(10272, room_magic_ripple);
  ASSIGNROOM(10271, room_magic_ripple); ASSIGNROOM(10270, room_magic_ripple); 

 /* LEVEL 4 of tower */
  ASSIGNROOM(10318, room_magic_unstable);
  ASSIGNROOM(10317, room_magic_unstable);
  ASSIGNROOM(10316, room_magic_unstable);
  ASSIGNROOM(10315, room_magic_unstable);
  ASSIGNROOM(10313, room_magic_unstable);
  ASSIGNROOM(10312, room_magic_unstable);
  ASSIGNROOM(10311, room_magic_unstable);
  ASSIGNROOM(10310, room_magic_unstable);
  ASSIGNROOM(10309, room_magic_unstable);
  ASSIGNROOM(10308, room_magic_unstable);
  ASSIGNROOM(10307, room_magic_unstable);
  ASSIGNROOM(10306, room_magic_unstable);
  ASSIGNROOM(10305, room_magic_unstable);
  ASSIGNROOM(10304, room_magic_unstable);
  ASSIGNROOM(10303, room_magic_unstable);
  ASSIGNROOM(10302, room_magic_unstable);
  ASSIGNROOM(10301, room_magic_unstable);
  ASSIGNROOM(10349, titansuit);
  ASSIGNROOM(10330, darkportal);
  ASSIGNROOM(10204, pillars);
#if 0
  // Artus> Actually.. These do need to be handled separately.
  ASSIGNROOM(10208, blast_room);
  ASSIGNROOM(10209, blast_room);
  ASSIGNROOM(10210, blast_room);
  ASSIGNROOM(10106, shoot_room);
#endif

  // Artus> Ruprect's Arrow Rooms.
  ASSIGNROOM(13600, arrow_room); ASSIGNROOM(13605, arrow_room);
  ASSIGNROOM(13615, arrow_room); ASSIGNROOM(13626, arrow_room);
  ASSIGNROOM(13640, arrow_room); ASSIGNROOM(13650, arrow_room);
  ASSIGNROOM(13664, arrow_room); ASSIGNROOM(13674, arrow_room);
  ASSIGNROOM(13675, arrow_room); ASSIGNROOM(13676, arrow_room);
  ASSIGNROOM(13677, arrow_room); ASSIGNROOM(13678, arrow_room);
  ASSIGNROOM(13679, arrow_room); ASSIGNROOM(13680, arrow_room);
  ASSIGNROOM(13693, arrow_room); ASSIGNROOM(13694, arrow_room);
  ASSIGNROOM(13695, arrow_room); ASSIGNROOM(13696, arrow_room);
  ASSIGNROOM(13697, arrow_room); ASSIGNROOM(13698, arrow_room);
  ASSIGNROOM(13699, arrow_room); ASSIGNROOM(13700, arrow_room);
  ASSIGNROOM(13701, arrow_room); ASSIGNROOM(13706, arrow_room);
  ASSIGNROOM(13716, arrow_room); ASSIGNROOM(13725, arrow_room);
  ASSIGNROOM(13732, arrow_room); ASSIGNROOM(13734, arrow_room);
  ASSIGNROOM(13735, arrow_room); ASSIGNROOM(13736, arrow_room);
  ASSIGNROOM(13737, arrow_room); ASSIGNROOM(13738, arrow_room);
  ASSIGNROOM(13740, arrow_room); ASSIGNROOM(13741, arrow_room);
  ASSIGNROOM(13742, arrow_room); ASSIGNROOM(13743, arrow_room);
  ASSIGNROOM(13744, arrow_room); ASSIGNROOM(13745, arrow_room);
  ASSIGNROOM(13748, arrow_room); ASSIGNROOM(13749, arrow_room);
  ASSIGNROOM(13750, arrow_room); ASSIGNROOM(13751, arrow_room);
  ASSIGNROOM(13752, arrow_room); ASSIGNROOM(13753, arrow_room);
  ASSIGNROOM(13754, arrow_room); ASSIGNROOM(13755, arrow_room);
  ASSIGNROOM(13759, arrow_room); ASSIGNROOM(13760, arrow_room);
  ASSIGNROOM(13761, arrow_room); ASSIGNROOM(13762, arrow_room);
  ASSIGNROOM(13764, arrow_room); ASSIGNROOM(13765, arrow_room);
  ASSIGNROOM(13771, arrow_room); ASSIGNROOM(13772, arrow_room);
  ASSIGNROOM(13773, arrow_room); ASSIGNROOM(13774, arrow_room);
  ASSIGNROOM(13775, arrow_room); ASSIGNROOM(13776, arrow_room);
  ASSIGNROOM(13777, arrow_room); ASSIGNROOM(13778, arrow_room);
  ASSIGNROOM(13779, arrow_room); ASSIGNROOM(13780, arrow_room);
  ASSIGNROOM(13781, arrow_room); ASSIGNROOM(13782, arrow_room);
  ASSIGNROOM(13783, arrow_room); ASSIGNROOM(13784, arrow_room);
  ASSIGNROOM(13785, arrow_room); ASSIGNROOM(13786, arrow_room);
  ASSIGNROOM(13787, arrow_room); ASSIGNROOM(13793, arrow_room);
  ASSIGNROOM(13796, arrow_room); ASSIGNROOM(13797, arrow_room);
  ASSIGNROOM(13798, arrow_room);

#if 0
  if (dts_are_dumps)
    for (i = 0; i <= top_of_world; i++)
      if (ROOM_FLAGGED(i, ROOM_DEATH))
	world[i].func = dump;
#endif
}
@


1.24
log
@Artus> Now warning free :o)
@
text
@d21 1
d23 1
a33 1
  SPECIAL(quest_master);
d42 2
a43 1
  SPECIAL(puff);
a44 1
  SPECIAL(janitor);
d46 4
a50 1
  SPECIAL(thief);
a71 1
  SPECIAL(head_druid);
d156 1
a156 1
#ifdef DRAX_IS_TEH_SUXOR // Artus> What a waste of cycles.
d176 1
d178 1
a243 1
  ASSIGNMOB(910, quest_master);
d276 1
d278 1
d679 2
a680 3
  room_rnum i;

   /* ASSIGNROOM(3030, dump);
d773 1
d778 1
@


1.23
log
@Artus> Gauntlet/Compound are no longer specprocs. Again.
@
text
@d397 1
a397 1
 /* ASSIGNMOB(7105, magic_user);      /* dragon */
@


1.22
log
@Artus> arrow_rooms, blast_rooms, shoot_rooms and watch_timers.
       Reomved recep_guard.
@
text
@d721 2
d727 1
@


1.21
log
@Artus> Werewolf/Vampire.
@
text
@d169 1
d185 3
d406 1
a406 1
  ASSIGNMOB(501, recep_guard);  /* to un-rent players :) */
d649 1
d690 9
a698 18
  ASSIGNROOM(10289, room_magic_ripple);
  ASSIGNROOM(10288, room_magic_ripple);
  ASSIGNROOM(10287, room_magic_ripple);
  ASSIGNROOM(10286, room_magic_ripple);
  ASSIGNROOM(10285, room_magic_ripple);
  ASSIGNROOM(10284, room_magic_ripple);
  ASSIGNROOM(10283, room_magic_ripple);
  ASSIGNROOM(10281, room_magic_ripple);
  ASSIGNROOM(10280, room_magic_ripple);
  ASSIGNROOM(10279, room_magic_ripple);
  ASSIGNROOM(10278, room_magic_ripple);
  ASSIGNROOM(10277, room_magic_ripple);
  ASSIGNROOM(10276, room_magic_ripple);
  ASSIGNROOM(10275, room_magic_ripple);
  ASSIGNROOM(10274, room_magic_ripple);
  ASSIGNROOM(10272, room_magic_ripple);
  ASSIGNROOM(10271, room_magic_ripple);
  ASSIGNROOM(10270, room_magic_ripple); 
d721 43
@


1.20
log
@Artus>
act.informative.c: Fixed bug where examining a container was always listng the
                   objects in the first container matched.
                   Gold rush finishing is now only displayed within the same
		   world.
act.movement.c   : Environmental damage is now passed through damage().
act.offensive.c  : Throw() now calls damage().
act.other.c      : When you fail to create a torch, it hurts.
dg_mobcmd.c      : mdamage() now calls damage().
dg_objcmd.c      : odamage() now calls damage().
dg_wldcmd.c      : wdamage() now calls damage().
fight.c          : Changed damage() to allow a NULL ch.
interpreter.c    : Falling because fly has worn off now calls damage().
limits.c         : No waterbreathe underwater now calls damage().
magic.c          : Added handle_fireball() for fire breathing, fireball, type
                   stuff..
                   Random chance of objs in inventory/open containers burning
                   up :o)
spec_assign.c    : Removed some unused/wasted assigns: corridor_guard,
                   receiptionist, virus, bacteria.
spec_procs.c     : Removed some unused/wasted procs. Changed lots of tali's
                   indenting.
                   Fixed gaping hole in deadlyblade proc.
                   Replaced GET_HIT(vict) -= with damage(ch, vict...
spell_parser.c   : Added awake and can_see checks to magic fail = mob attacks.
@
text
@a251 4
  ASSIGNMOB(1505, vampire); /* bat */
  ASSIGNMOB(1506, vampire); /* vampire */
  ASSIGNMOB(1215, werewolf); /* mob that changes into.. */
  ASSIGNMOB(1216, werewolf); /* ...the werewolf         */
d264 2
@


1.19
log
@Artus> Reward Object.
@
text
@d268 1
a268 1
  ASSIGNMOB(1224, corridor_guard);
d287 2
a288 2
  ASSIGNMOB(1211, virus);
  ASSIGNMOB(1212, bacteria);
d582 2
a583 2
  ASSIGNMOB(27032, corridor_guard); /*guardian droid*/
  ASSIGNMOB(27033, corridor_guard);   /* guardian droid KF*/
@


1.18
log
@Artus>
---
drop_otrigger takes an extra paramater for subcmd. With drop triggers you can
now specify whether the trigger is for drop, junk, donate and put. Specify
in the argument either/combination of 'junk', 'drop', 'donate', 'put'. No
argument means any type will be triggered:

act.item.c, dg_scripts.h, dg_triggers.c, interpreter.h
---
fixed colour bleed in dc:

act.wizard.c
---
Not reapplying empty timers in char_to_store:
Not calling object triggers from char_to_store:

db.c
---
Modified hunt so that with special_elf you can track through !TRACK rooms
(Modifier for Elf has been increased from 0.02 to 0.07%):

graph.c, utils.c
---
Timers should only show remove messages when being removed because they're
wearing off (duration = 0):

handler.c
---
Not calling object triggers when auto_equipping.

objsave.c
---
#defined around love_ring specproc. What a joke. define DRAX_IS_TEH_SUXOR if
you want it back ;o)

spec_assign.c, spec_procs.c
---
@
text
@d168 1
d645 2
@


1.17
log
@Artus>
Trap Obj is now VNUM 25599 aka TRAP_OBJ
Modified board code to handle clan boards.
Reduced number of clans to 8 (was 32).
Added a few new clan defines.. GET_CLAN_REL(us, them); CLAN_AT_PEACE(us, them),
  CLAN_AT_WAR(us, them); CLAN_ALLIED(us, them);...
Fixed up the clan destroy routine.
Set slowns to default on.
Remove loop for assigning clan mobs, replaced with sequential assigns.
@
text
@d153 1
d155 1
@


1.16
log
@Artus>

Files which have had log() replaced with basic_mud_log():

act.informative.c, act.item.c, act.offensive.c, act.other.c, act.social.c,
act.wizard.c, alias.c, balance.c, ban.c, boards.c, casino.c, castle.c, clan.c,
class.c, comm.c, corpses.cpp, db.c, dg_db_scripts.c, dg_olc.c, dg_scripts.c,
fight.c, genmob.c, genobj.c, genolc.c, genshp.c, genwld.c, genzon.c, graph.c,
handler.c, house.c, improved-edit.c, interpreter.c, magic.c, mail.c, medit.c,
mobact.c, modify.c, oasis.c, objsave.c, oedit.c, olc.c, redit.c, reports.cpp,
shop.c, spec_assign.c, spec_procs.c, spell_parser.c, tedit.c, utils.c,
utils.h, zedit.c.


Files which have been cpp standardised (list.h => list, etc):

comm.c, corpses.cpp, corpses.h, db.c, interpreter.c, modify.c, reports.cpp.


Specific changes to reports.cpp, reports.h:

Removed ofstream outReportFile, ofstream outChangeFile, and replaced them with
FILE *s. Removed no-longer functional c++ random-access file handling and
replaced it with straight C. Should be right from here on in..


Specific changes to act.movement.c:

Replaced log() with mudlog(), when logging players being killed by gravity.
@
text
@a228 8
        
  /* former clan guards 
  ASSIGNMOB(1217,  rose_club_guard);
  ASSIGNMOB(1218,  avengers_guard);
  ASSIGNMOB(1219,  guardian_guard);
  ASSIGNMOB(1220,  jedi_guard);
  ASSIGNMOB(1221,  uss_guard);
  */
a229 5
  for (int i = 0; i <= 31; i++) {
    ASSIGNMOB((i + (CLAN_ZONE * 100)), clan_guard);
    ASSIGNMOB((i + (CLAN_ZONE * 100) + 32), clan_healer);
  }

d607 18
d642 1
a642 1
  ASSIGNOBJ(25999, room_trap); /* Trap objects.. */
@


1.15
log
@Artus>
Adrenaline : (Potion Quaffing): 6 per fight Round instead of 5.
             (Flying Tackle)  : 2 fight rounds vs 3.
Balance    : QEQ no longer gets written to the log file when unbalanced.
Colour     : &f is no longer flash, &@@ is. Keep it quiet(tm).
Corpse File: Flush()ing after write().
Double Kick: Now calls apply_spell_skill_abil()
Echo       : No longer sends text to mobs calling it.
Fighting   : Is only possible if STATE = CON_PLAYING
Glance     : Fixed erroneous dex check.
OLC        : No longer possible while fighting.
           : LVL_IMPL+ (150+) can now edit mob levels up to 120.
Pit Trap   : Now logs deaths.
             No longer says "theoretically" on creation.
Report File: Flush()ing after write().
Spell/Skill: Now allows up to NUM_CLASSES class lines in primal_spskls
             (Used to only allow up to 10)
@
text
@d196 1
a196 1
    log("SYSERR: Attempt to assign spec to non-existant mob #%d", mob);
d206 1
a206 1
    log("SYSERR: Attempt to assign spec to non-existant obj #%d", obj);
d216 1
a216 1
    log("SYSERR: Attempt to assign spec to non-existant room #%d", room);
@


1.14
log
@minor fixes
@
text
@d120 2
d245 1
a245 1
  ASSIGNMOB(1222, quest_master);
d445 7
a451 7
   ASSIGNMOB(1800, snake);          /* Decay Deamon*/
   ASSIGNMOB(1801, magic_user);     /* Deamon of fire*/
   ASSIGNMOB(1806, magic_user);     /* Saurial Wizard*/
   ASSIGNMOB(1814, thrower);          /* Moander */
   ASSIGNMOB(1813, regen);          /* Bone Guard */
   ASSIGNMOB(1815, blink_demon);    /* Blink Demon */
   ASSIGNMOB(1804, beholder);       /* Beholder */
d454 20
a473 21
    ASSIGNMOB(4303, oompa);		/* ommpa lumpas */
    ASSIGNMOB(4355,tin_man);		/* Tin Man */
    ASSIGNMOB(4356,scarecrow);		/* Scarecrow */
    ASSIGNMOB(4357,c_lion);		/* Cowardly lion */
    ASSIGNMOB(4315,giant);		/* Jacks giant!! */
    ASSIGNMOB(4328,sleepy);
    ASSIGNMOB(4329,grumpy);
    ASSIGNMOB(4327,sneazy);
    ASSIGNMOB(4330,dopy);
    ASSIGNMOB(4333,lazy);
    ASSIGNMOB(4332,bashful);
    ASSIGNMOB(4331,doc);
    ASSIGNMOB(4319,thrower);

/* Quest Mobs spec procs */

   ASSIGNMOB(4500, gaze_npc);          /* Slizzarr*/
   ASSIGNMOB(4501, wind_summon);       /* Wind Duke */
   ASSIGNMOB(4502, snake);		/* wolfspider */ 
  /* Future world spec procs */

a474 1
  
d477 91
a567 93
	/* specs for the river zone */
	ASSIGNMOB(8402, school);					/* piranah */
	ASSIGNMOB(8400, constrictor);			/* serpent */
	ASSIGNMOB(8401, magic_user);			/* water element */
	ASSIGNMOB(8403, drainer);         /* vargoyle */

	/* specs for */
	ASSIGNMOB(1901, elec_shock);					/* anhkeg */
	ASSIGNMOB(1908, cleric);					/* night hag thing */

	/* Spiral*/
	ASSIGNMOB(2200, regen);		/* morkoth */
	ASSIGNMOB(2201, thrower);		
	ASSIGNMOB(2202, blood_sucker);	/* lolth */
	ASSIGNMOB(2203, constrictor);	/* ogremoch */
	ASSIGNMOB(2205, regen);		/* trogoladyte */
	ASSIGNMOB(2206, regen);		/* slithering tracker */
        ASSIGNMOB(2210, fire_breath);   /* fire bat */
	ASSIGNMOB(1905, regen);         /* caveman guard */
	ASSIGNMOB(2216, warrior1);       /*Troglodyte guard*/
        ASSIGNMOB(2217, warrior1);
        ASSIGNMOB(2226, warrior1);
        ASSIGNMOB(2236, warrior1);
        ASSIGNMOB(2220, cleric2);       /* cardinal */
        ASSIGNMOB(2229, cleric2);	/* cardinal */
        ASSIGNMOB(2238, cleric2);	/* cardinal */
        ASSIGNMOB(2219, gaze_npc);	/* Priest */
        ASSIGNMOB(2228, gaze_npc);	/* priest */
        ASSIGNMOB(2237, gaze_npc);	/* priest */	
        ASSIGNMOB(2222, warrior1);      /* misstress */
	ASSIGNMOB(2221, magic_user);
        ASSIGNMOB(2239, magic_user);
        ASSIGNMOB(2239, magic_user);
        ASSIGNMOB(2223, cleric2);
        ASSIGNMOB(2241, gaze_npc);
        ASSIGNMOB(2243, warrior1);	/* drider king */
        ASSIGNMOB(2242, warrior1);	/* Drider queen */
        ASSIGNMOB(2240, magic_user);	/* Drider misstress */
        ASSIGNMOB(2235, warrior1);	/* drider knight */
        ASSIGNMOB(2234, magic_user); 	/* Troglod King */
        ASSIGNMOB(2233, magic_user);	/* Troglod Queen */
        ASSIGNMOB(2232, warrior1);	/* Troglod Master */
        ASSIGNMOB(2231, cleric2);	/* Troglod Misstress */
        ASSIGNMOB(2230, magic_user);	/* Troglod Apprentice */
        ASSIGNMOB(2227, gaze_npc);	/* Troglod Priest */
        ASSIGNMOB(2224, magic_user);	/* trakker Queen */
        ASSIGNMOB(2225, magic_user);    /* trakker King */
        ASSIGNMOB(2218, cleric2);    	/* trakker Priest */
        ASSIGNMOB(2215, warrior1);      /* trakker */

		/* Anscient Greece */

        ASSIGNMOB(4800, warrior1);     /* Minotaur */
        ASSIGNMOB(4801, snake);        /* Vore */
        ASSIGNMOB(4802, regen);        /* gorgon */
        ASSIGNMOB(4803, warrior1);     /* sterope */
        ASSIGNMOB(4808, magic_user);   /* nix */
        ASSIGNMOB(4809, fire_breath);  /* steed */
        ASSIGNMOB(4810, warrior1);     /* margoyle */
        ASSIGNMOB(4811, aphrodite);    /* helen */
        ASSIGNMOB(4812, cleric2);      /* pegasus */
        ASSIGNMOB(4813, phoenix);      /* phoenix */
        ASSIGNMOB(4814, warrior1);     /* medusa */
        ASSIGNMOB(4816, trojan);       /* Trojan horse */
        ASSIGNMOB(4818, warrior1);     /* theseus */
        ASSIGNMOB(4819, regen);        /* man */
        ASSIGNMOB(4820, regen);        /* woman */
        ASSIGNMOB(4821, gaze_npc);     /* king minos */
        ASSIGNMOB(4822, warrior1);     /* perseus */
        ASSIGNMOB(4823, banish);       /* Zeus */
        ASSIGNMOB(4824, disposable);   /* Trojan Warrior */
        ASSIGNMOB(4825, aphrodite);    /* aphrodite */
        ASSIGNMOB(4826, gaze_npc);     /* Pluto */
        ASSIGNMOB(4827, magic_user);   /* guys in hell */
        ASSIGNMOB(4828, magic_user);   /* guys in hell */
        ASSIGNMOB(4829, magic_user);   /* guys in hell */
        ASSIGNMOB(4830, magic_user);   /* guys in hell */
        ASSIGNMOB(4832, acid_breath);  /* cerberus */

	// The island forever

  	ASSIGNMOB(10101, fate);
  	ASSIGNMOB(10154, playerhunter);
  	ASSIGNMOB(10156, playerhunter);
  	ASSIGNMOB(10157, titan);
  	ASSIGNMOB(10114, anxiousleader);
  	ASSIGNMOB(10113, anxiousleader);
  	ASSIGNMOB(10108, packmember);
  	ASSIGNMOB(10109, packleader);
  	ASSIGNMOB(10105, avenger);
  	ASSIGNMOB(10150, insanity);
  	ASSIGNMOB(10102, playerhunter);
  	ASSIGNMOB(10103, arrogance);
d569 1
d573 1
d575 45
a619 47
                  /*The Sphere*/
        ASSIGNMOB(27001, acid_breath);   /*poisonous Gas*/
        ASSIGNMOB(27006, thrower);   /*Cpt Burns*/
        ASSIGNMOB(27007, warrior); /*Cor. Fletch*/
        ASSIGNMOB(27009, ice_breath);   /*poisonoud Gas*/
        ASSIGNMOB(27012, regen);         /*Corpral Levy*/
        ASSIGNMOB(27013, warrior);      /*captain Burns*/
        ASSIGNMOB(27015, snake);       /*green snake*/
        ASSIGNMOB(27016, cleric);     /*corporal Tina*/
        ASSIGNMOB(27017, constrictor); /*Squid*/
        ASSIGNMOB(27018, school);   /*squid sacs*/
        ASSIGNMOB(27019, constrictor); /*tentacle*/
        ASSIGNMOB(27020, regen);      /*shrip*/
        ASSIGNMOB(27021, snake);
	ASSIGNMOB(27022, alien_voice);	/* alien voice */
        ASSIGNMOB(27024, warrior);    /*sentroid*/
        ASSIGNMOB(27028, gaze_npc);  /*evil blackness*/
        ASSIGNMOB(27032, corridor_guard); /*guardian droid*/
        ASSIGNMOB(27033, corridor_guard);   /* guardian droid KF*/
	ASSIGNMOB(27040, alien_voice_echo);	    /* alien hunter */

                 /*Babylon5*/
        ASSIGNMOB(30000, magic_user);   /*Soul Hunter*/
        ASSIGNMOB(30002, magic_user);  /*Drak*/
        ASSIGNMOB(30004, warrior);   /*Sheridian*/
        ASSIGNMOB(30005, cleric2);  /*franklin*/
        ASSIGNMOB(30006, warrior);  /*ivanova*/
        ASSIGNMOB(30007, gaze_npc); /*kosh*/
        ASSIGNMOB(30011, warrior1); /*drall*/
        ASSIGNMOB(30015, magic_user); /*bester*/
        ASSIGNMOB(30016, magic_user); /*Lyta*/
        ASSIGNMOB(30021, warrior1);  /*shadow*/
        ASSIGNMOB(30022, warrior1);  /*Vorlon*/
        ASSIGNMOB(30025, magic_user); /*Psi Cop*/
	ASSIGNMOB(30008, delenn); /* Delenn*/
              

               /*Holy City*/

       ASSIGNMOB(5203, warrior);  /*crypt thing*/
       ASSIGNMOB(5204, regen);   /*dragon horse*/
       ASSIGNMOB(5208, warrior1); /*cloud giant*/
       ASSIGNMOB(5209, cleric);  /*ki-rin*/
       ASSIGNMOB(5210, gaze_npc); /*God Pazuzu*/
       ASSIGNMOB(5211, magic_user); /*deva*/
       ASSIGNMOB(5212, magic_user); /*deva*/
       ASSIGNMOB(5213, cleric);  /*deva*/
@


1.13
log
@Latest Version
@
text
@d294 1
@


1.12
log
@
Modified: DM

Changed:
- Don't ask (large group checkin) - lots of bug fixes mainly.
- Use cvs diff if you really wanna see the changes.
@
text
@d387 1
a387 5
  /* ROME */
//  ASSIGNMOB(12018, cityguard);
//  ASSIGNMOB(12021, cityguard);
//  ASSIGNMOB(12009, magic_user);
//  ASSIGNMOB(12025, magic_user);
d389 12
a400 6
//  ASSIGNMOB(12020, magic_user);
//  ASSIGNMOB(12025, magic_user);
//  ASSIGNMOB(12030, gaze_npc);
//  ASSIGNMOB(12031, magic_user);
//  ASSIGNMOB(12032, warrior1);
//  ASSIGNMOB(12033, magic_user);
@


1.11
log
@
Modified: DM

Changed:
- updated repairer proc - still have to tinker with costs ...
@
text
@d640 1
a640 1
  ASSIGNOBJ(3034, bank);	/* atm */
@


1.10
log
@*** empty log message ***
@
text
@d226 1
a226 3
  // TODO: add repairers (not assign - see proc_repairer in spec_procs)
  // temp set on drunk
  ASSIGNMOB(1207, repairer);
@


1.9
log
@Artus - Pit Trap
@
text
@d120 3
d570 4
a574 1

@


1.8
log
@Modified: DM

Removed:
- board spec assigns - replaced with board_assign function in boards.c
@
text
@d160 1
d632 1
@


1.7
log
@Modified: Artus - Clans
@
text
@d19 1
a179 3
void ASSIGNROOM(room_vnum room, SPECIAL(fname));
void ASSIGNMOB(mob_vnum mob, SPECIAL(fname));
void ASSIGNOBJ(obj_vnum obj, SPECIAL(fname));
d631 2
a632 7
  ASSIGNOBJ(3093, gen_board);	/* forever's board */
  ASSIGNOBJ(3094, gen_board);	/* avenger's board */
  ASSIGNOBJ(3095, gen_board);	/* guardian's board */
  ASSIGNOBJ(3096, gen_board);	/* social board */
  ASSIGNOBJ(3097, gen_board);	/* freeze board */
  ASSIGNOBJ(3098, gen_board);	/* immortal board */
  ASSIGNOBJ(3099, gen_board);	/* mortal board */
@


1.6
log
@Modifier: DM

Added:
- spec assigns for new guildmasters - 1114-1119
@
text
@d18 1
d27 3
a29 1

d119 1
d127 1
d228 1
a228 1
  /* clan guards */
d234 1
d236 5
@


1.5
log
@
Added:
- Added repairer proc to drunk for test - remove
@
text
@d277 6
@


1.4
log
@
Added:
- olc stuff - sectors, zone flags

Changed:
- Heaps of little fixes ....
@
text
@d25 2
d218 5
@


1.3
log
@

Added:
- more shite
@
text
@d217 5
a221 5
  ASSIGNMOB(117,  rose_club_guard);
  ASSIGNMOB(118,  avengers_guard);
  ASSIGNMOB(119,  guardian_guard);
  ASSIGNMOB(120,  jedi_guard);
  ASSIGNMOB(121,  uss_guard);
d225 1
a225 1
  ASSIGNMOB(122, quest_master);
d244 2
a245 2
  ASSIGNMOB(115, werewolf); /* mob that changes into.. */
  ASSIGNMOB(116, werewolf); /* ...the werewolf         */
d258 2
a259 2
  ASSIGNMOB(124, corridor_guard);
  ASSIGNMOB(5, receptionist);
d261 12
a272 12
  ASSIGNMOB(108, citizen);
  ASSIGNMOB(113, construction_worker);
  ASSIGNMOB(110, janitor);
  ASSIGNMOB(20, cityguard);
  ASSIGNMOB(21, postmaster);  
  ASSIGNMOB(10, guild);
  ASSIGNMOB(11, guild);
  ASSIGNMOB(12, guild);
  ASSIGNMOB(13, guild);
  ASSIGNMOB(111, virus);
  ASSIGNMOB(112, bacteria);
  ASSIGNMOB(114, trainer);
d384 1
a384 1
  ASSIGNMOB(109, magic_user);   /* the trickster - low-level magii */
d647 2
a648 2
  ASSIGNROOM(100, casino);
  ASSIGNROOM(133, casino);
@


1.2
log
@
Added:
- Some initial colour coding for mobs and objects

Changed:
- Various inclusions from the existing primal base ...
- Including Sector fixes, clan guards, listing items

TODO:
- Fix colours for mobs/objects - A player comes up as a mob colour
@
text
@d26 1
d222 1
a222 1

d224 2
a225 2
  ASSIGNMOB(122,  healer);

@


1.1
log
@

Added:
- Modified files to compile with g++ - this is the initial import of those
  files.

TODO:
- Test it all works 100%
@
text
@d116 1
a116 1
  SPECIAL(forever_guard);
d153 1
a153 1
//  SPECIAL(casino);
d219 1
a219 1
  ASSIGNMOB(120,  forever_guard);
d646 2
a647 2
//  ASSIGNROOM(100, casino);
//  ASSIGNROOM(133, casino);
@

