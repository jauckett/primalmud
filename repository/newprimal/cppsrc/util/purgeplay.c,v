head	1.3;
access;
symbols
	LATEST:1.1
	A3_0_1:1.1;
locks; strict;
comment	@ * @;


1.3
date	2002.01.16.04.00.26;	author rod;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.02.04.35.33;	author primal;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.12.07.44.04;	author mbd;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
Modified: DM

Changed:
- new player conversion, purgine and show utilities
@
text
@/* ************************************************************************
*  file: purgeplay.c                                    Part of CircleMUD * 
*  Usage: purge useless chars from playerfile                             *
*  All Rights Reserved                                                    *
*  Copyright (C) 1992, 1993 The Trustees of The Johns Hopkins University  *
************************************************************************* */

#include "../conf.h"
#include "../sysdep.h"

// Use the bottom defines for an older pfile
//#include "../structs.h"
//#include "../utils.h"
#include "structs.h.old"
#include "utils.h.old"

void purge(char *filename)
{
  FILE *fl;
  FILE *outfile;
  struct char_file_u player;
  int okay, num = 0;
  long timeout, size;
  char *ptr, reason[80];

  if (!(fl = fopen(filename, "r+"))) {
    printf("Can't open %s.", filename);
    exit(1);
  }
  fseek(fl, 0L, SEEK_END);
  size = ftell(fl);
  rewind(fl);
  if (size % sizeof(struct char_file_u)) {
    fprintf(stderr, "\aWARNING:  File size does not match structure, recompile purgeplay.\n");
    fclose(fl);
    exit(1);
  }

  outfile = fopen("players.new", "w");
  printf("Deleting: \n");

  for (;;) {
    fread(&player, sizeof(struct char_file_u), 1, fl);
    if (feof(fl)) {
      fclose(fl);
      fclose(outfile);
      printf("Done.\n");
      exit(0);
    }
    okay = 1;
    *reason = '\0';

    for (ptr = player.name; *ptr; ptr++)
      if (!isalpha(*ptr) || *ptr == ' ') {
	okay = 0;
	strcpy(reason, "Invalid name");
      }
    if (player.level == 0) {
      okay = 0;
      strcpy(reason, "Never entered game");
    }
    if (player.level <= 0 || player.level > LVL_OWNER) {
      okay = 0;
      strcpy(reason, "Invalid level");
    }
    /* now, check for timeouts.  They only apply if the char is not
       cryo-rented.   Lev 32-34 do not time out.  */

    timeout = 1000;

    if (okay && player.level <= LVL_IMMORT) {

      if (!(player.char_specials_saved.act & PLR_CRYO)) {
	if (player.level == 1)		timeout = 7;	/* Lev   1 :  7 days */
	else if (player.level <= 4)	timeout = 14;	/* Lev 2-4 : 14 days */
	else if (player.level <= 10)	timeout = 30;	/* Lev 5-10: 30 days */
	else 
	  timeout = 700;		/* Lev 11-99: 700 days */
      } else
	timeout = 700;

      timeout *= SECS_PER_REAL_DAY;

      if ((time(0) - player.last_logon) > timeout) {
	okay = 0;
	sprintf(reason, "Level %2d idle for %3ld days", player.level,
		((time(0) - player.last_logon) / SECS_PER_REAL_DAY));
      }
    }
    if (player.char_specials_saved.act & PLR_DELETED) {
      okay = 0;
      sprintf(reason, "Deleted flag set");
    }

    /* Don't delete for *any* of the above reasons if they have NODELETE */
    if (!okay && (player.char_specials_saved.act & PLR_NODELETE)) {
      okay = 2;
      strcat(reason, "; NOT deleted.");
    }
    if (okay)
      fwrite(&player, sizeof(struct char_file_u), 1, outfile);
    else
      printf("%4d. %-20s %s\n", ++num, player.name, reason);

    if (okay == 2)
      fprintf(stderr, "%-20s %s\n", player.name, reason);
  }
}



int main(int argc, char *argv[])
{
  if (argc != 2)
    printf("Usage: %s playerfile-name\n", argv[0]);
  else
    purge(argv[1]);

  return (0);
}
@


1.2
log
@
Changed:
- Fixed c++ and include problems so the utility binaries compile
@
text
@d8 2
a9 2
#include "conf.h"
#include "sysdep.h"
d11 5
a15 2
#include "structs.h"
#include "utils.h"
a16 1
//TODO: update new purge file
d62 1
a62 1
    if (player.level < 0 || player.level > LVL_OWNER) {
d74 2
a75 2
	if (player.level == 1)		timeout = 4;	/* Lev   1 : 4 days */
	else if (player.level <= 4)	timeout = 7;	/* Lev 2-4 : 7 days */
d77 2
a78 4
	else if (player.level <= LVL_IMMORT - 1)
	  timeout = 60;		/* Lev 11-30: 60 days */
	else if (player.level <= LVL_IMMORT)
	  timeout = 90;		/* Lev 31: 90 days */
d80 1
a80 1
	timeout = 90;
d84 1
a84 1
      if ((time(0) - player.player_specials_primalsaved.last_logon) > timeout) {
d87 1
a87 1
		((time(0) - player.player_specials_primalsaved.last_logon) / SECS_PER_REAL_DAY));
@


1.1
log
@

Added:
- Modified files to compile with g++ - this is the initial import of those
  files.

TODO:
- Test it all works 100%
@
text
@d14 1
a14 1

d60 1
a60 1
    if (player.level < 0 || player.level > LVL_IMPL) {
d84 1
a84 1
      if ((time(0) - player.last_logon) > timeout) {
d87 1
a87 1
		((time(0) - player.last_logon) / SECS_PER_REAL_DAY));
@

