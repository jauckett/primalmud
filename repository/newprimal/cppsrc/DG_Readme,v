head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2001.02.02.04.34.44;	author primal;	state Exp;
branches;
next	;


desc
@@


1.1
log
@
Added:
- Initial inclusion of dgscripts
@
text
@********        NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
   This version of DG Scripts supports player variables and having them
   saved to disk. You MUST create, in the lib directory, the "plrvars"
   sub-directory, and the various alphabetic sub-sub-directories. See
   plrobjs for a list of these alphabetics.


********        NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
   If you are new to DG Scripts, you must:
   1) mkdir ../lib/world/trg
   2) mv 0.trg ../lib/world/trg
   3) mv index ../lib/world/trg




   *****   FAILING TO DO THIS WILL RENDER YOUR MUD INOPERABLE!   *****



-----------------------------------------------------------------------
ToDo for pl8: remove mgold and mexp commands, as they've been depricated
              with field and subfield access. These log depricated
              warnings in pl7.

-----------------------------------------------------------------------
DOCUMENTATION:
   Aside from this readme file, you will find documentation online
   at  http://www.mindspring.com/~heilpern/dg_scripts

-----------------------------------------------------------------------
Prior to pl7: There was a bug in which your trg/index file could get
multiple entries for the same zone. This is fixed in pl7 but you must
either edit and save a new trigger or edit trg/index by hand to fix it!

-----------------------------------------------------------------------
New in patch level 7:

   "save" has been noted to cause extraneous remove/wear object triggers
     to run. If the macro NO_EXTRANEOUS_TRIGGERS is defined (used in db.h)
     the triggers will not be called. This could have a negative affect on
     triggers that should run when the player enters the game, so the
     triggers are set to run by default (the macro is not defined).

   Added "dg_affect <target> <property> <value> <duration>" to set
     affections on players or mobiles.

   Xdoor, Xforce, Xload, Xpurge, Xteleport and Xdamage made more flexible.
     Now scripts can use %door%, %force%, etc. and, based on the script
     being attached to a mob/obj/room, the variable will resolve to the
     appropriate command.

   Added 'osetval [position] [value]' command
     For object scripts, this lets an object change one of its values.
     Positional meanings are based on the specific object type (usually),
     thus this command will behave differently based on the specifics of
     your mud and its object types.

   Added object carried_by and worn_by fields.

   Added %actor.varexists(varname)%, to determine if 'varname' is a
     variable for the actor.

   Added the ability for players to have variables set/accessed by
     scripts, and those variables will save unless they begin with a
     - character.

   Added 'rdelete <variablename> <UID>', the counterpart to remote.
     This deletes a global variable (of context 0 or the current script
     context) from the script of the target UID. It's available for
     scripts and for IMPL's.

  Added actor fields: is_thief and is_killer. used as %actor.field% they
     return 0 or 1 to indicate the state of the flag. Used as
     %actor.field(state)%, where state is either on or off, they set or
     clear the flag, respectively.

  Added an OPTIONAL subfield for %actor.gold% -- %actor.gold(amount)%
     will modify the actor's gold by the amount specified and return
     the new amount they've got. This renders mgold an obsolete
     command, it will disappear in the future.

  Added an OPTIONAL subfield for %actor.exp% -- same concept as gold,
     detailed above. NOTE: %actor.exp% is a new field! The maximum
     addition that can be given to experience points is 1000, as hard
     coded in dg_scripts.c; change to suit yourself.

  Added "nop" command. Why? So a variable that changes something in
     addition to returning something, like "%actor.gold(1)%" can be used
     without other commands. E.g.:  nop %actor.gold(1)%

  Added %text.mudcommand%. Intended to be used by command triggers
     to compensate for the fact that many muds allow abbreviated commands.
     I.e., to cover "o" working for the command "open", you need your
     string arg in the trigger to be "o", and you need to insure that the
     command (%cmd%) resolves to "open" in the mud. Do that as follows:

         if (%cmd.mudcommand% != open)
           return 0
           halt
         end 

-----------------------------------------------------------------------
Death's Gate Scripts:
   This patch is for the scripting system first found in the
   Death's Gate MUD, which is a distant derivative of the MobProg
   patch. The patch is for CircleMUD, currently for version 3.0bpl14.
   This is NOT a faithful reproduction of the original DG script
   system, however it will retain the name unless the original DG
   script designer requests otherwise. Read the code history, below,
   to see what has been added beyond the original implementation.
   Lines with new features are denoted with an asterix (*).


-----------------------------------------------------------------------

Changes that are not tagged with another author were most likely
implemented by Mark A. Heilpern of OmegaMUD. In all known situations,
the author or suggestor of a change is mentioned. If you suggested
something to me which I added but did not give you credit for it in here,
please contact me.

-----------------------------------------------------------------------
Implementors: A note on mtransform and otransform:
  Beginning with 0.99 pl5, mobiles and objects may change who they
  are via the aforementioned commands. The implementation of these
  loads the new mob/obj, copies it to a temporary buffer, copies
  necessary fields from the mob/obj doing the transformation into
  the temporary buffer, then copies the whole temporary buffer over the
  original space. This allows all stock pointers in the mud to still be
  valid. HOWEVER; if you have added fields to your structures, such
  as mounts, object damage, for example, and you want that sort of info
  to stay with the mob/obj you must copy the information over!

-----------------------------------------------------------------------

DG Code History:
Release     Date      What Happened
--------   --------   -------------
0.99 pl7    5/99
                    * added "df_affect" command
                      made "mjunk all" work better
                    * added %text.mudcommand(cmd)% boolean test
                    * extended actor.gold to allow a subfield that
                      has a value to add to the actor's gold
                    * added actor.exp to get (or set, ala gold) the
                      actor's experience points. MAX addition is 1000, as
                      hardcoded in dg_scripts.c
                    * added actor.is_thief and .is_killer
                    * added object carried_by and worn_by fields.
                    * gave players the ability to have variables that
                         scripts can set/read, and that save to a file
                         (if they don't start with '-')
                    * added rdelete script command to delete a variable
                         from a remote script. also added vdelete as a
                         command for imps.
                    * added %actor.varexists(varname)% boolean
                    * added flexibility for more generic commands
                      replaced dummy_mob checks with IS_NPC() (Andrey Fidrya)
                      fixed a bug in dg_olc.c (Angus Mezick)
                      fixed mob action triggers yet again
                         (the bug that wouldn't die!)
                      fixed a zedit bug where the switch case fell through
                         to global assignment
                      fixed trg world file save routine
                      fixed minor zedit-obj-load/otrigger error (tdubroff)
                      fixed log bugs in process_remote()
                      fixed the "no whitespace before while" bug
0.99 pl6   10/98
                    * added %actor.% hitp, maxhitp, move, maxmove, mana,
                        maxmana -- self-explanatory (Angus Mezick)
                      added more complete trigger checks (Doppleganger)
                    * added %actor.next_in_room%, %room.people%, and
                        %text.contains()%
                    * added dg_cast command
                    * added mdoor and odoor commands
                    * added %send%, %echo% and %echoaround%
                    * added trigger zone commands (MAH/Doppleganger)
                    * added script attach/detach commands
                      added context handling to add_var()
                      set OLC to properly create the trg index (Del Minturn)
                      removed unneeded free(cmd)
                      changed 'case' implementation to fix bug (Chris Jacobson)
                      fixed bug in %actor.eq()%
0.99 pl5a   8/10/98   fixed extract command
                      corrected mecho/mechoaround order in interpreter.c
                      fixed CHECK_PLAYER_SPECIALS cheesiness
                      added DG version info to 'version' mud command
                      removed gcc-dependent NULL printf functionality
                      finished context handling code :)
                      fixed a but in find_eq_pos() {stock bpl14} which
                          made actor.eq(pos) break
                      made mobs not able to trigger their own command or
                          action triggers
                    * added %actor.eq(position)%
0.99 pl5    8/5/98  * added 'otransform <vnum>' command
                    * added 'mtransform <vnum>' command
                    * added "actor global referencing" (Doppleganger)
                    * added .id field for chars and objects
                    * added 'makeuid <var> <id>' command
                    * gave objects a Remove trigger
                    * allowed '*' as 1st char in string arguments to
                          cause everything to match. (this is NOT a
                          general purpose wildcard)
                    * added mob Memory trigger
                    * added mremember and mforget commands
                    * added mhunt command
                    * add %actor.skill(skill name)% to return %
                          learnedness of the skill
                    * added global context
                    * added 'remote <varname> <id>' to let locally owned
                          variables be copied to the global list of other
                          script owners
                    * added %text.car% and %text.cdr%
                    * added %text.strlen%, %text.trim%
                    * (Doppleganger): added script 'extract' command
                          to pull text out of a larger field. usage:
                          extract <to-variable> <word-num> <from-variable>
                    * added 'version' command
                      extended script status info to include wait info
                      fixed mgold (missing from interpreter.c)
                      cleaned up some compiler warnings
                      made greet triggers parse all mobs in the room,
                          instead of stopping with the first hit.
                          (thanks, Doppleganger)
                      fixed bug with mob/obj purging itself and the
                          script able to continue execution
                      fixed the .weight field bug (reported by Angus Mezick)
                      fixed reset_wtrigger() bug (Belgarath)
                      made CHECK_PLAYER_SPECIALS not log in dg source files
0.99 pl4    7/10/98   ported to patch against circle bpl14
                    * added actor "fighting", "riding", and "ridden_by"
                        fields (riding/ridden_by are conditional)
                      cured olc bug creating scripts on new obj/rooms
                    * added otimer cmd, %object.timer%, and timer trigger
                      added %actor.weight%
                    * added mob and object "load" triggers
                      gave %cmd% to command triggers
                      changed "this" to "this_data" to be C++ friendly
                      fixed rnum/vnum issue on attach (Belgarath)
                    * added %self.vnum% for rooms
                    * added the zone-reset room trigger
                      made command-triggers require a full match on the
                          command, making "d" allow "down" instead of
                          triggering a "drink" command, e.g.
                    * added str/stradd/int/wis/dex/con/cha to %actor%
                      oforce made to accept multiple arguments
0.99 pl3    2/15/98   added olc-cleanup to trigedit lost links
                      reversed the ordering in this file :P
                      made 'force mob say text' not trigger its own
                          speech trigger
                      same for action triggers
                      fixed #define for trigedit's SCMD, thanks to
                          James Hadden
                    * added switch and while to triggers, thanks to
                          Chris Jacobson
                      fixed room.fields bug found by Andy Hubbard
                      fixed is_num() to recognize neg nums (thanks George)
                      fixed the perform_act bug again :(
                      put in arg pointer validation/error logging
                      prototyped parse_trigger() in db.c
                      made more friendly to MSVC (thanks to
                          Andrey Fidrya and Francis Hotchkiss)
                      fixed an olc bug with lost script assignments
                      fixed a process_event-remove_event bug
0.99 pl2     1/15/98  Event endless loop repaired
                      act triggers made to work
                      speech triggers made to work
                    * speech phrases implemented
                    * %speech% var given to speech triggers
                      log message fix in do_msend()
                      fixed mechoaround to not send to target
                    * added %actor.align% for alignment
                      changed %actor.room% to a room vnum, not rnum
                      changed %actor.vnum% to a vnum, not rnum
                      changed %obj.vnum% to a vnum, not rnum
                      made msend/mechoaround/mat/mteleport work well
                          with %actor%
                    * gave %direction% to room entry triggers
                      made mteleport work as documented
                      made command triggers work on existing commands
0.99 pl1      1/6/98  Oasis save routines repaired
0.99          1/5/98  Initial C patch released
              1/2/98  Eric Green's DG mud c++ code downloaded


@
