head	1.9;
access;
symbols
	rel1:1.1.1.1 vendprim:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2000.04.13.13.22.02;	author michaeld;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.11.19.25.07;	author michaeld;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.23.17.44.06;	author michaeld;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.13.17.12.09;	author talisman;	state Exp;
branches;
next	1.5;

1.5
date	2000.03.10.01.06.39;	author michaeld;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.01.11.36.04;	author michaeld;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.29.15.50.59;	author michaeld;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.25.11.53.11;	author michaeld;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.22.21.10.38;	author michaeld;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.22.21.10.38;	author michaeld;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Some changes for spell display listing and colourset
@
text
@/* ************************************************************************
*   File: interpreter.h                                 Part of CircleMUD *
*  Usage: header file: public procs, macro defs, subcommand defines       *
*                                                                         *
*  All rights reserved.  See license.doc for complete information.        *
*                                                                         *
*  Copyright (C) 1993, 94 by the Trustees of the Johns Hopkins University *
*  CircleMUD is based on DikuMUD, Copyright (C) 1990, 1991.               *
************************************************************************ */

#define ACMD(name)  \
   void name(struct char_data *ch, char *argument, int cmd, int subcmd)

ACMD(do_move);

#define CMD_NAME (cmd_info[cmd].command)
#define CMD_IS(cmd_name) (!strcmp(cmd_name, cmd_info[cmd].command))
#define IS_MOVE(cmdnum) (cmd_info[cmdnum].command_pointer == do_move)

void	command_interpreter(struct char_data *ch, char *argument);
int	search_block(char *arg, const char **list, int exact);
int	search_block_case_insens(const char *arg, const char **list, int exact);
char	lower( char c );
char	*one_argument(char *argument, char *first_arg);
char	*one_word(char *argument, char *first_arg);
char	*any_one_arg(char *argument, char *first_arg);
char	*any_one_arg_case_sens(char *argument, char *first_arg);
char	*two_arguments(char *argument, char *first_arg, char *second_arg);
int	fill_word(char *argument);
void	half_chop(char *string, char *arg1, char *arg2);
void	half_chop_case_sens(char *string, char *arg1, char *arg2);
void	nanny(struct descriptor_data *d, char *arg);
int	is_abbrev(const char *arg1, const char *arg2);
int	is_number(const char *str);
int	find_command(const char *command);
void	skip_spaces(char **string);
char	*delete_doubledollar(char *string);

/* for compatibility with 2.20: */
#define argument_interpreter(a, b, c) two_arguments(a, b, c)


struct command_info {
   const char *command;
   byte minimum_position;
   void	(*command_pointer)
	   (struct char_data *ch, char * argument, int cmd, int subcmd);
   sh_int minimum_level;
   int	subcmd;
};

/*
 * Necessary for CMD_IS macro.  Borland needs the structure defined first
 * so it has been moved down here.
 */
#ifndef __INTERPRETER_C__
extern const struct command_info cmd_info[];
#endif

/*
 * Alert! Changed from 'struct alias' to 'struct alias_data' in bpl15
 * because a Windows 95 compiler gives a warning about it having similiar
 * named member.
 */
struct alias_data {
  char *alias;
  char *replacement;
  int type;
  struct alias_data *next;
};

#define ALIAS_SIMPLE	0
#define ALIAS_COMPLEX	1

#define ALIAS_SEP_CHAR	';'
#define ALIAS_VAR_CHAR	'$'
#define ALIAS_GLOB_CHAR	'*'

/*
 * SUBCOMMANDS
 *   You can define these however you want to, and the definitions of the
 *   subcommands are independent from function to function.
 */

/* directions */
#define SCMD_NORTH	1
#define SCMD_EAST	2
#define SCMD_SOUTH	3
#define SCMD_WEST	4
#define SCMD_UP		5
#define SCMD_DOWN	6

/* do_gen_ps */
#define SCMD_INFO       0
#define SCMD_HANDBOOK   1 
#define SCMD_CREDITS    2
#define SCMD_NEWS       3
#define SCMD_WIZLIST    4
#define SCMD_POLICIES   5
#define SCMD_VERSION    6
#define SCMD_IMMLIST    7
#define SCMD_MOTD	8
#define SCMD_IMOTD	9
#define SCMD_CLEAR	10
#define SCMD_WHOAMI	11
#define SCMD_AREAS	12

/* do_gen_tog */
#define SCMD_NOSUMMON   0
#define SCMD_NOHASSLE   1
#define SCMD_BRIEF      2
#define SCMD_COMPACT    3
#define SCMD_NOTELL	4
#define SCMD_NOAUCTION	5
#define SCMD_DEAF	6
#define SCMD_NOGOSSIP	7
#define SCMD_NOGRATZ	8
#define SCMD_NOWIZ	9
#define SCMD_QUEST	10
#define SCMD_ROOMFLAGS	11
#define SCMD_NOREPEAT	12
#define SCMD_HOLYLIGHT	13
#define SCMD_SLOWNS	14
#define SCMD_AUTOEXIT	15
#define SCMD_NOIMMNET   16
#define SCMD_AFK        17
#define SCMD_NOINFO     18
#define SCMD_NONEWBIE   19
#define SCMD_NOCTALK    20
#define SCMD_AUTOLOOT   21
#define SCMD_AUTOGOLD   22
#define SCMD_AUTOSPLIT  23
#define SCMD_TRACK	24

/* do_wizutil */
#define SCMD_REROLL	0
#define SCMD_PARDON     1
#define SCMD_NOTITLE    2
#define SCMD_SQUELCH    3
#define SCMD_FREEZE	4
#define SCMD_THAW	5
#define SCMD_UNAFFECT	6
#define SCMD_IMMNET     7
#define SCMD_ANGNET     8 

/* do_spec_com */
#define SCMD_WHISPER	0
#define SCMD_ASK	1

/* do_gen_com */
#define SCMD_HOLLER	0
#define SCMD_SHOUT	1
#define SCMD_GOSSIP	2
#define SCMD_AUCTION	3
#define SCMD_GRATZ	4
#define SCMD_NEWBIE     5
#define SCMD_CTALK      6 

/* do_shutdown */
#define SCMD_SHUTDOW	0
#define SCMD_SHUTDOWN   1

/* do_quit */
#define SCMD_QUI	0
#define SCMD_QUIT	1

/* do_date */
#define SCMD_DATE	0
#define SCMD_UPTIME	1

/* do_commands */
#define SCMD_COMMANDS	0
#define SCMD_SOCIALS	1
#define SCMD_WIZHELP	2

/* do_drop */
#define SCMD_DROP	0
#define SCMD_JUNK	1
#define SCMD_DONATE	2

/* do_gen_write */
#define SCMD_BUG	0
#define SCMD_TYPO	1
#define SCMD_IDEA	2

/* do_look */
#define SCMD_LOOK	0
#define SCMD_READ	1

/* do_qcomm */
#define SCMD_QSAY	0
#define SCMD_QECHO	1

/* do_pour */
#define SCMD_POUR	0
#define SCMD_FILL	1

/* do_poof */
#define SCMD_POOFIN	0
#define SCMD_POOFOUT	1

/* do_hit */
#define SCMD_HIT	0
#define SCMD_MURDER	1

/* do_eat */
#define SCMD_EAT	0
#define SCMD_TASTE	1
#define SCMD_DRINK	2
#define SCMD_SIP	3

/* do_use */
#define SCMD_USE	0
#define SCMD_QUAFF	1
#define SCMD_RECITE	2

/* do_echo */
#define SCMD_ECHO	0
#define SCMD_EMOTE	1

/* do_gen_door */
#define SCMD_OPEN       0
#define SCMD_CLOSE      1
#define SCMD_UNLOCK     2
#define SCMD_LOCK       3
#define SCMD_PICK       4

/*. do_olc .*/
#define SCMD_OASIS_REDIT       0
#define SCMD_OASIS_OEDIT       1
#define SCMD_OASIS_ZEDIT       2
#define SCMD_OASIS_MEDIT       3
#define SCMD_OASIS_SEDIT       4
#define SCMD_OLC_SAVEINFO      7

/* do_track (for hunt) */
#define SCMD_HUNT       1
#define SCMD_AUTOHUNT   2

/* do_auction */
#define SCMD_CANCEL             0
#define SCMD_SOLD               1
#define SCMD_NEW                2
#define SCMD_BID                3
#define SCMD_WELCH              4 

/* do_quest_log */
#define SCMD_QUEST_LIST 	0
#define SCMD_QUEST_ADD		1
#define SCMD_QUEST_DELETE	2
#define SCMD_QUEST_ENHANCE      3
#define SCMD_QUEST_STAT         4
@


1.8
log
@Latest swamp of changes - who knows what I've added in here, just have
to make sure they merge properly with talis changes (which he didnt friggin commit)
@
text
@a252 5

/* do_spellshow */
#define SCMD_SKILLS_MORTAL	0
#define SCMD_SPELLS_MORTAL	1
#define SCMD_SPSK		2
@


1.7
log
@Changes for Spell/Skill loading and other stuff ...
@
text
@d22 1
d27 1
d31 1
@


1.6
log
@Clases fully implemented into this along with some revision sto quest code, and minor other modifications.
@
text
@d248 7
a254 2
#define SCMD_QUEST_ENHANCE	3
#define SCMD_QUEST_STAT		4
@


1.5
log
@The latest wave of stuff - mainly additions for fighting
some structural changes for quest logging, this and that.
@
text
@d248 2
@


1.4
log
@Next wave of goodies, (Added all commands), and other stuff as well I guess
@
text
@d243 5
@


1.3
log
@Next major import including all wiz commands, channels and lots of other
goodies as well of course.
@
text
@d103 1
d236 7
@


1.2
log
@Next major import oncluding work on: spells, comm, some wiz commands,
exp sys, fight functions (limited), paging and the rest ...
@
text
@d139 2
@


1.1
log
@Initial revision
@
text
@d121 9
a129 1
#define SCMD_TRACK	16
d150 2
@


1.1.1.1
log
@Initial import of newprimal based of circle30bpl19 base, with OLC, ec
and a start on converting primal onto the new base.
@
text
@@
