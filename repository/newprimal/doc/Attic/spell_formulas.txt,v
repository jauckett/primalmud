head	1.2;
access;
symbols
	rel1:1.1.1.1 vendprim:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2000.07.06.10.17.17;	author primal;	state dead;
branches;
next	1.1;

1.1
date	2000.02.22.21.10.36;	author michaeld;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.22.21.10.36;	author michaeld;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
Changed:
- Directory cleanup

TODO:
- Make README and filenaming standards
@
text
@SPELL_CURE_LIGHT:
    hit = dice(1, 8) + 1 + (level >> 2);
SPELL_CURE_CRITIC:
    hit = dice(3, 8) + 3 + (level >> 2);
SPELL_HEAL:
    hit = 100 + dice(3, 8);
SPELL_ADV_HEAL:
    hit = 200 + level;
SPELL_DIVINE_HEAL:
    hit = 300 + level;
SPELL_REFRESH:
    move = 50 + dice(3, 8);
SPELL_MANA:
    mana = 100 + dice(3, 8);
SPELL_ANIMATE_DEAD:
    if ((obj == NULL) || (GET_OBJ_TYPE(obj) != ITEM_CONTAINER) ||
        (!GET_OBJ_VAL(obj, 3)) || (GET_OBJ_VNUM(obj) == 22300)) {
      act(mag_summon_fail_msgs[7], FALSE, ch, 0, 0, TO_CHAR);
      return;
    }
    handle_corpse = 1;
    msg = 11;
    mob_num = MOB_ZOMBIE;
SPELL_ARMOR:
    af[0].location = APPLY_AC;
    af[0].modifier = -15;
    af[0].duration = 12;
    if (affected_by_spell(victim, SPELL_ARMOR))
        af[0].duration = 6;
    accum_duration = FALSE;
    to_vict = "You feel someone protecting you.";

Backstab - see code
Bash - see code

SPELL_BLESS:
    tmp_duration = 6;
    if (affected_by_spell(victim, SPELL_BLESS))
        tmp_duration = 2;
 
    af[0].location = APPLY_HITROLL;
    af[0].modifier = 2;
    af[0].bitvector = 0;
    af[0].duration = tmp_duration;
 
    af[1].location = APPLY_SAVING_SPELL;
    af[1].modifier = -1;
    af[1].duration = tmp_duration;
 
    af[2].location = APPLY_DAMROLL;
    af[2].modifier = 1;
    af[2].bitvector = 0;
    af[2].duration = tmp_duration;
 
    to_vict = "You feel righteous.";
    accum_duration = FALSE;

SPELL_BLINDNESS:
    if (IS_AFFECTED(victim, AFF_BLIND)) {
      send_to_char("Nothing seems to happen.\r\n", ch);
      return;
    }
 
    if (!IS_SET(zone_table[world[ch->in_room].zone].zflag , ZN_PK_ALLOWED) && !IS_NPC(victim))
    {
      send_to_char("You are not allowed to Blind other players in this Zone.", ch);
      return;
    }
 
    if (MOB_FLAGGED(victim, MOB_NOBLIND)){
        send_to_char("Your victim resists.\r\n", ch);
        return;
    }
 
    if (mag_savingthrow(victim, savetype, 0)) {
      send_to_char("You fail.\r\n", ch);
      return;
    }
 
    af[0].location = APPLY_HITROLL;
    af[0].modifier = -4;
    af[0].duration = 2;
    af[0].bitvector = AFF_BLIND;
 
    af[1].location = APPLY_AC;
    af[1].modifier = 40;
    af[1].duration = 2;
    af[1].bitvector = AFF_BLIND;
 
    to_room = "$n seems to be blinded!";
    to_vict = "You have been blinded!";

SPELL_MAGIC_MISSILE:
SPELL_CHILL_TOUCH:       /* chill touch also has an affect */
      dam = dice(1, 8) + 1;

SPELL_BURNING_HANDS:
      dam = dice(3, 8) + 3;

SPELL_SHOCKING_GRASP:
      dam = dice(5, 8) + 5;

SPELL_LIGHTNING_BOLT:
      dam = dice(7, 8) + 7;

SPELL_COLOR_SPRAY:
      dam = dice(9, 8) + 9;

SPELL_FIREBALL:
      dam = dice(11, 8) + 11;

SPELL_PLASMA_BLAST:
      dam = dice(10, 10) + (level/2);

SPELL_WRAITH_TOUCH:
 
      if (!IS_SET(zone_table[world[ch->in_room].zone].zflag , ZN_PK_ALLOWED) && !IS_NPC(victim)){
        send_to_char("You cannot attack players in a NO_PKILL zone!\r\n", ch);
        return;
      }
      dam = dice(20,25) + (level*0.75);
 
      if(IS_AFFECTED(victim, AFF_SANCTUARY))
        tmpdam = dam/2;
      else
        tmpdam= dam;
      if ((GET_HIT(ch)+tmpdam)>GET_MAX_HIT(ch))
        GET_HIT(ch) = GET_MAX_HIT(ch);
      else
        GET_HIT(ch)+=tmpdam;
 
SPELL_DISPEL_EVIL:
    dam = dice(6, 8) + 6;
    if (IS_EVIL(ch)) {
      victim = ch;
      dam = GET_HIT(ch) - 1;
    } else if (IS_GOOD(victim)) {
      act("The gods protect $N.", FALSE, ch, 0, victim, TO_CHAR);
      dam = 0;
      return;
    }

SPELL_DISPEL_GOOD:
    dam = dice(6, 8) + 6;
    if (IS_GOOD(ch)) {
      victim = ch;
      dam = GET_HIT(ch) - 1;
    } else if (IS_EVIL(victim)) {
      act("The gods protect $N.", FALSE, ch, 0, victim, TO_CHAR);
      dam = 0;
      return;
    }
 
SPELL_CALL_LIGHTNING:
    dam = dice(7, 8) + 7;
 
SPELL_HARM:
    dam = dice(8, 8) + 8;
 
SPELL_FINGERDEATH:
    dam = dice(10, 20);
 
SPELL_ENERGY_DRAIN:
    if (GET_LEVEL(victim) <= 2)
      dam = 100;
    else
      dam = dice(1, 10);

SPELL_EARTHQUAKE:
    dam = dice(2, 8) + level;
 
SPELL_WHIRLWIND:
    dam = (dice(1, 3) + 4) *  level;
 
SPELL_METEOR_SWARM:
    dam = dice(11, 8) + (level*0.75);

SPELL_CLOUD_KILL:
    if (GET_LEVEL(victim) <=20) {
      GET_HIT(victim)=0;
      dam = 50;
    } else
      dam = (dice(50,16) + (level*0.75));

SPELL_CURSE:
    if (mag_savingthrow(victim, savetype, 0)) {
      send_to_char(NOEFFECT, ch);
      return;
    }
 
    af[0].location = APPLY_HITROLL;
    af[0].duration = 1 + (GET_LEVEL(ch) / 2);
    af[0].modifier = -1;
    af[0].bitvector = AFF_CURSE;
 
    af[1].location = APPLY_DAMROLL;
    af[1].duration = 1 + (GET_LEVEL(ch) / 2);
    af[1].modifier = -1;
    af[1].bitvector = AFF_CURSE;
 
    accum_duration = FALSE;
    accum_affect = FALSE;
    to_room = "$n briefly glows red!";
    to_vict = "You feel very uncomfortable.";

SPELL_DETECT_ALIGN:
    af[0].duration = 12 + level;
    af[0].bitvector = AFF_DETECT_ALIGN;
    accum_duration = FALSE;
    to_vict = "Your eyes tingle.";
 
SPELL_DETECT_INVIS:
    af[0].duration = 12 + level;
    af[0].bitvector = AFF_DETECT_INVIS;
    accum_duration = FALSE;
    to_vict = "Your eyes tingle.";
 
SPELL_DETECT_MAGIC:
    af[0].duration = 12 + level;
    af[0].bitvector = AFF_DETECT_MAGIC;
    accum_duration = FALSE;
    to_vict = "Your eyes tingle.";

SPELL_INFRAVISION:
    af[0].duration = 12 + level;
    af[0].bitvector = AFF_INFRAVISION;
    accum_duration = FALSE;
    to_vict = "Your eyes glow red.";
    to_room = "$n's eyes glow red.";
 
SPELL_INVISIBLE:
    if (!victim)
      victim = ch;
 
    af[0].duration = 12 + (GET_LEVEL(ch) / 4);
    af[0].modifier = -40;
    af[0].location = APPLY_AC;
    af[0].bitvector = AFF_INVISIBLE;
    accum_duration = FALSE;
    to_vict = "You vanish.";
    to_room = "$n slowly fades out of existence.";
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Initial import of newprimal based of circle30bpl19 base, with OLC, ec
and a start on converting primal onto the new base.
@
text
@@
