head	1.7;
access;
symbols
	rel1:1.1.1.1 prim:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2003.10.27.06.34.34;	author mud;	state Exp;
branches;
next	1.6;

1.6
date	2003.03.03.03.42.16;	author mud;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.15.03.33.57;	author primal;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.03.07.32.24;	author primal;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.09.17.40.53;	author mbd;	state Exp;
branches;
next	1.2;

1.2
date	2000.01.27.17.01.28;	author michaeld;	state Exp;
branches;
next	1.1;

1.1
date	2000.01.26.14.31.02;	author michaeld;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.01.26.14.31.02;	author michaeld;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Artus> Committing for repository backup.
@
text
@# CircleMUD 3.0 Makefile
#
# This makefile should work with no changes for compiling under SunOS, Ultrix,
# NeXTSTEP, HP/UX, DG/UX, and Linux.  If you're using AIX, IRIX, some version
# of SVR4 or Solaris, uncomment the appropriate lines below.  If you're using
# some other operating system not mentioned, just type 'make' and cross your
# fingers..

#compiler name and flags
CC = gcc
#CC = c++
MYFLAGS = -g -DANNOY_SANDII
#MYFLAGS = -g
#flags for profiling (see hacker.doc for more information)
PROFILE = 
LIBS = -lcrypt

#remove the hash marks below if compiling under AIX
#CC = cc

#remove the hash marks below if compiling under IRIX
#CC = cc -cckr -fullwarn
#MYFLAGS = -g
#LIBS = -lmalloc

#remove the hash mark below if compiling under SVR4 or Solaris, or if your
#linker complains that the socket functions such as 'connect()', 'bind()',
#etc are undefined.
#LIBS = -lsocket -lnsl

#############################################################################

CFLAGS = $(MYFLAGS) $(PROFILE)

OBJFILES = comm.o act.comm.o act.informative.o act.movement.o act.obj.o \
	act.offensive.o act.other.o act.social.o act.wizard.o ban.o boards.o \
	casino.o castle.o class.o color.o config.o constants.o db.o fight.o \
	graph.o handler.o house.o interpreter.o limits.o magic.o mail.o \
	mobact.o modify.o objsave.o shop.o spec_assign.o spec_procs.o \
	spell_parser.o spells.o utils.o weather.o 
#iedit.o  

../bin/circle.new : $(OBJFILES)

utils:
	$(MAKE) ../bin/autowiz
	$(MAKE) ../bin/delobjs
	$(MAKE) ../bin/hasmail
	$(MAKE) ../bin/listrent
	$(MAKE) ../bin/mailindex
	$(MAKE) ../bin/mudpasswd
	$(MAKE) ../bin/purgeplay
	$(MAKE) ../bin/readmail
	$(MAKE) ../bin/showplay
	$(MAKE) ../bin/sign
	$(MAKE) ../bin/split
	$(MAKE) ../bin/syntax_check

all:
	$(MAKE) ../bin/circle.new
	$(MAKE) utils

circle.new:
	$(MAKE) ../bin/circle.new
autowiz:
	$(MAKE) ../bin/autowiz
delobjs:
	$(MAKE) ../bin/delobjs
hasmail:
	$(MAKE) ../bin/hasmail
listrent:
	$(MAKE) ../bin/listrent
mailindex:
	$(MAKE) ../bin/mailindex
mudpasswd:
	$(MAKE) ../bin/mudpasswd
purgeplay:
	$(MAKE) ../bin/purgeplay
readmail:
	$(MAKE) ../bin/readmail
showplay:
	$(MAKE) ../bin/showplay
sign:
	$(MAKE) ../bin/sign
split:
	$(MAKE) ../bin/split
syntax_check:
	$(MAKE) ../bin/syntax_check

../bin/autowiz : util/autowiz.c structs.h db.h utils.h
	$(CC) $(CFLAGS) -o ../bin/autowiz util/autowiz.c
../bin/delobjs : util/delobjs.c structs.h
	$(CC) $(CFLAGS) -o ../bin/delobjs util/delobjs.c
../bin/hasmail : util/hasmail.c mail.h
	$(CC) $(CFLAGS) -o ../bin/hasmail util/hasmail.c
../bin/listrent : util/listrent.c structs.h
	$(CC) $(CFLAGS) -o ../bin/listrent util/listrent.c
../bin/mailindex : util/mailindex.c mail.h
	$(CC) $(CFLAGS) -o ../bin/mailindex util/mailindex.c
../bin/mudpasswd   : util/mudpasswd.c structs.h
	$(CC) $(CFLAGS) -o ../bin/mudpasswd util/mudpasswd.c
../bin/purgeplay : util/purgeplay.c structs.h
	$(CC) $(CFLAGS) -o ../bin/purgeplay util/purgeplay.c
../bin/readmail : util/readmail.c mail.h
	$(CC) $(CFLAGS) -o ../bin/readmail util/readmail.c
../bin/showplay : util/showplay.c structs.h
	$(CC) $(CFLAGS) -o ../bin/showplay util/showplay.c
../bin/sign: util/sign.c
	$(CC) $(CFLAGS) -o ../bin/sign $(COMMFLAGS) util/sign.c
../bin/split: util/split.c
	$(CC) $(CFLAGS) -o ../bin/split util/split.c
../bin/syntax_check: util/syntax_check.c structs.h utils.h db.h comm.h \
	handler.h
	$(CC) $(CFLAGS) -o ../bin/syntax_check util/syntax_check.c

clean:
	rm -f *.o

# Dependencies for the main mud

comm.o : comm.c structs.h utils.h comm.h interpreter.h handler.h db.h \
	house.h
	$(CC) -c $(CFLAGS) comm.c
act.comm.o : act.comm.c structs.h utils.h comm.h interpreter.h handler.h \
	db.h screen.h
	$(CC) -c $(CFLAGS) act.comm.c
act.informative.o : act.informative.c structs.h utils.h comm.h interpreter.h \
	handler.h db.h spells.h screen.h
	$(CC) -c $(CFLAGS) act.informative.c
act.movement.o : act.movement.c structs.h utils.h comm.h interpreter.h \
	handler.h db.h spells.h house.h
	$(CC) -c $(CFLAGS) act.movement.c
act.obj.o : act.obj.c structs.h utils.h comm.h interpreter.h handler.h \
	db.h spells.h screen.h
	$(CC) -c $(CFLAGS) act.obj.c
act.offensive.o : act.offensive.c structs.h utils.h comm.h interpreter.h \
	handler.h db.h spells.h screen.h
	$(CC) -c $(CFLAGS) act.offensive.c
act.other.o : act.other.c structs.h utils.h comm.h interpreter.h handler.h \
	db.h spells.h screen.h house.h
	$(CC) -c $(CFLAGS) act.other.c
act.social.o : act.social.c structs.h utils.h comm.h interpreter.h \
	handler.h db.h spells.h
	$(CC) -c $(CFLAGS) act.social.c
act.wizard.o : act.wizard.c structs.h utils.h comm.h interpreter.h \
	handler.h db.h spells.h house.h screen.h
	$(CC) -c $(CFLAGS) act.wizard.c
ban.o : ban.c structs.h utils.h comm.h interpreter.h handler.h db.h
	$(CC) -c $(CFLAGS) ban.c
boards.o : boards.c structs.h utils.h comm.h db.h boards.h interpreter.h \
	handler.h
	$(CC) -c $(CFLAGS) boards.c
casino.o : casino.c structs.h utils.h comm.h interpreter.h \
	handler.h db.h spells.h screen.h
	$(CC) -c $(CFLAGS) casino.c
castle.o : castle.c structs.h utils.h comm.h interpreter.h handler.h \
	db.h spells.h
	$(CC) -c $(CFLAGS) castle.c
class.o : class.c structs.h utils.h spells.h interpreter.h
	$(CC) -c $(CFLAGS) class.c
color.o : color.c color.h
	$(CC) -c $(CFLAGS) color.c
config.o : config.c structs.h
	$(CC) -c $(CFLAGS) config.c
constants.o : constants.c structs.h
	$(CC) -c $(CFLAGS) constants.c
db.o : db.c structs.h utils.h db.h comm.h handler.h spells.h \
	mail.h interpreter.h
	$(CC) -c $(CFLAGS) db.c
fight.o : fight.c structs.h utils.h comm.h handler.h interpreter.h db.h \
	spells.h screen.h
	$(CC) -c $(CFLAGS) fight.c
graph.o : graph.c structs.h utils.h comm.h interpreter.h handler.h db.h \
	spells.h
	$(CC) -c $(CFLAGS) graph.c
#iedit.o : iedit.c structs.h utils.h 
#	$(CC) -c $(CFLAGS) iedit.c
handler.o : handler.c structs.h utils.h comm.h db.h handler.h interpreter.h \
	spells.h 
	$(CC) -c $(CFLAGS) handler.c 
house.o : house.c structs.h comm.h handler.h db.h interpreter.h utils.h	house.h
	$(CC) -c $(CFLAGS) house.c
interpreter.o : interpreter.c structs.h comm.h interpreter.h db.h utils.h \
	spells.h handler.h mail.h screen.h
	$(CC) -c $(CFLAGS) interpreter.c 
limits.o : limits.c structs.h utils.h spells.h comm.h db.h handler.h
	$(CC) -c $(CFLAGS) limits.c
magic.o : magic.c structs.h utils.h comm.h spells.h handler.h interpreter.h \
	db.h
	$(CC) -c $(CFLAGS) magic.c 
mail.o : mail.c mail.h structs.h utils.h comm.h db.h interpreter.h handler.h
	$(CC) -c $(CFLAGS) mail.c
mobact.o : mobact.c utils.h structs.h db.h comm.h interpreter.h handler.h \
	spells.h
	$(CC) -c $(CFLAGS) mobact.c
modify.o : modify.c structs.h utils.h interpreter.h handler.h db.h comm.h \
	spells.h mail.h boards.h color.h
	$(CC) -c $(CFLAGS) modify.c
objsave.o : objsave.c structs.h comm.h handler.h db.h interpreter.h utils.h \
	spells.h screen.h
	$(CC) -c $(CFLAGS) objsave.c
shop.o : shop.c structs.h comm.h handler.h db.h interpreter.h utils.h shop.h \
	screen.h
	$(CC) -c $(CFLAGS) shop.c
spec_assign.o : spec_assign.c structs.h db.h interpreter.h utils.h
	$(CC) -c $(CFLAGS) spec_assign.c
spec_procs.o : spec_procs.c structs.h utils.h comm.h interpreter.h \
	handler.h db.h spells.h
	$(CC) -c $(CFLAGS) spec_procs.c
spell_parser.o : spell_parser.c structs.h utils.h comm.h db.h interpreter.h \
	spells.h handler.h
	$(CC) -c $(CFLAGS) spell_parser.c 
spells.o : spells.c structs.h utils.h comm.h db.h interpreter.h spells.h \
	handler.h
	$(CC) -c $(CFLAGS) spells.c 
utils.o : utils.c structs.h utils.h db.h comm.h screen.h
	$(CC) -c $(CFLAGS) utils.c
weather.o : weather.c structs.h utils.h comm.h handler.h interpreter.h db.h
	$(CC) -c $(CFLAGS) weather.c
../bin/circle.new :
	$(CC) -o ../bin/circle.new $(PROFILE) $(OBJFILES) $(LIBS)
@


1.6
log
@JLK> Annoy Sandii Code (#def'ed out ;o)
     Now logging environmental kills (Behind Heater, Vacuum, Desert, etc.)
     Some specproc fixes someone else (who?) made.
     Modified version string to datestamp it. [XYYYYMMDDHHmm] where X is first
       letter of nick modified.. Should be OKAY.. A=Art, J=John, D=DM, M=Murf,
       T=Tali.. works for me..
     Cream command.. I think I may have done this?.. Amusing nonetheless.
@
text
@d12 2
a13 2
# MYFLAGS = -g -DANNOY_SANDII
MYFLAGS = -g
@


1.5
log
@Artus> Mainly bugfixes and crap. Reminder to remove the stuff in
act.informative.c at some point. Search for 'ASS', you'll know what i'm
talking about :o)
@
text
@d12 1
@


1.4
log
@Changed:
- Fixed the jedi guard - made him also push ppl over
- The makefile - added -lcrypt to the LIBS variable
@
text
@d15 1
a15 1
LIBS = -lcrypt 
@


1.3
log
@

Changed:
- Stuff as a a result of putting repository on my pc - couple of bug fixes - ie deadly blade, number(from,to) checking etc ...
-

TODO:
- improved-edit bug fixes
-
@
text
@d15 1
a15 1
LIBS = 
@


1.2
log
@Fixes to compile correctly on venus.
@
text
@d15 1
a15 1
LIBS = -lcrypt
@


1.1
log
@Initial revision
@
text
@d12 1
a12 2
MYFLAGS = -g -Wall

d15 1
@


1.1.1.1
log
@Intial Import of Source
@
text
@@
