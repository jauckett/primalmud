head     1.1;
branch   1.1.1;
access   ;
symbols  rel1:1.1.1.1 prim:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     2000.01.26.14.31.02;  author michaeld;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2000.01.26.14.31.02;  author michaeld;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@
/* JA 8/3/95 added some code for bank transaction fees */
    GET_GOLD(ch) -= amount;
    fee = (amount * percent) /100;
    if (fee<10)
      fee=10;
    GET_BANK_GOLD(ch) += amount;
    GET_BANK_GOLD(ch) -= fee;
    sprintf(buf, "You deposit %d coins.\r\n", amount);
    send_to_char(buf, ch);
    sprintf(buf, "The transaction fee is %d percent which is %d coins", percent, fee);
    send_to_char(buf, ch);
    act("$n makes a bank transaction.", TRUE, ch, 0, FALSE, TO_ROOM);
    return 1;
  } else if (CMD_IS("withdraw")) {
    if ((amount = atoi(argument)) <= 0) {
      send_to_char("How much do you want to withdraw?\r\n", ch);
      return 1;
    }
    if (GET_BANK_GOLD(ch) < amount) {
      send_to_char("You don't have that many coins deposited!\r\n", ch);
      return 1;
    }
    GET_GOLD(ch) += amount;
/*    fee = (amount * percent) / 100;
    GET_GOLD(ch) -= fee;*/
    GET_BANK_GOLD(ch) -= amount;
    sprintf(buf, "You withdraw %d coins.\r\n", amount);
    send_to_char(buf, ch);
/*    sprintf(buf, "The transaction fee is %d percent which is %d coins", percent, fee);
    send_to_char(buf, ch);*/
    act("$n makes a bank transaction.", TRUE, ch, 0, FALSE, TO_ROOM);
    return 1;
  } else
    return 0;

@


1.1.1.1
log
@Intial Import of Source
@
text
@@
