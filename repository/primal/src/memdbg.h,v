head     1.1;
branch   1.1.1;
access   ;
symbols  rel1:1.1.1.1 prim:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     2000.01.26.14.31.02;  author michaeld;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2000.01.26.14.31.02;  author michaeld;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@/*----------------------------------------------------------------------
 *++
 *  mshell.h -- Dynamic memory handler interface
 *  Description: mshell.h provides the interface definitions for the dynamic
 *  memory handler.
 *  See mshell.c for complete documentation.
 *+-
 *  $Log: memdbg.h,v $
 *  Revision 1.1  1997/04/23 08:22:30  root
 *  Initial revision
 *
 *--
 */

/* Compilation options */
#define MEM_LIST      /* Build internal list */
#define MEM_WHERE      /* Keep track of memory block source */

/* Interface functions */
unsigned long   Mem_Used(void) ;
void      Mem_Display(FILE *) ;

/* Interface functions to access only through macros */
#if defined(MEM_WHERE)
void      *mem_alloc(size_t, char *, int) ;
void      *mem_realloc(void *, size_t, char *, int) ;
void      mem_free(void *, char *, int) ;
char      *mem_strdup(char *, char *, int) ;
#else
void      *mem_alloc(size_t) ;
void      *mem_realloc(void *, size_t) ;
void      mem_free(void *) ;
char      *mem_strdup(char *) ;
#endif

/* Interface macros */
#if !defined(__MSHELL__)
#if defined(MEM_WHERE)
#define malloc(a)      mem_alloc((a),__FILE__,__LINE__)
#define realloc(a,b)      mem_realloc((a),(b),__FILE__,__LINE__)
#define free(a)         mem_free((a),__FILE__,__LINE__)
#define strdup(a)      mem_strdup((a),__FILE__,__LINE__)
#else
#define malloc(a)      mem_alloc(a)
#define realloc(a, b)      mem_realloc((a),(b))
#define free(a)         mem_free(a)
#define strdup(a)      mem_strdup(a)
#endif
#endif

/*----------------------------------------------------------------------*/

@


1.1.1.1
log
@Intial Import of Source
@
text
@@
